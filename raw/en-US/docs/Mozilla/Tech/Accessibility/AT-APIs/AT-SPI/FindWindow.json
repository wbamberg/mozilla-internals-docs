{
    "content": "<p> </p>\n<h2 id=\"How_to_Find_the_Content_Window_and_Load_the_Document_using_AT-SPI\" name=\"How_to_Find_the_Content_Window_and_Load_the_Document_using_AT-SPI\"> How to Find the Content Window and Load the Document using AT-SPI </h2>\n<p>In XUL-based clients, screen readers may need to find the content window so that they know where to start grabbing the AT-SPI tree, in order to load the current document into a buffer in their own process.\n</p><p>Use <a class=\"external\" href=\"http://www.mozilla.org/access/unix/atspi-support#relation_embeds\">RELATION_EMBEDS</a> on the ROLE_FRAME, which is at the root of each top level window. This will point to the root content accessible(s) for that XUL window.\n</p><p>When you see the content window receive focus, first check the role. If it is a ROLE_DOCUMENT_FRAME then this should be treated as a document for the default modality of the screen reader. If it is a ROLE_EMBEDDED, ROLE_DIALOG or ROLE_ALERT then stay in focus tracking mode -- there is no need to parse the document. In addition, if it is a ROLE_ALERT, a screen reader should treat it as a message box -- that is, to read the entire contents. These roles can occur on content because of the new <a class=\"external\" href=\"http://developer.mozilla.org/en/docs/Accessible_DHTML\">Accessible DHTML technology</a> which allows the author to specify the type of document or container.\n</p><p>Gecko also helps determine when to load a new window by firing the following document events: document:load-complete, document:reload and document:load-stopped\n</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ExE-Boss\">ExE-Boss</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Surkov.alexander\">Surkov.alexander</a>",
    "title": "Find the Window and Load the Document "
}