{
    "content": "<div><div class=\"prevnext\" style=\"text-align: right;\">\n    <p><a href=\"/en-US/docs/XUL/Template_Guide/Sorting_Results\" style=\"float: left;\">« Previous</a><a href=\"/en-US/docs/XUL/Template_Guide/Template_Logging\">Next  »</a></p>\n</div></div>\n\n<h2 id=\"Referencing_Templates\" name=\"Referencing_Templates\">Referencing Templates</h2>\n<p>All the templates used so far have had the <code><a href=\"/en-US/docs/Mozilla/Tech/XUL/template\" title=\"template\">template</a></code> placed inside the root element with the <code id=\"a-datasources\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/datasources\">datasources</a></code> attribute. However, you may use the template attribute to refer to a template located elsewhere within the document. This allows you to share the same template among two different parts of the user interface. To use this technique, place a <code id=\"a-template\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/template\">template</a></code> attribute on the root element set to the id of a template.</p>\n\n<pre class=\"brush:xml\">&lt;listbox datasources=\"template-guide-photos5.rdf\"\n            ref=\"http://www.xulplanet.com/rdf/myphotos\"\n            template=\"photoTemplate\"/&gt;\n...\n&lt;template id=\"photoTemplate\"&gt;\n  ...\n&lt;/template&gt;</pre>\n\n<p>This template will be shared with any other element that references the id 'photoTemplate'. The listbox here does not have any children, although it may do. If you did add children, they act just like the static content as if the template was present. However, it is possible to use different static content for each usage, even though the template is shared. The datasources and ref attributes also differ for each usage, so it is possible to use a shared template to display the same structure multiple times but with different starting nodes in each case. The generated content is always inserted into the root node, in this example the <code><a href=\"/en-US/docs/Mozilla/Tech/XUL/listbox\" title=\"listbox\">listbox</a></code>, not inside the template.</p>\n\n<h2 id=\"Declaring_the_Container_and_Member_Variables\" name=\"Declaring_the_Container_and_Member_Variables\">Declaring the Container and Member Variables</h2>\n\n<p>Normally, the container and member variables are determined by the template builder automatically. The container or starting node variable is specified in the &lt;content&gt; tag inside a query, while the member variable is determined by the value of the uri attribute inside the action body. It is also possible to be explicit about the two variables by using two attributes on the &lt;template&gt; element.</p>\n\n<pre>&lt;template container=\"?first\" member=\"?item\"&gt;</pre>\n\n<p>The container and member attributes can be used to specify the container and member variables. This isn't particularly useful although there is a very slight optimization since the builder does not need to scan the action body looking for the member variable when compiling the queries and rules. You might also use these attributes just to make the code clearer when using very complex queries.</p>\n\n<p>One possible advantage is when using the simple RDF query syntax where you don't specify variables; instead you use the special 'rdf:*' syntax for the member variable and the container is implied. By using the container and member attributes, you can use specific variables instead.</p>\n\n<pre class=\"brush:xml\">&lt;hbox datasources=\"template-guide-photos5.rdf\"\n      ref=\"http://www.xulplanet.com/rdf/myphotos\"&gt;\n  &lt;template container=\"?start\" member=\"?photo\"&gt;\n    &lt;rule&gt;\n      &lt;image uri=\"?photo\" src=\"?photo\"/&gt;\n    &lt;/rule&gt;\n  &lt;/template&gt;\n&lt;/hbox&gt;</pre>\n\n<p>In <a class=\"external\" href=\"/samples/xultemp/template-guide-ex43.xul\">this example</a>, the ?photo variable can be used instead of 'rdf:*' (although you can use either even if you specify the member variable). This may make the code clearer as to its function. We could use the container variable ?start in the action body also. If you are using the simple syntax and want to use the container variable in the content, you must use the container attribute since there is no other way to refer to it. Note also that a <code><a href=\"/en-US/docs/Mozilla/Tech/XUL/rule\" title=\"rule\">rule</a></code> element is needed here, otherwise the builder will think the container and member attributes are conditions to check.</p>\n\n\n<div><div class=\"prevnext\" style=\"text-align: right;\">\n    <p><a href=\"/en-US/docs/XUL/Template_Guide/Sorting_Results\" style=\"float: left;\">« Previous</a><a href=\"/en-US/docs/XUL/Template_Guide/Template_Logging\">Next  »</a></p>\n</div></div>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ethertank\">ethertank</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Enn\">Enn</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Brettz9\">Brettz9</a>",
    "title": "Additional Template Attributes"
}