{
    "content": "<p>\n</p><div class=\"prevnext\" style=\"text-align: right;\">\n    <p><a href=\"/en-US/docs/XUL:Template_Guide:Building_Trees\" style=\"float: left;\">« Previous</a><a href=\"/en-US/docs/XUL:Template_Guide:Template_Builder_Interface\">Next  »</a></p>\n</div>\nA template may be used to generate hierarchical trees. This works just like with recursive generation using the content builder. Each level of the tree is created using a successive iteration of the template build process. If the items are containers, the tree builder will mark the right rows as containers, so that they can be opened and closed with the small icon twisties on the left of the column. Remember to make the left column the primary column for these to appear.\n<p></p><p>To be able to do this, the tree builder must know that an item is a container. With an RDF datasource, this would usually be an RDF container such as a Seq and the tree would display its children. For an XML datasource, the tree might display a node's children as the children in the tree, making the tree display a hierarchy similar to that in the XML document. Or, with more complex XPath expressions, a template could display a tree where the hierarchy wasn't directly like the XML document.\n</p><p>If a node is a container, the tree item becomes a container, and the user may open the row by double-clicking it. Note that this test is done on the member value not the reference value. For instance, in the photo example, we have a container '<span class=\"nowiki\">http://www.xulplanet.com/rdf/myphotos</span>' with three photos. Three results will be generated from a simple rule with no extra conditions. It is the result, or the photo, that will be checked, not the container of photos. Since a photo isn't a container, the tree rows will not become containers, so you will not be able to open them. As the rows are not containers, the tree builder does not recurse to find additional data. The tree builder creates rows lazily, so a closed container will not have any data generated inside in it until the row is opened. When the user opens the tree row, the next level of rows are generated from the template and displayed in the tree. Similarly, when the user closes a tree row, the rows inside it are removed, such that they will have to be generated again the next time the row is opened.\n</p><p>If you want to put rows inside the photo rows, you will either need to make each photo resource a container (for this RDF datasource, this will usually be an RDF Seq), or use the containment attribute to specify additional properties that indicate containership. If a particular photo had a value for one of the properties listed in the containment attribute, it would be accepted as a container, and the user could open the row. When the user opens the row, the template will be re-examined for results using the photo as the starting point instead of the top level ref value.\n</p><p>Here is an example for the <a class=\"external\" href=\"http://developer.mozilla.org/samples/xultemp/template-guide-streets.rdf\">streets datasource</a>:\n</p>\n<pre>&lt;tree flex=\"1\" datasources=\"template-guide-streets.rdf\"\n      ref=\"http://www.xulplanet.com/rdf/myneighbourhood\" flags=\"dont-build-content\"\n      xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"&gt;\n  &lt;treecols&gt;\n    &lt;treecol id=\"address\" primary=\"true\" label=\"Address\" flex=\"1\"/&gt;\n    &lt;treecol id=\"floors\" label=\"Floors\" flex=\"1\"/&gt;\n  &lt;/treecols&gt;\n  &lt;template&gt;\n    &lt;rule rdf:type=\"http://www.xulplanet.com/rdf/House\"&gt;\n      &lt;treechildren&gt;\n        &lt;treeitem uri=\"rdf:*\"&gt;\n          &lt;treerow&gt;\n            &lt;treecell label=\"rdf:http://www.xulplanet.com/rdf/address\"/&gt;\n            &lt;treecell label=\"rdf:http://www.xulplanet.com/rdf/floors\"/&gt;\n          &lt;/treerow&gt;\n        &lt;/treeitem&gt;\n      &lt;/treechildren&gt;\n    &lt;/rule&gt;\n    &lt;rule&gt;\n      &lt;treechildren&gt;\n        &lt;treeitem uri=\"rdf:*\"&gt;\n          &lt;treerow&gt;\n            &lt;treecell label=\"rdf:http://purl.org/dc/elements/1.1/title\"/&gt;\n          &lt;/treerow&gt;\n        &lt;/treeitem&gt;\n      &lt;/treechildren&gt;\n    &lt;/rule&gt;\n  &lt;/template&gt;\n&lt;/tree&gt;\n</pre>\n<p>The first rule is for the houses as indicated by the rule's condition and the second rule is for the streets. As shown in the snippet of the data below, the street is a Seq, so it will become a container. The houses are not containers, so they will not have children in the tree.\n</p>\n<pre>&lt;rdf:Bag rdf:about=\"http://www.xulplanet.com/rdf/myneighbourhood\"&gt;\n  &lt;rdf:li&gt;\n    &lt;rdf:Seq rdf:about=\"http://www.xulplanet.com/rdf/marion\"\n               dc:title=\"Marion Street\"&gt;\n</pre>\n<p>The result is a <a class=\"external\" href=\"http://developer.mozilla.org/samples/xultemp/template-guide-ex32.xul\">two level tree with two columns</a>.\n</p><p>For an XML source, a container is a node in the XML document that has children. In <a class=\"external\" href=\"http://developer.mozilla.org/samples/xultemp/template-guide-ex32b.xul\">this example</a>, the two group elements are displayed at the first level. The individual people are displayed at the next level of the tree as the builder recurses. In this example, we only need to use one rule.\n</p>\n<pre>&lt;tree datasources=\"people2.xml\" ref=\"*\" querytype=\"xml\"\n      rows=\"10\" flags=\"dont-build-content\"&gt;\n  &lt;treecols&gt;\n    &lt;treecol id=\"name\" primary=\"true\" label=\"Name\" flex=\"1\"/&gt;\n  &lt;/treecols&gt;\n  &lt;template&gt;\n    &lt;query expr=\"*\"/&gt;\n    &lt;action&gt;\n      &lt;treechildren&gt;\n        &lt;treeitem uri=\"?\"&gt;\n          &lt;treerow&gt;\n            &lt;treecell label=\"?name\"/&gt;\n          &lt;/treerow&gt;\n        &lt;/treeitem&gt;\n      &lt;/treechildren&gt;\n    &lt;/action&gt;\n  &lt;/template&gt;\n&lt;/tree&gt;\n</pre>\n<p></p><div class=\"prevnext\" style=\"text-align: right;\">\n    <p><a href=\"/en-US/docs/XUL:Template_Guide:Building_Trees\" style=\"float: left;\">« Previous</a><a href=\"/en-US/docs/XUL:Template_Guide:Template_Builder_Interface\">Next  »</a></p>\n</div>\n<p></p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Enn\">Enn</a>",
    "title": "Building Hierarchical Trees"
}