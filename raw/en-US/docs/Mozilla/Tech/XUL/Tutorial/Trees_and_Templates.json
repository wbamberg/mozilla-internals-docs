{
    "content": "<p></p><div class=\"prevnext\" style=\"text-align: right;\">\n    <p><a href=\"/en-US/docs/XUL_Tutorial:Templates\" style=\"float: left;\">« Previous</a><a href=\"/en-US/docs/XUL_Tutorial:RDF_Datasources\">Next  »</a></p>\n</div><p></p>\n<p>The following describes how to use a template with a tree.</p>\n<h3 id=\"Adding_Datasources_to_Trees\" name=\"Adding_Datasources_to_Trees\">Adding Datasources to Trees</h3>\n<p>When using a tree, you will often use a template to build its content, to handle a large amount of hierarchial data. Using a template with a tree uses very much the same syntax as with other elements. You need to add a <code><code id=\"a-datasources\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/datasources\">datasources</a></code></code> and a <code><code id=\"a-ref\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/ref\">ref</a></code></code> attribute to the <code><code><a href=\"/en-US/docs/Mozilla/Tech/XUL/tree\" title=\"tree\">tree</a></code></code> element, which specify the datasource and root node to display. Multiple rules can be used to indicate different content for different types of data.</p>\n<p>The following example uses the history datasource:</p>\n<pre>&lt;tree datasources=\"rdf:history\" ref=\"NC:HistoryByDate\"\n          flags=\"dont-build-content\"&gt;\n</pre>\n<p>As described in the previous section, the tree may use a tree builder for template generation instead of the normal content builder. This means that elements will not be created for every row in the tree, making it more efficient. The <code><code id=\"a-flags\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/flags\">flags</a></code></code> attribute set to the value <code>dont-build-content</code>, as used in the example above, indicates that the tree builder should be used. If you leave the attribute out, the content builder will be used. You can see the difference by using Mozilla's DOM Inspector on a tree with and without the flag.</p>\n<p>If you do use a content builder instead, note that the content won't generally get built until it is needed. With hierarchical trees, the children don't get generated until the parent nodes have been opened by the user.</p>\n<p>In the template, there will be one <code><code><a href=\"/en-US/docs/Mozilla/Tech/XUL/treecell\" title=\"treecell\">treecell</a></code></code> for each column in the tree. The cells should have a <code><code id=\"a-label\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/label\">label</a></code></code> attribute to set the label for the cell. This would normally be set to an RDF property so that the label is pulled from the datasource.</p>\n<h4 id=\"Template-built_Tree_Example\" name=\"Template-built_Tree_Example\">Template-built Tree Example</h4>\n<p>The following example demonstrates a template-built tree, in this case for the file system.</p>\n<p><span id=\"Example_1\"><a id=\"Example_1\"></a><strong>Example 1</strong></span> : <a href=\"https://developer.mozilla.org/samples/xultu/examples/ex_treetempl_1.xul.txt\">Source</a></p>\n<pre>&lt;tree id=\"my-tree\" flex=\"1\"\n       datasources=\"rdf:files\" ref=\"NC:FilesRoot\" flags=\"dont-build-content\"&gt;\n  &lt;treecols&gt;\n    &lt;treecol id=\"Name\" label=\"Name\" primary=\"true\" flex=\"1\"/&gt;\n    &lt;splitter/&gt;\n    &lt;treecol id=\"Date\" label=\"Date\" flex=\"1\"/&gt;\n  &lt;/treecols&gt;\n\n    &lt;template&gt;\n      &lt;rule&gt;\n        &lt;treechildren&gt;\n          &lt;treeitem uri=\"rdf:*\"&gt;\n            &lt;treerow&gt;\n              &lt;treecell label=\"rdf:http://home.netscape.com/NC-rdf#Name\"/&gt;\n              &lt;treecell label=\"rdf:http://home.netscape.com/WEB-rdf#LastModifiedDate\"/&gt;\n            &lt;/treerow&gt;\n          &lt;/treeitem&gt;\n        &lt;/treechildren&gt;\n      &lt;/rule&gt;\n    &lt;/template&gt;\n&lt;/tree&gt;\n</pre>\n<p>Here, a tree is created with two columns, for the name and date of a file. The tree should display a list of the files in the root directory. Only one rule is used, but you may add others if needed. Like with other templates, the uri attribute on an element indicates where to start generating content. The two cells grab the name and date from the datasource and place the values in the cell labels.</p>\n<p>This example shows why the uri attribute becomes useful. Notice how it has been placed on the treeitem in the example, even though it is not a direct descendant of the rule element. We need to put this attribute on only those elements that we want repeated for each resource. Because we don't want multiple <code><code><a href=\"/en-US/docs/Mozilla/Tech/XUL/treechildren\" title=\"treechildren\">treechildren</a></code></code> elements, we don't put it there. Instead we put the <code><code id=\"a-uri\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/uri\">uri</a></code></code> attributes on the <code><code><a href=\"/en-US/docs/Mozilla/Tech/XUL/treeitem\" title=\"treeitem\">treeitem</a></code></code> elements. Effectively, the elements outside (or above) the element with the <code><code id=\"a-uri\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/uri\">uri</a></code></code> attribute are not duplicated whereas the element with the <code><code id=\"a-uri\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/uri\">uri</a></code></code> attribute and the elements inside it are duplicated for each resource.</p>\n<p>As the tree builder is used and not the content builder, the structure of the elements in the above example must be as shown, with the <code><code><a href=\"/en-US/docs/Mozilla/Tech/XUL/treechildren\" title=\"treechildren\">treechildren</a></code></code> element inside the rule. Although the tree builder doesn't build these elements, it does require this structure in order to determine what to generate correctly.</p>\n<div class=\"float-right\">\n  <img alt=\"Image:rdfoutl1.jpg\" class=\"internal\" src=\"/@api/deki/files/822/=Rdfoutl1.jpg\"></div>\n<p>Note in the image that additional child elements below the top-level elements have been added automatically. XUL knows how to add child elements when the templates or rules contain tree elements or menu elements. It will generate tree elements as nested as necessary based on the available RDF data.</p>\n<p>An interesting part of RDF datasources is that the resource values are only determined when the data is needed. This means that values that are deeper in the resource hierarchy are not determined until the user navigates to that node in the tree. This becomes useful for certain datasources where the data is determined dynamically.</p>\n<h3 id=\"Sorting_Columns\" name=\"Sorting_Columns\">Sorting Columns</h3>\n<p>If you try the previous example, you might note that the list of files is not sorted. Trees which generate their data from a datasource have the optional ability to sort their data. You can sort either ascending or descending on any column. The user may change the sort column and direction by clicking the column headers. This sorting feature is not available for trees with static content, although you can write a script to sort the data.</p>\n<p>Sorting involves three attributes, which should be placed on the columns. The first attribute, sort, should be set to an RDF property that is used as the sort key. Usually, this would be the same as that used in the label of the cell in that column. If you set this on a column, the data will be sorted in that column. The user can change the sort direction by clicking the column header. If you do not set the sort attribute on a column, the data cannot be sorted by that column.</p>\n<p>The <code>sortDirection</code> attribute (note the mixed case) is used to set the direction in which the column will be sorted by default. Three values are possible:</p>\n<dl>\n  <dt>\n    ascending </dt>\n  <dd>\n    the data is displayed is ascending order.</dd>\n  <dt>\n    descending </dt>\n  <dd>\n    the data is displayed is descending order.</dd>\n  <dt>\n    natural </dt>\n  <dd>\n    the data is displayed in natural order, which means the order the data is stored in the RDF datasource.</dd>\n</dl>\n<p>The final attribute, <code>sortActive</code> should be set to <code>true</code> for one column, the one that you would like to be sorted by default.</p>\n<p>The following example changes the columns in the earlier example to incorporate the extra features:</p>\n<pre>&lt;treecols&gt;\n  &lt;treecol id=\"Name\" label=\"Name\" flex=\"1\" primary=\"true\"\n            sortActive=\"true\" sortDirection=\"ascending\"\n            sort=\"rdf:http://home.netscape.com/NC-rdf#Name\"/&gt;\n  &lt;splitter/&gt;\n  &lt;treecol id=\"Date\" label=\"Date\" flex=\"1\"\n           sort=\"rdf:http://home.netscape.com/WEB-rdf#LastModifiedDate\"/&gt;\n&lt;/treecols&gt;\n</pre>\n<h3 id=\"Persisting_Column_State\" name=\"Persisting_Column_State\">Persisting Column State</h3>\n<p>One additional thing you might want to do is persist which column is currently sorted, so that it is remembered between sessions. To do this, we use the <code><code id=\"a-persist\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/persist\">persist</a></code></code> attribute on each <code><code><a href=\"/en-US/docs/Mozilla/Tech/XUL/treecol\" title=\"treecol\">treecol</a></code></code> element. There are five attributes of columns that need to be persisted, to save the column width, the column order, whether the column is visible, which column is currently sorted and the sort direction. The following example shows a sample column:</p>\n<pre>&lt;treecol id=\"Date\" label=\"Date\" flex=\"1\"\n             persist=\"width ordinal hidden sortActive sortDirection\"\n             sort=\"rdf:http://home.netscape.com/WEB-rdf#LastModifiedDate\"/&gt;\n</pre>\n<p>More details about the <code><code id=\"a-persist\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/Attribute/persist\">persist</a></code></code> attribute will be described in <a href=\"/en/XUL_Tutorial/Persistent_Data\" title=\"en/XUL_Tutorial/Persistent_Data\">the later section</a>.</p>\n<h3 id=\"Additional_Rule_Attributes\" name=\"Additional_Rule_Attributes\">Additional Rule Attributes</h3>\n<p>There are two additional attributes that can be added to the <code>rule</code> element that allow it to match in certain special circumstances. Both are boolean attributes.</p>\n<dl>\n  <dt>\n    iscontainer</dt>\n  <dd>\n    If this attribute is set to <code>true</code>, then the rule will match all resources that have children. For example, we could use this rule to match bookmark folders. This is convenient as the RDF datasource does not need to include any special attributes to indicate this.</dd>\n</dl>\n<dl>\n  <dt>\n    isempty</dt>\n  <dd>\n    If this attribute is set to <code>true</code>, then the rule will match all resources that have no children.</dd>\n</dl>\n<p>A resource might be a container and be an empty one as well. However, this is different from a resource that is not a container. For example, a bookmark folder is a container but it might or might not have children. However a single bookmark or separator is not a container.</p>\n<p>You can combine these two elements with other attribute matches for more specific rules.</p>\n<p>Next, we'll look at some of the datasources provided by Mozilla.</p>\n<p></p><div class=\"prevnext\" style=\"text-align: right;\">\n    <p><a href=\"/en-US/docs/XUL_Tutorial:Templates\" style=\"float: left;\">« Previous</a><a href=\"/en-US/docs/XUL_Tutorial:RDF_Datasources\">Next  »</a></p>\n</div><p></p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dongdong\">Dongdong</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Chbok\">Chbok</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mgjbot\">Mgjbot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Jjinux\">Jjinux</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Morishoji\">Morishoji</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Enn\">Enn</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Pmash\">Pmash</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Ptak82\">Ptak82</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dria\">Dria</a>",
    "title": "Trees and Templates"
}