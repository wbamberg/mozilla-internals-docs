{
    "content": "<p>Extensions and XUL applications can modify the way command line parameters are handled by writing a component that implements the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICommandLineHandler\" title=\"\">nsICommandLineHandler</a></code> interface and registering it in a category.</p>\n\n<div class=\"note\">\n<p>See also: <a href=\"/en-US/docs/XULRunner:CommandLine\" title=\"/en-US/docs/XULRunner:CommandLine\">XULRunner:CommandLine</a></p>\n</div>\n\n<h2 id=\"Overview\" name=\"Overview\">Overview</h2>\n\n<p>The code below is an example of writing a JavaScript XPCOM component to handle command line parameters.</p>\n\n<p>You can learn more about how the command line is interpreted by looking at the documentation for the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICommandLine\" title=\"\">nsICommandLine</a></code> interface.</p>\n\n<h2 id=\"Sample_Code\" name=\"Sample_Code\">Example</h2>\n\n<p>The below example component implements two command line parameters:</p>\n\n<dl>\n <dt><code>firefox.exe -myapp</code></dt>\n <dd>Opens a chrome window for My Application.  </dd>\n <dt><code>firefox.exe -viewapp <var>url</var></code></dt>\n <dd>Opens a chrome window for My Application and passes it an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code> object.</dd>\n</dl>\n\n<h3 id=\"Using_the_example\">Using the example</h3>\n\n<p>To use this sample code, save the <code>commandLine.js file</code> into the components directory and add the following lines to your <code>chrome.manifest</code> file:</p>\n\n<pre>component {2991c315-b871-42cd-b33f-bfee4fcbf682} components/commandLine.js\ncontract @mozilla.org/commandlinehandler/general-startup;1?type=myapp {2991c315-b871-42cd-b33f-bfee4fcbf682}\ncategory command-line-handler m-myapp @mozilla.org/commandlinehandler/general-startup;1?type=myapp\n</pre>\n\n<h3 id=\"The_JavaScript_code\">The JavaScript code</h3>\n\n<pre class=\"brush: js\">const Cc = Components.classes;\nconst Ci = Components.interfaces;\n\nComponents.utils.import(\"<a class=\"external\" rel=\"freelink\">resource://gre/modules/XPCOMUtils.jsm</a>\");\nComponents.utils.import(\"<a class=\"external\" rel=\"freelink\">resource://gre/modules/Services.jsm</a>\");\n\n// CHANGEME: to the chrome URI of your extension or application\nconst CHROME_URI = \"<a class=\"external\" rel=\"freelink\">chrome://myapp/content/</a>\";\n\n/**\n * Utility functions\n */\n\n/**\n * Opens a chrome window.\n * @param aChromeURISpec a string specifying the URI of the window to open.\n * @param aArgument an argument to pass to the window (may be null)\n */\nfunction openWindow(aChromeURISpec, aArgument)\n{\n  Services.ww.openWindow(null, aChromeURISpec, \"_blank\",\n                \"chrome,menubar,toolbar,status,resizable,dialog=no\",\n                aArgument);\n}\n\n// Command Line Handler\nfunction CommandLineHandler() {\n};\n\nCommandLineHandler.prototype = {\n  classDescription: \"myAppHandler\",\n  // CHANGEME: generate a unique ID\n  classID: Components.ID('{2991c315-b871-42cd-b33f-bfee4fcbf682}'),\n  // CHANGEME: change the type in the contractID to be unique to your application\n  contractID: \"@mozilla.org/commandlinehandler/general-startup;1?type=myapp\",\n  _xpcom_categories: [{\n    category: \"command-line-handler\",\n    // CHANGEME:\n    // category names are sorted alphabetically. Typical command-line handlers use a\n    // category that begins with the letter \"m\".\n    entry: \"m-myapp\"\n  }],\n\n  QueryInterface: XPCOMUtils.generateQI([\n    Ci.nsICommandLineHandler\n  ]),\n\n  /* nsICommandLineHandler */\n  handle : function clh_handle(cmdLine)\n  {\n    try {\n      // CHANGEME: change \"viewapp\" to your command line flag that takes an argument\n      var uristr = cmdLine.handleFlagWithParam(\"viewapp\", false);\n      if (uristr) {\n        // convert uristr to an nsIURI\n        var uri = cmdLine.resolveURI(uristr);\n        openWindow(CHROME_URI, uri);\n        cmdLine.preventDefault = true;\n      }\n    }\n    catch (e) {\n      Components.utils.reportError(\"incorrect parameter passed to -viewapp on the command line.\");\n    }\n\n    // CHANGEME: change \"myapp\" to your command line flag (no argument)\n    if (cmdLine.handleFlag(\"myapp\", false)) {\n      openWindow(CHROME_URI, null);\n      cmdLine.preventDefault = true;\n    }\n  },\n\n  // CHANGEME: change the help info as appropriate, but\n  // follow the guidelines in nsICommandLineHandler.idl\n  // specifically, flag descriptions should start at\n  // character 24, and lines should be wrapped at\n  // 72 characters with embedded newlines,\n  // and finally, the string should end with a newline\n  helpInfo : \"  -myapp               Open My Application\\n\" +\n             \"  -viewapp &lt;uri&gt;       View and edit the URI in My Application,\\n\" +\n             \"                       wrapping this description\\n\"\n};\n\nvar NSGetFactory = XPCOMUtils.generateNSGetFactory([CommandLineHandler]);\n</pre>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SphinxKnight\">SphinxKnight</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/MatthewKastor\">MatthewKastor</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Kastor\">Kastor</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/MKaply\">MKaply</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ericjung\">ericjung</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/bsmedberg\">bsmedberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/T-timmy\">T-timmy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mgjbot\">Mgjbot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dougkramer\">Dougkramer</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Ptak82\">Ptak82</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/OwjS26\">OwjS26</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/RjhAq8\">RjhAq8</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/BayKb3\">BayKb3</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mzarathustra\">Mzarathustra</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Ted_Mielczarek\">Ted_Mielczarek</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/NickolayBot\">NickolayBot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Andreas%20Wuest\">Andreas Wuest</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Phreed\">Phreed</a>",
    "title": "Providing Command-Line Options"
}