{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/js/src/xpconnect/idl/nsIDispatchSupport.idl\" rel=\"custom\">js/src/xpconnect/idl/nsIDispatchSupport.idl</a></code><span style=\"text-align: right; float: right;\"><span style=\"color: #cc0000; font-weight: 700;\">Not scriptable</span></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#COMVariant2JSVal()\">COMVariant2JSVal</a>(in COMVARIANTPtr comvar, out jsval val);</code></td> </tr> <tr> <td><code>unsigned long <a href=\"#getHostingFlags()\">getHostingFlags</a>(in string aContext);</code></td> </tr> <tr> <td><code>boolean <a href=\"#isClassMarkedSafeForScripting()\">isClassMarkedSafeForScripting</a>(in nsCIDRef cid, out boolean classExists);</code></td> </tr> <tr> <td><code>boolean <a href=\"#isClassSafeToHost()\">isClassSafeToHost</a>(in JSContextPtr cx, in nsCIDRef cid, in boolean capsCheck, out boolean classExists);</code></td> </tr> <tr> <td><code>boolean <a href=\"#isObjectSafeForScripting()\">isObjectSafeForScripting</a>(in voidPtr theObject, in nsIIDRef id);</code></td> </tr> <tr> <td><code>void <a href=\"#JSVal2COMVariant()\">JSVal2COMVariant</a>(in jsval var, out COMVARIANT comvar);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"COMVariant2JSVal()\" name=\"COMVariant2JSVal()\">COMVariant2JSVal()</h3>\n<p>Converts a COM Variant to a jsval.</p>\n<pre class=\"eval\">void COMVariant2JSVal(\n  in COMVARIANTPtr comvar,\n  out jsval val\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>comvar</code></dt> <dd>The COM Variant to be converted.</dd> <dt><code>val</code></dt> <dd>The jsval to receive the converted value.</dd>\n</dl>\n<h3 id=\"getHostingFlags()\" name=\"getHostingFlags()\">getHostingFlags()</h3>\n<p>Return the ActiveX security and hosting flags. See <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIActiveXSecurityPolicy\" title=\"\">nsIActiveXSecurityPolicy</a></code> for list of flags.</p>\n<pre class=\"eval\">unsigned long getHostingFlags(\n  in string aContext\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aContext</code></dt> <dd>\n</dd></dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p> </p>\n<h3 id=\"isClassMarkedSafeForScripting()\" name=\"isClassMarkedSafeForScripting()\">isClassMarkedSafeForScripting()</h3>\n<p>Test if the specified class is marked safe for scripting.</p>\n<pre class=\"eval\">boolean isClassMarkedSafeForScripting(\n  in nsCIDRef cid,\n  out boolean classExists\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>cid</code></dt> <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsID\" title=\"\">nsID</a></code> representation of the CLSID to test.</dd> <dt><code>classExists</code></dt> <dd>Returns containing PR_FALSE if the class is not registered.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p> </p>\n<h3 id=\"isClassSafeToHost()\" name=\"isClassSafeToHost()\">isClassSafeToHost()</h3>\n<p>Test if the class is safe to host.</p>\n<pre class=\"eval\">boolean isClassSafeToHost(\n  in JSContextPtr cx,\n  in nsCIDRef cid,\n  in boolean capsCheck,\n  out boolean classExists\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>cx</code></dt> <dd> </dd><dt><code>cid</code></dt> <dd> </dd><dt><code>capsCheck</code></dt> <dd> </dd><dt><code>classExists</code></dt> <dd>Returns containing PR_FALSE if the class is not registered.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p> </p>\n<h3 id=\"isObjectSafeForScripting()\" name=\"isObjectSafeForScripting()\">isObjectSafeForScripting()</h3>\n<p>Test if the instantiated object is safe for scripting on the specified interface.</p>\n<pre class=\"eval\">boolean isObjectSafeForScripting(\n  in voidPtr theObject,\n  in nsIIDRef id\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>theObject</code></dt> <dd>The object to test (an IUnknown cast into a void *).</dd> <dt><code>id</code></dt> <dd>\n</dd></dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p> </p>\n<h3 id=\"JSVal2COMVariant()\" name=\"JSVal2COMVariant()\">JSVal2COMVariant()</h3>\n<p>Converts a jsval to a COM Variant.</p>\n<pre class=\"eval\">void JSVal2COMVariant(\n  in jsval var,\n  out COMVARIANT comvar\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>var</code></dt> <dd>The jsval to be converted.</dd> <dt><code>comvar</code></dt> <dd>The COM Variant to receive the converted value.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "nsIDispatchSupport"
}