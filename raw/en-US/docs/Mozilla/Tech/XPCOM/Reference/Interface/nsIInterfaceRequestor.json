{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/base/nsIInterfaceRequestor.idl\" rel=\"custom\">xpcom/base/nsIInterfaceRequestor.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface defines a generic interface for requesting interfaces that a given object might provide access to.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 0.9.5 </span></div>\n</div><p></p>\n<p>This is similar to <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsISupports#QueryInterface()\">nsISupports.QueryInterface()</a></code>. The main difference is that interfaces returned are not required to provide a way back to the object implementing <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIInterfaceRequestor\" title=\"\">nsIInterfaceRequestor</a></code>. The semantics of <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsISupports#QueryInterface()\">nsISupports.QueryInterface()</a></code> dictate that given an interface A that you <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsISupports#QueryInterface()\">nsISupports.QueryInterface()</a></code> on to get to interface B, you must be able to <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsISupports#QueryInterface()\">nsISupports.QueryInterface()</a></code> on B to get back to A. <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIInterfaceRequestor\" title=\"\">nsIInterfaceRequestor</a></code>, however, allows you to obtain an interface C from A that may (or most likely) will not have the ability to get back to A.</p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#getInterface()\">getInterface</a>(in nsIIDRef uuid, [iid_is(uuid),retval] out nsQIResult result);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"getInterface()\" name=\"getInterface()\">getInterface()</h3>\n<p>Retrieves the specified interface pointer.</p>\n<pre class=\"eval\">void getInterface(\n  in nsIIDRef uuid,\n  [iid_is(uuid),retval] out nsQIResult result\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>uuid</code></dt> <dd>The IID of the interface being requested.</dd> <dt><code>result</code></dt> <dd>The interface pointer to be filled in if the interface is accessible.</dd>\n</dl>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl> <dt><code>NS_ERROR_NO_INTERFACE</code></dt> <dd>The requested interface is not available.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/jackieku\">jackieku</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/DarinFisher\">DarinFisher</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Callek\">Callek</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dria\">Dria</a>",
    "title": "nsIInterfaceRequestor"
}