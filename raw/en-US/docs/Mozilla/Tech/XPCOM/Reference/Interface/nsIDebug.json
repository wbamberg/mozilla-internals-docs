{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/base/nsIDebug.idl\" rel=\"custom\">xpcom/base/nsIDebug.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nProvides debugging support for scripted languages, such as JavaScript, Java, Python, Perl, and so forth.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n<p><strong>Note:</strong> C/C++ consumers who are planning to use the <code>nsIDebug</code> interface with the <code>@mozilla.org/xpcom;1</code> contract should use <code>NS_DebugBreak()</code> from XPCOM glue instead, or alternatively the <code>NS_ABORT</code>, <code>NS_ASSERTION</code>, <code>NS_BREAK</code>, and <code>NS_WARNING</code> macros, which also call <code>NS_DebugBreak()</code> if used in a debugging build.</p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#abort()\">abort</a>(in string aFile, in long aLine);</code></td> </tr> <tr> <td><code>void <a href=\"#assertion()\">assertion</a>(in string aStr, in string aExpr, in string aFile, in long aLine);</code></td> </tr> <tr> <td><code>void <a href=\"#break()\">break</a>(in string aFile, in long aLine);</code></td> </tr> <tr> <td><code>void <a href=\"#warning()\">warning</a>(in string aStr, in string aFile, in long aLine);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"abort()\" name=\"abort()\">abort()</h3>\n<p>Requests the process to trigger a fatal <code>abort</code>.</p>\n<pre class=\"eval\">void abort(\n  in string aFile,\n  in long aLine\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aFile</code></dt> <dd>File containing <code>abort</code> request.</dd> <dt><code>aLine</code></dt> <dd>Line number of <code>abort</code> request.</dd>\n</dl>\n<h3 id=\"assertion()\" name=\"assertion()\">assertion()</h3>\n<p>Shows an assertion and triggers optional behavior based on the <code><a href=\"/en/XPCOM_DEBUG_BREAK\" title=\"https://developer.mozilla.org/en/XPCOM_DEBUG_BREAK\">XPCOM_DEBUG_BREAK</a></code> environment variable, defaulting to calling <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDebug#break()\">break()</a></code> on Windows and OS/2 and warning on other platforms.</p>\n<pre class=\"eval\">void assertion(\n  in string aStr,\n  in string aExpr,\n  in string aFile,\n  in long aLine\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aStr</code></dt> <dd><code>assertion</code> message.</dd> <dt><code>aExpr</code></dt> <dd>Expression that failed.</dd> <dt><code>aFile</code></dt> <dd>File containing <code>assertion</code>.</dd> <dt><code>aLine</code></dt> <dd>Line number of <code>assertion</code>.</dd>\n</dl>\n<h3 id=\"break()\" name=\"break()\">break()</h3>\n<p>Requests the software break into a debugger. If no debugger is running then this usually results in a program crash. However, on Windows a dialog is first presented giving the user the option of aborting, breaking, or ignoring the request. The dialog can be suppressed by use of the <a href=\"/En/Automatically_Handle_Failed_Asserts_in_Debug_Builds\" title=\"https://developer.mozilla.org/en/Automatically_Handle_Failed_Asserts_in_Debug_Builds\">windbgdlg</a> registry key. This allows the debugger to be attached before the software break.</p>\n<pre class=\"eval\">void break(\n  in string aFile,\n  in long aLine\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aFile</code></dt> <dd>File containing <code>break</code> request.</dd> <dt><code>aLine</code></dt> <dd>Line number of <code>break</code> request.</dd>\n</dl>\n<h3 id=\"warning()\" name=\"warning()\">warning()</h3>\n<p>Shows a warning.</p>\n<pre class=\"eval\">void warning(\n  in string aStr,\n  in string aFile,\n  in long aLine\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aStr</code></dt> <dd><code>warning</code> message.</dd> <dt><code>aFile</code></dt> <dd>File containing <code>warning</code>.</dd> <dt><code>aLine</code></dt> <dd>Line number of <code>warning</code>.</dd>\n</dl>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul> <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDebug2\" title=\"\">nsIDebug2</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Neil\">Neil</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "nsIDebug"
}