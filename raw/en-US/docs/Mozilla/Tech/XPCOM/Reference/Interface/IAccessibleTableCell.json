{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/other-licenses/ia2/AccessibleTableCell.idl\" rel=\"custom\">other-licenses/ia2/AccessibleTableCell.idl</a></code><span style=\"text-align: right; float: right;\"><span style=\"color: #cc0000; font-weight: 700;\">Not scriptable</span></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface gives access to the cells of a two-dimensional table.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 10.476190285714287%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 10.476190285714287%; background: #00dd00; position: absolute; width: 89.52380971428572%;\" title=\"Introduced in Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 10.476190285714287%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 10.476190285714287%;\">Gecko 1.9.2</div>\n\n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/IUnknown\" title=\"\">IUnknown</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)</span></div>\n</div><p></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>[propget] HRESULT <a href=\"#columnExtent()\">columnExtent</a>([out] long nColumnsSpanned );</code></td> </tr> <tr> <td><code>[propget] HRESULT <a href=\"#columnHeaderCells()\">columnHeaderCells</a>([out, size_is(, nColumnHeaderCells,)] IUnknown cellAccessibles, [out] long nColumnHeaderCells );</code></td> </tr> <tr> <td><code>[propget] HRESULT <a href=\"#columnIndex()\">columnIndex</a>([out] long columnIndex );</code></td> </tr> <tr> <td><code>[propget] HRESULT <a href=\"#isSelected()\">isSelected</a>([out] boolean isSelected );</code></td> </tr> <tr> <td><code>[propget] HRESULT <a href=\"#rowColumnExtents()\">rowColumnExtents</a>([out] long row, [out] long column, [out] long rowExtents, [out] long columnExtents, [out] boolean isSelected );</code></td> </tr> <tr> <td><code>[propget] HRESULT <a href=\"#rowExtent()\">rowExtent</a>([out] long nRowsSpanned );</code></td> </tr> <tr> <td><code>[propget] HRESULT <a href=\"#rowHeaderCells()\">rowHeaderCells</a>([out, size_is(, nRowHeaderCells,)] IUnknown cellAccessibles, [out] long nRowHeaderCells );</code></td> </tr> <tr> <td><code>[propget] HRESULT <a href=\"#rowIndex()\">rowIndex</a>([out] long rowIndex );</code></td> </tr> <tr> <td><code>[propget] HRESULT <a href=\"#table()\">table</a>([out] IUnknown table );</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"columnExtent()\" name=\"columnExtent()\">columnExtent()</h3>\n<p>Returns the number of columns occupied by this cell accessible. The result is greater than 1 if the specified cell spans multiple columns.</p>\n<pre class=\"eval\">[propget] HRESULT columnExtent(\n  [out] long nColumnsSpanned \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>nColumnsSpanned</code></dt> <dd>Returns the 1 based column extent of the specified cell.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_OK.</p>\n<h3 id=\"columnHeaderCells()\" name=\"columnHeaderCells()\">columnHeaderCells()</h3>\n<p>Returns the column headers as an array of cell accessibles.</p>\n<pre class=\"eval\">[propget] HRESULT columnHeaderCells(\n  [out, size_is(, nColumnHeaderCells,)] IUnknown cellAccessibles,\n  [out] long nColumnHeaderCells \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>cellAccessibles</code></dt> <dd>Pointer to an array of references to cell accessibles. The array is allocated by the server. Free it with CoTaskMemFree.</dd> <dt><code>nColumnHeaderCells</code></dt> <dd>The number of accessibles returned; the size of the returned array.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_FALSE if there is no header, [out] values are <code>null</code> and 0 respectively. S_OK.</p>\n<h3 id=\"columnIndex()\" name=\"columnIndex()\">columnIndex()</h3>\n<p>Translates this cell accessible into the corresponding column index.</p>\n<pre class=\"eval\">[propget] HRESULT columnIndex(\n  [out] long columnIndex \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>columnIndex</code></dt> <dd>Returns the 0 based column index of the cell of the specified cell or the index of the first column if the cell spans multiple columns.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_OK.</p>\n<h3 id=\"isSelected()\" name=\"isSelected()\">isSelected()</h3>\n<p>Returns a boolean value indicating whether this cell is selected.</p>\n<pre class=\"eval\">[propget] HRESULT isSelected(\n  [out] boolean isSelected \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>isSelected</code></dt> <dd>Returns <code>true</code> if the specified cell is selected and <code>false</code> otherwise.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_OK.</p>\n<h3 id=\"rowColumnExtents()\" name=\"rowColumnExtents()\">rowColumnExtents()</h3>\n<p>Gets the row and column indexes and extents of this cell accessible and whether or not it is selected. This is a convenience function. It is not mandatory to implement it.</p>\n<pre class=\"eval\">[propget] HRESULT rowColumnExtents(\n  [out] long row,\n  [out] long column,\n  [out] long rowExtents,\n  [out] long columnExtents,\n  [out] boolean isSelected \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>row</code></dt> <dd>0 based row index.</dd> <dt><code>column</code></dt> <dd>0 based column index.</dd> <dt><code>rowExtents</code></dt> <dd>Number of cells spanned by this cell in this row.</dd> <dt><code>columnExtents</code></dt> <dd>Number of cells spanned by this cell in this column.</dd> <dt><code>isSelected</code></dt> <dd>Indicates if the specified cell is selected.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_OK.</p>\n<h3 id=\"rowExtent()\" name=\"rowExtent()\">rowExtent()</h3>\n<p>Returns the number of rows occupied by this cell accessible.</p>\n<pre class=\"eval\">[propget] HRESULT rowExtent(\n  [out] long nRowsSpanned \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>nRowsSpanned</code></dt> <dd>Returns the row extent of the specified cell.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_OK.</p>\n<h3 id=\"rowHeaderCells()\" name=\"rowHeaderCells()\">rowHeaderCells()</h3>\n<p>Returns the row headers as an array of cell accessibles.</p>\n<pre class=\"eval\">[propget] HRESULT rowHeaderCells(\n  [out, size_is(, nRowHeaderCells,)] IUnknown cellAccessibles,\n  [out] long nRowHeaderCells \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>cellAccessibles</code></dt> <dd>Pointer to an array of references to cell accessibles. The array is allocated by the server. Free it with CoTaskMemFree.</dd> <dt><code>nRowHeaderCells</code></dt> <dd>The number of accessibles returned; the size of the returned array.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_FALSE if there is no header, [out] values are <code>null</code> and 0 respectively. S_OK.</p>\n<h3 id=\"rowIndex()\" name=\"rowIndex()\">rowIndex()</h3>\n<p>Translates this cell accessible into the corresponding row index.</p>\n<pre class=\"eval\">[propget] HRESULT rowIndex(\n  [out] long rowIndex \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>rowIndex</code></dt> <dd>Returns the 0 based row index of the specified cell or the index of the first row if the cell spans multiple rows.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_OK.</p>\n<h3 id=\"table()\" name=\"table()\">table()</h3>\n<p>Returns a reference to the accessbile of the containing <code>table</code>.</p>\n<pre class=\"eval\">[propget] HRESULT table(\n  [out] IUnknown table \n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>table</code></dt> <dd>Returns a reference to the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/IUnknown\" title=\"\">IUnknown</a></code> of the containing <code>table</code>.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>S_OK.</p>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul> <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/IAccessibleTable2\" title=\"\">IAccessibleTable2</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "IAccessibleTableCell"
}