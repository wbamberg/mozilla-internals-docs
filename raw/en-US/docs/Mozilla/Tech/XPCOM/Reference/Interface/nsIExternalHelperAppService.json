{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/uriloader/exthandler/nsIExternalHelperAppService.idl\" rel=\"custom\">uriloader/exthandler/nsIExternalHelperAppService.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThe external helper app service is used for finding and launching platform specific external applications for a given MIME content type.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n<p>Implemented by: <code>@mozilla.org/uriloader/external-helper-app-service;1</code>. To access this service, use:</p>\n<pre class=\"eval\">var externalHelperAppService = Components.classes[\"@mozilla.org/uriloader/external-helper-app-service;1\"]\n                               .getService(Components.interfaces.nsIExternalHelperAppService);\n</pre>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>boolean <a href=\"#applyDecodingForExtension()\">applyDecodingForExtension</a>(in AUTF8String aExtension, in ACString aEncodingType);</code></td>\n  </tr>\n  <tr>\n   <td><code>nsIStreamListener <a href=\"#doContent()\">doContent</a>(in ACString aMimeContentType, in nsIRequest aRequest, in nsIInterfaceRequestor aWindowContext, in boolean aForceSave);</code></td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"applyDecodingForExtension()\" name=\"applyDecodingForExtension()\">applyDecodingForExtension()</h3>\n<p>Determines whether or not data whose filename has the specified extension should be decoded from the specified encoding type before being saved or delivered to helper applications.</p>\n<pre class=\"eval\">boolean applyDecodingForExtension(\n  in AUTF8String aExtension,\n  in ACString aEncodingType\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aExtension</code></dt>\n <dd>\n  The filename extension to check.</dd>\n <dt>\n  <code>aEncodingType</code></dt>\n <dd>\n  The encoding type to check.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if data from URLs with the specified extension and encoding should be decoded prior to saving the file or delivering it to a helper application; otherwise <code>false</code>.</p>\n<h3 id=\"doContent()\" name=\"doContent()\">doContent()</h3>\n<p>Binds an external helper application to a stream listener. The caller should pump data into the returned stream listener. When the <code>OnStopRequest</code> is issued, the stream listener implementation will launch the helper app with this data.</p>\n<pre class=\"eval\">nsIStreamListener doContent(\n  in ACString aMimeContentType,\n  in nsIRequest aRequest,\n  in nsIInterfaceRequestor aWindowContext,\n  in boolean aForceSave\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aMimeContentType</code></dt>\n <dd>\n  The content type of the incoming data.</dd>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request corresponding to the incoming data.</dd>\n <dt>\n  <code>aWindowContext</code></dt>\n <dd>\n  Use <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIServiceManager#getInterface()\">nsIServiceManager.getInterface()</a></code> to retrieve properties like the DOM <a href=\"/en-US/docs/Web/API/Window\" title=\"The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window.\"><code>window</code></a> or parent window; the service might need this in order to bring up dialogs.</dd>\n <dt>\n  <code>aForceSave</code></dt>\n <dd>\n  <code>true</code> to always save this content to disk, regardless of <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMIMEInfo\" title=\"\">nsIMIMEInfo</a></code> and other such influences.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>A <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIStreamListener\" title=\"\">nsIStreamListener</a></code> which the caller should pump the data into.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/def00111\">def00111</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SamB\">SamB</a>",
    "title": "nsIExternalHelperAppService"
}