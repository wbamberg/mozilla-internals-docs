{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/docshell/shistory/public/nsISHistoryListener.idl\" rel=\"custom\">docshell/shistory/public/nsISHistoryListener.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nAn interface you can implement to receive notifications about activities that occur in session history, and optionally cancel them.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n<p>A session history listener is notified when pages are added to, removed from, and loaded from session history. The listener can prevent any action (except adding a new session history entry) from happening by returning <code>false</code> from the corresponding callback method.</p>\n<p>A session history listener can be registered on a particular <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISHistory\" title=\"\">nsISHistory</a></code> instance via the <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsISHistory#addSHistoryListener()\">nsISHistory.addSHistoryListener()</a></code> method.</p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>boolean <a href=\"#OnHistoryGoBack()\">OnHistoryGoBack</a>(in nsIURI aBackURI);</code></td> </tr> <tr> <td><code>boolean <a href=\"#OnHistoryGoForward()\">OnHistoryGoForward</a>(in nsIURI aForwardURI);</code></td> </tr> <tr> <td><code>boolean <a href=\"#OnHistoryGotoIndex()\">OnHistoryGotoIndex</a>(in long aIndex, in nsIURI aGotoURI);</code></td> </tr> <tr> <td><code>void <a href=\"#OnHistoryNewEntry()\">OnHistoryNewEntry</a>(in nsIURI aNewURI);</code></td> </tr> <tr> <td><code>boolean <a href=\"#OnHistoryPurge()\">OnHistoryPurge</a>(in long aNumEntries);</code></td> </tr> <tr> <td><code>boolean <a href=\"#OnHistoryReload()\">OnHistoryReload</a>(in nsIURI aReloadURI, in unsigned long aReloadFlags);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"OnHistoryGoBack()\" name=\"OnHistoryGoBack()\">OnHistoryGoBack()</h3>\n<p>Called when navigating to a previous session history entry, for example due to an <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIWebNavigation#goBack()\">nsIWebNavigation.goBack()</a></code> call.</p>\n<pre class=\"eval\">boolean OnHistoryGoBack(\n  in nsIURI aBackURI\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aBackURI</code></dt> <dd>The URI of the session history entry being navigated to.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> to allow the go back operation to proceed or <code>false</code> to cancel it.</p>\n<h3 id=\"OnHistoryGoForward()\" name=\"OnHistoryGoForward()\">OnHistoryGoForward()</h3>\n<p>Called when navigating to a next session history entry, for example due to an <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIWebNavigation#goForward()\">nsIWebNavigation.goForward()</a></code> call.</p>\n<pre class=\"eval\">boolean OnHistoryGoForward(\n  in nsIURI aForwardURI\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aForwardURI</code></dt> <dd>The URI of the session history entry being navigated to.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> to allow the go forward operation to proceed or <code>false</code> to cancel it.</p>\n<h3 id=\"OnHistoryGotoIndex()\" name=\"OnHistoryGotoIndex()\">OnHistoryGotoIndex()</h3>\n<p>Called when navigating to a session history entry by index, for example, when <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIWebNavigation#gotoIndex()\">nsIWebNavigation.gotoIndex()</a></code> is called.</p>\n<pre class=\"eval\">boolean OnHistoryGotoIndex(\n  in long aIndex,\n  in nsIURI aGotoURI\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aIndex</code></dt> <dd>The index in session history of the entry to be loaded.</dd> <dt><code>aGotoURI</code></dt> <dd>The URI of the session history entry to be loaded.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> to allow the operation to proceed or <code>false</code> to cancel it.</p>\n<h3 id=\"OnHistoryNewEntry()\" name=\"OnHistoryNewEntry()\">OnHistoryNewEntry()</h3>\n<p>Called when a new document is added to session history. New documents are added to session history by the <a href=\"/en/XPCOM_Interface_Reference/nsIDocShell\" title=\"en/XPCOM Interface Reference/nsIDocShell\">docshell</a> when new pages are loaded in a frame or content area; for example by calling <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIWebNavigation#loadURI()\">nsIWebNavigation.loadURI()</a></code>.</p>\n<div class=\"note\"><strong>Note:</strong> You can't cancel this operation.</div>\n<pre class=\"eval\">void OnHistoryNewEntry(\n  in nsIURI aNewURI\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aNewURI</code></dt> <dd>The URI of the document to be added to session history.</dd>\n</dl>\n<h3 id=\"OnHistoryPurge()\" name=\"OnHistoryPurge()\">OnHistoryPurge()</h3>\n<p>Called when entries are removed from session history. Entries can be removed from session history for various reasons; for example to control the browser's memory usage, to prevent users from loading documents from history, to erase evidence of prior page loads, etc.</p>\n<p>To purge documents from session history call <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsISHistory#PurgeHistory()\">nsISHistory.PurgeHistory()</a></code>.</p>\n<pre class=\"eval\">boolean OnHistoryPurge(\n  in long aNumEntries\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aNumEntries</code></dt> <dd>The number of entries to be removed from session history.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> to allow the purge operation to proceed or <code>false</code> to cancel it.</p>\n<h3 id=\"OnHistoryReload()\" name=\"OnHistoryReload()\">OnHistoryReload()</h3>\n<p>Called when the current document is reloaded, for example due to an <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIWebNavigation#reload()\">nsIWebNavigation.reload()</a></code> call.</p>\n<pre class=\"eval\">boolean OnHistoryReload(\n  in nsIURI aReloadURI,\n  in unsigned long aReloadFlags\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aReloadURI</code></dt> <dd>The URI of the document to be reloaded.</dd> <dt><code>aReloadFlags</code></dt> <dd>Flags that indicate how the document is to be refreshed. See the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIWebNavigation\" title=\"\">nsIWebNavigation</a></code> interface's <a href=\"/en/XPCOM_Interface_Reference/nsIWebNavigation#Load_Flags\" title=\"en/XPCOM Interface Reference/nsIWebNavigation#Load Flags\">load constants</a>.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> to allow the reload operation to proceed or <code>false</code> to cancel it.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/MatrixFrog\">MatrixFrog</a>",
    "title": "nsISHistoryListener"
}