{
    "content": "<p>The <code>nsIServerSocket</code> interface implements a server socket that can accept incoming connections.</p>\n\n<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/base/public/nsIServerSocket.idl\" rel=\"custom\">netwerk/base/public/nsIServerSocket.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\n<span> </span>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.6 </span></div>\n</div><p></p>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code></p>\n\n<p>Implemented by: <code>@mozilla.org/network/server-socket;1</code>. To create an instance, use:</p>\n\n<pre class=\"eval\">var serverSocket = Components.classes[\"@mozilla.org/network/server-socket;1\"]\n                             .createInstance(Components.interfaces.nsIServerSocket);\n</pre>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"/en/XPCOM_Interface_Reference/nsIServerSocket#init()\" title=\"en/XPCOM Interface Reference/nsIServerSocket#init()\">init</a>(in long aPort, in boolean aLoopbackOnly, in long aBackLog);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"/en/XPCOM_Interface_Reference/nsIServerSocket#initWithAddress()\" title=\"en/XPCOM Interface Reference/nsIServerSocket#initWithAddress()\">initWithAddress</a>([const] in PRNetAddrPtr aAddr, in long aBackLog);</code><span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"/en/XPCOM_Interface_Reference/nsIServerSocket#close()\" title=\"en/XPCOM Interface Reference/nsIServerSocket#close()\">close</a>()<span style=\"font-family: verdana,tahoma,sans-serif;\">;</span></code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"/en/XPCOM_Interface_Reference/nsIServerSocket#asyncListen()\" title=\"en/XPCOM Interface Reference/nsIServerSocket#asyncListen()\">asyncListen</a>(in <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIServerSocketListener\" title=\"\">nsIServerSocketListener</a></code> aListener);</code></td>\n  </tr>\n  <tr>\n   <td><code>PRNetAddr <a href=\"/en/XPCOM_Interface_Reference/nsIServerSocket#getAddress()\" title=\"en/XPCOM Interface Reference/nsIServerSocket#getAddress()\">getAddress</a>();</code><span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\" style=\"width: auto;\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>port</code></td>\n   <td><code>long</code></td>\n   <td>Returns the port of this server socket. <strong>Read only.</strong></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"asyncListen()\">asyncListen()</h3>\n\n<p>This method puts the server socket in the listening state. It will asynchronously listen for and accept client connections. The listener will be notified once for each client connection that is accepted. The listener's <code>onSocketAccepted()</code> method will be called on the same thread that called <code>asyncListen()</code> (the calling thread must have an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIEventTarget\" title=\"\">nsIEventTarget</a></code>).</p>\n\n<p>The listener will be passed a reference to an already connected socket transport (<code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISocketTransport\" title=\"\">nsISocketTransport</a></code>). See <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIServerSocketListener\" title=\"\">nsIServerSocketListener</a></code> for more details.</p>\n\n<pre>void asyncListen(\n  in nsIServerSocketListener aListener\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aListener</code></dt>\n <dd>The listener to be notified when client connections are accepted.</dd>\n</dl>\n\n<h3 id=\"close()\">close()</h3>\n\n<p>This method closes a server socket. This does not affect already connected client sockets (i.e., the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISocketTransport\" title=\"\">nsISocketTransport</a></code> instances created from this server socket). This will cause the <code>onStopListening</code> event to asynchronously fire with a status of <code>NS_BINDING_ABORTED</code>.</p>\n\n<pre class=\"eval\">void close();</pre>\n\n<h6 id=\"Parameters_2\">Parameters</h6>\n\n<p>None.</p>\n\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"getAddress\">getAddress</h3></div><p></p>\n\n<p>Returns the address to which this server socket is bound. Since a server socket may be bound to multiple network devices, this address may not necessarily be specific to a single network device. In the case of an IP socket, the IP address field would be zeroed out to indicate a server socket bound to all network devices.  Therefore, this method cannot be used to determine the IP address of the local system. See <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIDNSService#myHostName()\">nsIDNSService.myHostName()</a></code> if this is what you need.</p>\n\n<pre>PRNetAddr getAddress();</pre>\n\n<h6 id=\"Parameters_3\">Parameters</h6>\n\n<p>None.</p>\n\n<h6 id=\"Return_value\">Return value</h6>\n\n<p>The network address to which the socket is bound.</p>\n\n<h3 id=\"init()\">init()</h3>\n\n<p>Initializes a server socket.</p>\n\n<pre class=\"eval\">void init(\n  in long aPort, \n  in boolean aLoopbackOnly, \n  in long aBackLog\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aPort</code></dt>\n <dd>The port of the server socket. Pass -1 to indicate no preference, and a port will be selected automatically.</dd>\n <dt><code>aLoopbackOnly</code></dt>\n <dd>If <code>true</code>, the server socket will only respond to connections on the local loopback interface. Otherwise, it will accept connections from any interface. To specify a particular network interface, use <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIServerSocket#initWithAddress()\">initWithAddress()</a></code>.</dd>\n <dt><code>aBackLog</code></dt>\n <dd>The maximum length to which the queue of pending connections may grow. This parameter may be silently limited by the operating system. Pass -1 to use the default value. The <a href=\"http://searchfox.org/mozilla-central/source/netwerk/base/nsServerSocket.cpp#366\">default value</a> is 5.</dd>\n</dl>\n\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"initWithAddress\">initWithAddress</h3></div><p></p>\n\n<p>This method initializes a server socket and binds it to a particular local address (and hence a particular local network interface).</p>\n\n<pre class=\"eval\">void initWithAddress(\n  [const] in PRNetAddrPtr aAddr, \n  in long aBackLog\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aAddr</code></dt>\n <dd>The address to which this server socket should be bound.</dd>\n <dt><code>aBackLog</code></dt>\n <dd>The maximum length the queue of pending connections may grow to. This parameter may be silently limited by the operating system. Pass -1 to use the default value. The <a href=\"http://searchfox.org/mozilla-central/source/netwerk/base/nsServerSocket.cpp#366\">default value</a> is 5.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ato\">ato</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Smi\">Smi</a>",
    "title": "nsIServerSocket"
}