{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/base/nsIMemoryReporter.idl\" rel=\"custom\">xpcom/base/nsIMemoryReporter.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">A service that provides methods for managing <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemoryReporter\" title=\"\">nsIMemoryReporter</a></code> objects.</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9 (Firefox 3)</span></div>\n</div><p></p>\n<p>Implemented by <code>@mozilla.org/memory-reporter-manager;1</code> as a service:</p>\n<pre class=\"eval\">var reporterManager = Components.classes[\"@mozilla.org/memory-reporter-manager;1\"]\n                      .getService(Components.interfaces.nsIMemoryReporterManager);\n</pre>\n<p>Each memory reporter object, which implements <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsiMemoryReporter\" title=\"\">nsiMemoryReporter</a></code> interface, provides information for a given code area. Each code area is identified by a unique path string, which is displayed in <code>about:memory</code>.</p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <td><code>nsISimpleEnumerator <a href=\"#enumerateMultiReporters()\">enumerateMultiReporters</a>();</code> </td>\n    </tr>\n    <tr>\n      <td><code>nsISimpleEnumerator <a href=\"#enumerateReporters()\">enumerateReporters</a>();</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#init()\">init</a>();</code> </td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#registerMultiReporter()\">registerMultiReporter</a>(in nsIMemoryMultiReporter reporter);</code> </td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#registerReporter()\">registerReporter</a>(in nsIMemoryReporter reporter);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#unregisterMultiReporter()\">unregisterMultiReporter</a>(in nsIMemoryMultiReporter reporter);</code> </td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#unregisterReporter()\">unregisterReporter</a>(in nsIMemoryReporter reporter);</code></td>\n    </tr>\n  </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <td class=\"header\">Attribute</td>\n      <td class=\"header\">Type</td>\n      <td class=\"header\">Description</td>\n    </tr>\n    <tr>\n      <td><code>explicit</code></td>\n      <td><code><a href=\"/en/PRInt64\" title=\"en/PRInt64\">PRInt64</a></code></td>\n      <td>\n        <p>Gets the total size of explicit memory allocations, both at the operating system level (for example, via <code>mmap</code>, <code>VirtualAlloc</code>) and at the heap level (for example, via <code>malloc()</code>, <code>calloc()</code>, operator <code>new</code>).</p>\n        <p></p><div class=\"blockIndicator note\"><strong>Note:</strong>Â It covers all heap allocations, but will miss any Operating System level ones not covered by memory reporters.</div><p></p>\n        This reporter is special-cased because it is interesting, and is moderately difficult to compute in JavaScript. -1 means unknown. <strong>Read only.</strong> </td>\n    </tr>\n    <tr>\n      <td><code>resident</code></td>\n      <td><code><a href=\"/en/PRInt64\" title=\"en/PRInt64\">PRInt64</a></code></td>\n      <td>\n        <p>Gets the resident size (that is RSS, physical memory used).</p>\n        This reporter is special-cased because it is interesting, is available on all platforms, and returns a meaningful result on all common platforms. -1 means unknown. <strong>Read only.</strong> </td>\n    </tr>\n  </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<p></p><h3 id=\"enumerateMultiReporters()\">enumerateMultiReporters()</h3><p></p>\n<p>Returns an enumerator for looking at the installed memory multi-reporters.</p>\n<pre class=\"eval\">nsISimpleEnumerator enumerateMultiReporters();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>An enumerator of <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemoryMultiReporter\" title=\"\">nsIMemoryMultiReporter</a></code>s that are currently registered.</p>\n<h3 id=\"enumerateReporters()\" name=\"enumerateReporters()\">enumerateReporters()</h3>\n<p>Returns an enumerator for looking at the installed memory reporters.</p>\n<pre class=\"eval\">nsISimpleEnumerator enumerateReporters();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISimpleEnumerator\" title=\"\">nsISimpleEnumerator</a></code> for enumerating installed memory reporters.</p>\n<p></p><h3 id=\"init()\">init()</h3><p></p>\n<p>Initializes the memory reporter manager.</p>\n<pre class=\"eval\">void init();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<p></p><h3 id=\"registerMultiReporter()\">registerMultiReporter()</h3><p></p>\n<p>Requests that memory multi-reporter notifications be sent to the specified objects.</p>\n<pre class=\"eval\">void registerMultiReporter(\n  in nsIMemoryMultiReporter reporter\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>reporter</code></dt>\n  <dd>\n    An object implementing the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemoryMultiReporter\" title=\"\">nsIMemoryMultiReporter</a></code> interface which provides memory usage information for a given code area.</dd>\n</dl>\n<h3 id=\"registerReporter()\" name=\"registerReporter()\">registerReporter()</h3>\n<p>Requests that memory reporter notifications be sent to the specified objects.</p>\n<pre class=\"eval\">void registerReporter(\n  in nsIMemoryReporter reporter\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>reporter</code></dt>\n  <dd>\n    An object implementing the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemoryReporter\" title=\"\">nsIMemoryReporter</a></code> interface which provides memory usage information for a given code area.</dd>\n</dl>\n<p></p><h3 id=\"unregisterMultiReporter()\">unregisterMultiReporter()</h3><p></p>\n<p>Stops sending memory multi-reporter notifications to the specified object.</p>\n<pre class=\"eval\">void unregisterMultiReporter(\n  in nsIMemoryMultiReporter reporter\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>reporter</code></dt>\n  <dd>\n    An object implementing the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemoryMultiReporter\" title=\"\">nsIMemoryMultiReporter</a></code> interface which provides memory usage information for a given code area.</dd>\n</dl>\n<h3 id=\"unregisterReporter()\" name=\"unregisterReporter()\">unregisterReporter()</h3>\n<p>Stops sending memory reporter notifications to the specified object.</p>\n<pre class=\"eval\">void unregisterReporter(\n  in nsIMemoryReporter reporter\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>reporter</code></dt>\n  <dd>\n    An object implementing the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemoryReporter\" title=\"\">nsIMemoryReporter</a></code> interface which provides memory usage information for a given code area.</dd>\n</dl>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul>\n  <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemoryMultiReporter\" title=\"\">nsIMemoryMultiReporter</a></code></li>\n  <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemoryReporter\" title=\"\">nsIMemoryReporter</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "nsIMemoryReporterManager"
}