{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/dns/nsIDNSService.idl\" rel=\"custom\">netwerk/dns/nsIDNSService.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nProvides domain name resolution service.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9.1 (Firefox 3.5 / Thunderbird 3.0 / SeaMonkey 2.0)</span></div>\n</div><p></p>\n<p>Implemented by: <code>@mozilla.org/network/dns-service;1</code>. To access the service, use:</p>\n<pre class=\"eval\">var dnsService = Components.classes[\"@mozilla.org/network/dns-service;1\"]\n                 .createInstance(Components.interfaces.nsIDNSService);\n</pre>\n<div class=\"note\">\n <p><strong>Note:</strong> Starting in <span title=\"(Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)\">Gecko 7.0</span>, the <a class=\"external\" href=\"http://tools.ietf.org/html/draft-wing-http-new-tech-00\" title=\"http://tools.ietf.org/html/draft-wing-http-new-tech-00\">\"happy eyeballs\" strategy</a> is used to reduce lengthy timeouts when attempting backup connections during attempts to connect from clients that have broken IPv6 connectivity. This is done by disabling IPv6 on backup connections.</p>\n</div>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>nsICancelable <a href=\"#asyncResolve()\">asyncResolve</a>(in AUTF8String aHostName, in unsigned long aFlags, in nsIDNSListener aListener, in nsIEventTarget aListenerTarget);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#init()\">init</a>();</code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\">Obsolete since Gecko 1.8</span></td>\n  </tr>\n  <tr>\n   <td><code>nsIDNSRecord <a href=\"#resolve()\">resolve</a>(in AUTF8String aHostName, in unsigned long aFlags);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#shutdown()\">shutdown</a>();</code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\">Obsolete since Gecko 1.8</span></td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>myHostName</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td><strong>Read only.</strong></td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n<h3 id=\"Resolve_flag_constants\">Resolve flag constants</h3>\n<p>Various flags that may be ORed together to form the <code>aFlags</code> parameter passed to <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDNSService#asyncResolve()\">asyncResolve()</a></code> and <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDNSService#resolve()\">resolve()</a></code>.</p>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Constant</td>\n   <td class=\"header\">Value</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>RESOLVE_BYPASS_CACHE</code></td>\n   <td><code>(1 &lt;&lt; 0)</code></td>\n   <td>This flag suppresses the internal DNS lookup cache.</td>\n  </tr>\n  <tr>\n   <td><code>RESOLVE_CANONICAL_NAME</code></td>\n   <td><code>(1 &lt;&lt; 1)</code></td>\n   <td>The canonical name of the specified host will be queried.</td>\n  </tr>\n  <tr>\n   <td><code>RESOLVE_PRIORITY_MEDIUM</code></td>\n   <td><code>(1 &lt;&lt; 2)</code></td>\n   <td>The query is given medium priority. If used with low, medium takes precedence. </td>\n  </tr>\n  <tr>\n   <td><code>RESOLVE_PRIORITY_LOW</code></td>\n   <td><code>(1 &lt;&lt; 3)</code></td>\n   <td>The query is given lower priority. If used with medium, medium takes precedence. </td>\n  </tr>\n  <tr>\n   <td><code>RESOLVE_SPECULATE</code></td>\n   <td><code>(1 &lt;&lt; 4)</code></td>\n   <td>Indicates request is speculative. Speculative requests return errors if prefetching is disabled by configuration. </td>\n  </tr>\n  <tr>\n   <td><code>RESOLVE_DISABLE_IPV6</code></td>\n   <td><code>(1 &lt;&lt; 5)</code></td>\n   <td>If this flag is set, only IPv4 addresses will be returned by <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDNSService#asyncResolve()\">asyncResolve()</a></code> and <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDNSService#resolve()\">resolve()</a></code>. </td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"asyncResolve()\" name=\"asyncResolve()\">asyncResolve()</h3>\n<p>Begins off an asynchronous host lookup. A specified <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDNSListener\" title=\"\">nsIDNSListener</a></code> is invoked when the resolution process is completed.</p>\n<pre class=\"eval\">nsICancelable asyncResolve(\n  in AUTF8String aHostName,\n  in unsigned long aFlags,\n  in nsIDNSListener aListener,\n  in nsIEventTarget aListenerTarget\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aHostName</code></dt>\n <dd>\n  The host name or IP-address-literal to resolve.</dd>\n <dt>\n  <code>aFlags</code></dt>\n <dd>\n  A bitwise OR of the <a href=\"#Resolve_flag_constants\">Resolve flag constants</a>.</dd>\n <dt>\n  <code>aListener</code></dt>\n <dd>\n  The listener to be notified when the result is available.</dd>\n <dt>\n  <code>aListenerTarget</code></dt>\n <dd>\n  Optional parameter (may be <code>null</code>). If not <code>null</code>, this parameter specifies the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIEventTarget\" title=\"\">nsIEventTarget</a></code> of the thread on which the listener's onLookupComplete should be called. If this parameter is <code>null</code>, then onLookupComplete will be called on an unspecified thread (possibly recursively).</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>An object that can be used to cancel the host lookup.</p>\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"init()\">init()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)</span>\n        </div><p></p>\n<p>Called to initialize the DNS service.</p>\n<pre class=\"eval\">void init();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"resolve()\" name=\"resolve()\">resolve()</h3>\n<p>Called to synchronously resolve a host name. Warning this method may block the calling thread for a long period of time. It is extremely unwise to call this function on the User Interface thread of an application.</p>\n<pre class=\"eval\">nsIDNSRecord resolve(\n  in AUTF8String aHostName,\n  in unsigned long aFlags\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aHostName</code></dt>\n <dd>\n  The host name or IP-address-literal to resolve.</dd>\n <dt>\n  <code>aFlags</code></dt>\n <dd>\n  A bitwise OR of the <a href=\"#Resolve_flag_constants\">Resolve flag constants</a>.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>DNS record corresponding to the given host name.</p>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n <dt>\n  <code>NS_ERROR_UNKNOWN_HOST</code></dt>\n <dd>\n  If host could not be resolved.</dd>\n</dl>\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"shutdown()\">shutdown()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)</span>\n        </div><p></p>\n<p>Called to shutdown the DNS service. Any pending asynchronous requests will be canceled, and the local cache of DNS records will be cleared.</p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> The operating system may still have its own cache of DNS records, which would be unaffected by this method.</div><p></p>\n<pre class=\"eval\">void shutdown();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h2 id=\"Example\">Example</h2>\n<pre>let DnsService = Components.classes[\"@mozilla.org/network/dns-service;1\"]\n                 .createInstance(Components.interfaces.nsIDNSService);\n\nlet Thread = Components.classes[\"@mozilla.org/thread-manager;1\"]\n             .getService(Components.interfaces.nsIThreadManager).currentThread;\n\nlet host = \"www.mozilla.org\";\n\nlet Listener = {\n  onLookupComplete: function(request, record, status) {\n    if (!Components.isSuccessCode(status)) {\n      // Handle error here\n      return;\n    }\n    let address = record.getNextAddrAsString();\n    console.log(host + \" = \" + address);\n  }\n};\n\nDnsService.asyncResolve(host, 0, Listener, Thread);</pre>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/AdamRoach\">AdamRoach</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dongdong\">Dongdong</a>",
    "title": "nsIDNSService"
}