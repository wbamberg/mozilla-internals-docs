{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/embedding/browser/webBrowser/nsIPrintingPrompt.idl\" rel=\"custom\">embedding/browser/webBrowser/nsIPrintingPrompt.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis is the printing prompt interface which can be used without knowlege of a parent window. The parentage is hidden by the GetInterface though which it is gotten.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n\n<p>This interface is identical to <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPintingPromptService\" title=\"\">nsIPintingPromptService</a></code> but without the parent <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDOMWindow\" title=\"\">nsIDOMWindow</a></code> parameter. See <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrintingPromptService\" title=\"\">nsIPrintingPromptService</a></code> for all documentation.</p>\n\n<p>This service enables embedders to implement their own Print and Progress Dialogs. Each platform has a \"base\" or \"backstop\" implementation of the service. The service is automatically registered at start up.</p>\n\n<p>Historically, platform toolkits with native dialogs have implemented them in the GFX layer Usually they were displayed when a new <code>DeviceContextSpec</code> specific to that platform was created.</p>\n\n<h5 id=\"Windows\">Windows:</h5>\n\n<p>The GFX layer no longer supports default toolkit behavior for displaying the native Print Dialog. If an embedder implemented service returns any error code (other than <code>NS_ERROR_ABORT</code>) printing will terminate.</p>\n\n<p>Returning <code>NS_OK</code> assumes that the <code>PrintSettings</code> object was correctly filled in and if it does not have valid fields for printer name, and so on. it may also terminate.</p>\n\n<p>Defaults for platform service:</p>\n\n<ul>\n <li><code>showPrintDialog</code> - displays a native dialog</li>\n <li><code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrintingPrompt#showPageSetup()\">showPageSetup()</a></code> - displays a XUL dialog</li>\n <li><code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrintingPrompt#showProgress()\">showProgress()</a></code> - displays a XUL dialog</li>\n</ul>\n\n<p>Summary for Windows embedders:</p>\n\n<ul>\n <li>Stated once again: There is no \"fallback\" native platform support in GFX for the displaying of the native print dialog. The current default implementation for Windows display a native print dialog but a XUL-based progress dialog. If you wish to have a native progress dialog on Windows you will have to create and register your own service.</li>\n <li><div class=\"blockIndicator note\"><strong>Note:</strong>Â The Windows version Mozilla implements this service which is automatically built and registered for you. You can use it as an example. It is located at \"mozilla/embedding/components/printingui/src/win\". That service is capable of displaying a native print dialog and a XUL progress dialog.</div></li>\n <li>To fly your own dialog you may:\n  <ol>\n   <li>Implement this service to display at least the Print Dialog and a Print Progress Dialog or you may implement just one of the dialogs and pass back NS_ERROR_NOT_IMPLEMENTED for any of the others.</li>\n   <li>For the Print Dialog:<br>\n    You may stub out this service by having all the methods return NS_ERROR_NOT_IMPLEMENTED. You can then fly you own dialog and then properly fill in the PrintSettings object before calling <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIWebBrowserPrint\" title=\"\">nsIWebBrowserPrint</a></code>'s Print method. If you stub out this service you MUST set \"printSilent\" to <code>true</code>, if you do not, Printing will terminate and an error dialog will be displayed.</li>\n  </ol>\n </li>\n</ul>\n\n<h5 id=\"Mac\">Mac:</h5>\n\n<p>The GFX layer still supports default toolkit behavior for displaying the Print Dialog. If an embedder implemented service returns NS_ERROR_NOT_IMPLEMENTED for \"<code>showPrintDialog</code>\" The toolkit will display the native print dialog.</p>\n\n<p>Defaults for platform service:</p>\n\n<p>Mac OS X:</p>\n\n<ul>\n <li><code>showPrintDialog</code> - displays a native dialog</li>\n <li><code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrintingPrompt#showPageSetup()\">showPageSetup()</a></code> - displays a native dialog</li>\n <li><code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrintingPrompt#showProgress()\">showProgress()</a></code> - not implemented (provided by OS)</li>\n</ul>\n\n<h5 id=\"GTK\">GTK:</h5>\n\n<p>There are no native dialogs for GTK.</p>\n\n<p>Defaults for platform service:</p>\n\n<ul>\n <li><code>showPrintDialog</code> - displays a native dialog</li>\n <li><code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrintingPrompt#showPageSetup()\">showPageSetup()</a></code> - displays a native dialog</li>\n <li><code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrintingPrompt#showProgress()\">showProgress()</a></code> - displays a XUL dialog</li>\n</ul>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#showPageSetup()\">showPageSetup</a>(in nsIPrintSettings printSettings, in nsIObserver aObs);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#showPrintDialog()\">showPrintDialog</a>(in nsIWebBrowserPrint webBrowserPrint, in nsIPrintSettings printSettings);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#showProgress()\">showProgress</a>(in nsIWebBrowserPrint webBrowserPrint, in nsIPrintSettings printSettings, in nsIObserver openDialogObserver, in boolean isForPrinting, out nsIWebProgressListener webProgressListener, out nsIPrintProgressParams printProgressParams, out boolean notifyOnOpen);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"showPageSetup()\" name=\"showPageSetup()\">showPageSetup()</h3>\n\n<p>Shows the print progress dialog.</p>\n\n<pre class=\"eval\">void showPageSetup(\n  in nsIPrintSettings printSettings,\n  in nsIObserver aObs\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>printSettings</code></dt>\n <dd>PrintSettings for page setup.</dd>\n <dt><code>aObs <span class=\"inlineIndicator optional optionalInline\">Optional</span></code></dt>\n <dd>An observer to know if the contents of the Print Settings object has changed while the dialog is being shown. For example, some platforms may implement an \"Apply\" button.</dd>\n</dl>\n\n<h3 id=\"showPrintDialog()\" name=\"showPrintDialog()\">showPrintDialog()</h3>\n\n<p>Show the Print Dialog.</p>\n\n<pre class=\"eval\">void showPrintDialog(\n  in nsIWebBrowserPrint webBrowserPrint,\n  in nsIPrintSettings printSettings\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>webBrowserPrint</code></dt>\n <dd>Represents the document to be printed.</dd>\n <dt><code>printSettings</code></dt>\n <dd>PrintSettings for print \"job\".</dd>\n</dl>\n\n<h3 id=\"showProgress()\" name=\"showProgress()\">showProgress()</h3>\n\n<p>Shows the print progress dialog.</p>\n\n<pre class=\"eval\">void showProgress(\n  in nsIWebBrowserPrint webBrowserPrint,\n  in nsIPrintSettings printSettings,\n  in nsIObserver openDialogObserver,\n  in boolean isForPrinting,\n  out nsIWebProgressListener webProgressListener,\n  out nsIPrintProgressParams printProgressParams,\n  out boolean notifyOnOpen\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>webBrowserPrint</code></dt>\n <dd>Represents the document to be printed.</dd>\n <dt><code>printSettings</code></dt>\n <dd>PrintSettings for print \"job\"</dd>\n <dt><code>openDialogObserver</code></dt>\n <dd>An observer that will be notifed when the dialog is opened.</dd>\n <dt><code>isForPrinting</code></dt>\n <dd><code>true</code> - for printing, <code>false</code> for print preview.</dd>\n <dt><code>webProgressListener</code></dt>\n <dd>Additional listener can be registered for progress notifications.</dd>\n <dt><code>printProgressParams</code></dt>\n <dd>Parameter object for passing progress state.</dd>\n <dt><code>notifyOnOpen</code></dt>\n <dd>This indicates that the observer will be notified when the progress dialog has been opened. If <code>false</code> is returned it means the observer (usually the caller) shouldn't wait For Print Preview Progress there is intermediate progress.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mantaroh\">mantaroh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "nsIPrintingPrompt"
}