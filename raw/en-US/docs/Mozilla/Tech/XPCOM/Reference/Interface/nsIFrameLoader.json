{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/content/base/public/nsIFrameLoader.idl\" rel=\"custom\">content/base/public/nsIFrameLoader.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nHandles loading a frame.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 5.714285714285714%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 5.714285714285714%; background: #00dd00; position: absolute; width: 94.28571428571429%;\" title=\"Introduced in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Gecko 1.8</div>\n\n    <div style=\"height: 8px; top: 16px; left: 10.928571428571429%; background: #eeee00; position: absolute; width: 1%; border-radius: 4px; -webkit-border-radius: 4px;\" title=\"Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\"></div>\n    \n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span></div>\n</div><p></p>\n\n<div class=\"note\"><strong>Note:</strong> This interface works in tandem with the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIContentView\" title=\"\">nsIContentView</a></code> interface to manage frames across processes if Electrolysis is in use to support per-frame processes.</div>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#activateFrameEvent()\">activateFrameEvent</a>(in AString aType, in boolean capture);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#activateRemoteFrame()\">activateRemoteFrame</a>();</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#destroy()\">destroy</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#loadFrame()\">loadFrame</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#loadURI()\">loadURI</a>(in nsIURI aURI);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#sendCrossProcessKeyEvent()\">sendCrossProcessKeyEvent</a>(in AString aType, in long aKeyCode, in long aCharCode, in long aModifiers, [optional] in boolean aPreventDefault);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#sendCrossProcessMouseEvent()\">sendCrossProcessMouseEvent</a>(in AString aType, in float aX, in float aY, in long aButton, in long aClickCount, in long aModifiers, [optional] in boolean aIgnoreRootScrollFrame);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#updatePositionAndSize()\">updatePositionAndSize</a>(in nsIFrame aIFrame);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span> </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>delayRemoteDialogs</code></td>\n   <td><code><a href=\"/en/boolean\" title=\"en/boolean\">boolean</a></code></td>\n   <td></td>\n  </tr>\n  <tr>\n   <td><code>depthTooGreat</code></td>\n   <td><code><a href=\"/en/boolean\" title=\"en/boolean\">boolean</a></code></td>\n   <td>Find out whether the loader's frame is at too great a depth in the frame tree. This can be used to decide what operations may or may not be allowed on the loader's <code>docshell</code>. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>docShell</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDocShell\" title=\"\">nsIDocShell</a></code></code></td>\n   <td>Get the <code>docshell</code> from the frame loader. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>messageManager</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIChromeFrameMessageManager\" title=\"\">nsIChromeFrameMessageManager</a></code></code></td>\n   <td>The message manager handling messages for this frame. <strong>Read only.</strong> </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<p></p><h3 id=\"activateFrameEvent()\">activateFrameEvent()</h3><p></p>\n\n<p>Activates event forwarding from client (remote frame) to parent.</p>\n\n<pre class=\"eval\">void activateFrameEvent(\n  in AString aType,\n  in boolean capture\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aType</code></dt>\n <dd>The event type for which to enable forwarding.</dd>\n <dt><code>capture</code></dt>\n <dd>Whether or not to capture these events.</dd>\n</dl>\n\n<p></p><h3 id=\"activateRemoteFrame()\">activateRemoteFrame()</h3><p></p>\n\n<p>Activates the remote frame.</p>\n\n<pre class=\"eval\">void activateRemoteFrame();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n\n<p>Throws an exception with non-remote frames.</p>\n\n<h3 id=\"destroy()\" name=\"destroy()\">destroy()</h3>\n\n<p>Destroys the frame loader and everything inside it. This will clear the weak owner content reference.</p>\n\n<pre class=\"eval\">void destroy();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h3 id=\"loadFrame()\" name=\"loadFrame()\">loadFrame()</h3>\n\n<p>Starts loading the frame. This method figures out what to load from the owner content in the frame loader.</p>\n\n<pre class=\"eval\">void loadFrame();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<p></p><h3 id=\"loadURI()\">loadURI()</h3><p></p>\n\n<p>Loads the specified URI in this frame. Behaves identically to <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFrameLoader#loadFrame()\">loadFrame()</a></code>, except that this method lets you specify the URI to load.</p>\n\n<pre class=\"eval\">void loadURI(\n  in nsIURI aURI\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aURI</code></dt>\n <dd>The URI to load into the frame.</dd>\n</dl>\n\n<p></p><h3 id=\"sendCrossProcessKeyEvent()\">sendCrossProcessKeyEvent()</h3><p></p>\n\n<p>Creates and sends a <a href=\"/en/DOM/Event/UIEvent/KeyEvent\" title=\"en/DOM/Event/UIEvent/KeyEvent\"><code>KeyEvent</code></a> to the content viewport's process. See <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIDOMWindowUtils#sendKeyEvent()\">nsIDOMWindowUtils.sendKeyEvent()</a></code> for details; this method is its equivalent for cross-process event handling.</p>\n\n<pre class=\"eval\">void sendCrossProcessKeyEvent(\n  in AString aType,\n  in long aKeyCode,\n  in long aCharCode,\n  in long aModifiers,\n  [optional] in boolean aPreventDefault\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aType</code></dt>\n <dd>The event type.</dd>\n <dt><code>aKeyCode</code></dt>\n <dd>The key code.</dd>\n <dt><code>aCharCode</code></dt>\n <dd>The character code.</dd>\n <dt><code>aModifiers</code></dt>\n <dd>The modifier flags.</dd>\n <dt><code>aPreventDefault</code></dt>\n <dd>Whether or not to prevent default actions from being performed.</dd>\n</dl>\n\n<p></p><h3 id=\"sendCrossProcessMouseEvent()\">sendCrossProcessMouseEvent()</h3><p></p>\n\n<p>Creates and sends a <a href=\"/en/DOM/Event/UIEvent/MouseEvent\" title=\"en/DOM/Event/UIEvent/MouseEvent\"><code>MouseEvent</code></a> to the content viewport's process. See <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIDOMWindowUtils#sendMouseEvent()\">nsIDOMWindowUtils.sendMouseEvent()</a></code> for details; this method is its equivalent for cross-process event handling.</p>\n\n<pre class=\"eval\">void sendCrossProcessMouseEvent(\n  in AString aType,\n  in float aX,\n  in float aY,\n  in long aButton,\n  in long aClickCount,\n  in long aModifiers,\n  [optional] in boolean aIgnoreRootScrollFrame\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aType</code></dt>\n <dd>The type of mouse event to send.</dd>\n <dt><code>aX</code></dt>\n <dd>The X coordinate of the mouse.</dd>\n <dt><code>aY</code></dt>\n <dd>The Y coordinate of the mouse.</dd>\n <dt><code>aButton</code></dt>\n <dd>Which button was clicked, if any.</dd>\n <dt><code>aClickCount</code></dt>\n <dd>The number of clicks comprising the mouse button event, if any.</dd>\n <dt><code>aModifiers</code></dt>\n <dd>The modifier keys in effect at the time of the event.</dd>\n <dt><code>aIgnoreRootScrollFrame</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt>\n <dd>Whether or not to ignore the root scroll frame.</dd>\n</dl>\n\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"updatePositionAndSize\">updatePositionAndSize</h3></div><p></p>\n\n<p>Updates the position and size of the subdocument loaded by this frameloader.</p>\n\n<pre class=\"eval\">void updatePositionAndSize(\n  in nsIFrame aIFrame\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aIFrame</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFrame\" title=\"\">nsIFrame</a></code> for the content node that owns this frameloader.</dd>\n</dl>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><a href=\"/en/The_message_manager\" title=\"en/Content process event handling\">Content process event handling</a></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFrameLoaderOwner\" title=\"\">nsIFrameLoaderOwner</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFrameMessageListener\" title=\"\">nsIFrameMessageListener</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIChromeFrameMessageManager\" title=\"\">nsIChromeFrameMessageManager</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDOMWindowUtils\" title=\"\">nsIDOMWindowUtils</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>",
    "title": "nsIFrameLoader"
}