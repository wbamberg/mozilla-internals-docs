{
    "content": "<p></p>\n\n<p>The <code>nsIThreadObserver</code> interface may be implemented to let an observer implement a layered event queue.</p>\n\n<p>The implementation of this interface <strong>must</strong> be thread safe.</p>\n\n<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/threads/nsIThreadInternal.idl\" rel=\"custom\">xpcom/threads/nsIThreadInternal.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\n<span> </span>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9 (Firefox 3)</span></div>\n</div><p></p>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#afterProcessNextEvent()\">afterProcessNextEvent</a>(in nsIThreadInternal thread, in unsigned long recursionDepth);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onDispatchedEvent()\">onDispatchedEvent</a>(in nsIThreadInternal thread);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onProcessNextEvent()\">onProcessNextEvent</a>(in nsIThreadInternal thread, in boolean mayWait, in unsigned long recursionDepth);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"afterProcessNextEvent()\" name=\"afterProcessNextEvent()\">afterProcessNextEvent()</h3>\n\n<p>Called by the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThread\" title=\"\">nsIThread</a></code> method <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIThread#ProcessNextEvent()\">nsIThread.ProcessNextEvent()</a></code> after an event is processed. This method is only called on the target thread.</p>\n\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> It is valid to change the thread's observer during a call to this method.</div><p></p>\n\n<pre class=\"eval\">void afterProcessNextEvent(\n  in nsIThreadInternal thread,\n  in unsigned long recursionDepth\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>thread</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThread\" title=\"\">nsIThread</a></code> on which the event was processed.</dd>\n <dt><code>recursionDepth</code></dt>\n <dd>The number of calls to <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIThread#ProcessNextEvent()\">nsIThread.ProcessNextEvent()</a></code> on the call stack in addition to the current call.</dd>\n</dl>\n\n<h3 id=\"onDispatchedEvent()\" name=\"onDispatchedEvent()\">onDispatchedEvent()</h3>\n\n<p>Called after an event has been dispatched to the thread. This method may be called from any thread.</p>\n\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> It is valid to change the thread's observer during a call to this method.</div><p></p>\n\n<pre class=\"eval\">void onDispatchedEvent(\n  in nsIThreadInternal thread\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>thread</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThread\" title=\"\">nsIThread</a></code> on which the event was dispatched.</dd>\n</dl>\n\n<h3 id=\"onProcessNextEvent()\" name=\"onProcessNextEvent()\">onProcessNextEvent()</h3>\n\n<p>Called by the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThread\" title=\"\">nsIThread</a></code> method <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIThread#ProcessNextEvent()\">nsIThread.ProcessNextEvent()</a></code> before an event is processed. This method is only called on the target thread.</p>\n\n<p>It is valid to change the thread\\'s observer during a call to this method.</p>\n\n<pre class=\"eval\">void onProcessNextEvent(\n  in nsIThreadInternal thread,\n  in boolean mayWait,\n  in unsigned long recursionDepth\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>thread</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThread\" title=\"\">nsIThread</a></code> on which the event is going to be processed.</dd>\n <dt><code>mayWait</code></dt>\n <dd><code>true</code> if the method is allowed to block the calling thread. This parameter will be <code>false</code> during thread shutdown.</dd>\n <dt><code>recursionDepth</code></dt>\n <dd>The number of calls to <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIThread#ProcessNextEvent()\">nsIThread.ProcessNextEvent()</a></code> on the call stack in addition to the current call.</dd>\n</dl>\n\n<h2 id=\"Example\" name=\"Example\">Example</h2>\n\n<p>It is possible to overlay processing events for a GUI toolkit on top of the events for a thread:</p>\n\n<pre class=\"eval\">var NativeQueue;\nObserver = {\n  onDispatchedEvent(thread) {\n    NativeQueue.signal();\n  }\n  onProcessNextEvent(thread, mayWait, recursionDepth) {\n    if (NativeQueue.hasNextEvent()) {\n      NativeQueue.processNextEvent();\n    }\n    while (mayWait &amp;&amp; !thread.hasPendingEvent()) {\n      NativeQueue.wait();\n      NativeQueue.processNextEvent();\n    }\n  }\n};\n</pre>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><a href=\"/en/The_Thread_Manager\" title=\"en/The_Thread_Manager\">The Thread Manager</a></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThreadManager\" title=\"\">nsIThreadManager</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThread\" title=\"\">nsIThread</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThreadPool\" title=\"\">nsIThreadPool</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThreadInternal\" title=\"\">nsIThreadInternal</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIThreadEventFilter\" title=\"\">nsIThreadEventFilter</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SphinxKnight\">SphinxKnight</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Kohei\">Kohei</a>",
    "title": "nsIThreadObserver"
}