{
    "content": "<p>The <code>nsICookieManager2</code> interface contains additional methods that expand upon the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICookieManager\" title=\"\">nsICookieManager</a></code> interface.</p>\n\n<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/cookie/nsICookieManager2.idl\" rel=\"custom\">netwerk/cookie/nsICookieManager2.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\n<span> </span>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)</span></div>\n</div><p></p>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICookieManager\" title=\"\">nsICookieManager</a></code></p>\n\n<p>This interface is included in The <a href=\"/en-US/docs/Mozilla/JavaScript_code_modules/Services.jsm\"><code>Services.jsm</code></a> JavaScript code module. To create an object implementing this interface:</p>\n\n<pre><span class=\"nowiki\">Components.utils.import(\"resource://gre/modules/Services.jsm\");\nvar cookieService = Services.cookies;\n</span></pre>\n\n<p> </p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#add()\">add</a>(in AUTF8String aHost, in AUTF8String aPath, in ACString aName, in ACString aValue, in boolean aIsSecure, in boolean aIsHttpOnly, in boolean aIsSession, in PRInt64 aExpiry);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#cookieExists()\">cookieExists</a>(in nsICookie2 aCookie);</code> </td>\n  </tr>\n  <tr>\n   <td><code>unsigned long <a href=\"#countCookiesFromHost()\">countCookiesFromHost</a>(in AUTF8String aHost);</code> </td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#findMatchingCookie()\">findMatchingCookie</a>(in nsICookie2 aCookie, out unsigned long aCountFromHost);</code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 3)\">Obsolete since Gecko 1.9</span></td>\n  </tr>\n  <tr>\n   <td><code>nsISimpleEnumerator <a href=\"#getCookiesFromHost()\">getCookiesFromHost</a>(in AUTF8String aHost);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#importCookies()\">importCookies</a>(in nsIFile aCookieFile);</code> </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"add()\" name=\"add()\">add()</h3>\n\n<p>Adds a cookie. <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICookieService\" title=\"\">nsICookieService</a></code> is the normal way to do this. This method is something of a back door.</p>\n\n<pre class=\"eval\">void add(\n  in AUTF8String aHost,\n  in AUTF8String aPath,\n  in ACString aName,\n  in ACString aValue,\n  in boolean aIsSecure,\n  in boolean aIsHttpOnly,\n  in boolean aIsSession,\n  in PRInt64 aExpiry\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aHost</code></dt>\n <dd>The host or domain for which the cookie is set. presence of a leading dot indicates a domain cookie; otherwise, the cookie is treated as a non-domain cookie. See <a class=\"external\" href=\"http://www.ietf.org/rfc/rfc2109.txt\">RFC2109</a> for details. The host string will be normalized to ASCII or ACE; any trailing dot will be stripped. To be a domain cookie, the host must have at least two subdomain parts (e.g. '.foo.com', not '.com'), otherwise an exception will be thrown. An empty string is acceptable (e.g. file:// URI's).</dd>\n <dt><code>aPath</code></dt>\n <dd>The path within the domain for which the cookie is valid.</dd>\n <dt><code>aName</code></dt>\n <dd>The cookie name.</dd>\n <dt><code>aValue</code></dt>\n <dd>The cookie data.</dd>\n <dt><code>aIsSecure</code></dt>\n <dd><code>true</code> if the cookie should only be sent over a secure connection.</dd>\n <dt><code>aIsHttpOnly</code></dt>\n <dd><code>true</code> if the cookie should only be sent to, and can only be modified by, an HTTP connection.</dd>\n <dt><code>aIsSession</code></dt>\n <dd><code>true</code> if the cookie should exist for the current session only.</dd>\n <dt><code>aExpiry</code></dt>\n <dd>Holds the expiration date, in seconds since the epoch. Only relevant if <code>aIsSession</code> is <code>false</code>.</dd>\n</dl>\n\n<p></p><h3 id=\"cookieExists()\">cookieExists()</h3><p></p>\n\n<p>Returns whether or not a matching cookie already exists.</p>\n\n<pre class=\"eval\">boolean cookieExists(\n  in nsICookie2 aCookie\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aCookie</code></dt>\n <dd>The cookie to look for.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>Returns <code>true</code> if a cookie was found which matches the host, path, and name fields of <code>aCookie</code>.</p>\n\n<p></p><h3 id=\"countCookiesFromHost()\">countCookiesFromHost()</h3><p></p>\n\n<p>Returns the number of cookies that would be returned to a given host.</p>\n\n<p>This ignores the cookie flags <code>isDomain</code>, <code>isSecure</code>, and <code>isHttpOnly</code>. Therefore, if the specified host is \"weather.yahoo.com\", host or domain cookies for \"weather.yahoo.com\" and \"yahoo.com\" would both be counted, while a cookie for \"my.weather.yahoo.com\" would not.</p>\n\n<pre class=\"eval\">unsigned long countCookiesFromHost(\n  in AUTF8String aHost\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aHost</code></dt>\n <dd>The host string to look for, such as \"google.com\". This should consist only of the host portion of the URI and should not contain a leading dot, port number, or other information.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The number of matching cookies found.</p>\n\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"findMatchingCookie()\">findMatchingCookie()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 1.9 (Firefox 3)</span>\n        </div><p></p>\n\n<p>Find whether a matching cookie already exists, and how many cookies a given host has already set. This is useful when e.g. prompting the user whether to accept a given cookie.</p>\n\n<pre class=\"eval\">boolean findMatchingCookie(\n  in nsICookie2 aCookie,\n  out unsigned long aCountFromHost\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aCookie</code></dt>\n <dd>The cookie to look for.</dd>\n <dt><code>aCountFromHost</code></dt>\n <dd>The number of cookies found whose hosts are the same as, or subdomains of, the host field of aCookie.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if a cookie was found which matches the host, path, and name fields of aCookie.</p>\n\n<p></p><h3 id=\"getCookiesFromHost()\">getCookiesFromHost()</h3><p></p>\n\n<p>Returns an enumerator of cookies that would be returned to a given host, ignoring the cookie flags <code>isDomain</code>, <code>isSecure</code>, and <code>isHttpOnly</code>. Therefore, if the specified host is \"weather.yahoo.com\", host or domain cookies for \"weather.yahoo.com\" and \"yahoo.com\" would both be returned, while a cookie for \"my.weather.yahoo.com\" would not.</p>\n\n<pre class=\"eval\">nsISimpleEnumerator getCookiesFromHost(\n  in AUTF8String aHost\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aHost</code></dt>\n <dd>The host string to look for, such as \"google.com\". This should consist only of the host portion of the URI and should not contain a leading dot, port number, or other information.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISimpleEnumerator\" title=\"\">nsISimpleEnumerator</a></code> of <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICookie2\" title=\"\">nsICookie2</a></code> objects representing the matching cookies.</p>\n\n<p></p><h3 id=\"importCookies()\">importCookies()</h3><p></p>\n\n<p>Imports an old-style cookie file. The imported cookies will be added to the existing cookie database. If the database contains any cookies that are the same as those being imported (that is, they have the same domain, name, and path), they are replaced with the ones being imported.</p>\n\n<pre class=\"eval\">void importCookies(\n  in nsIFile aCookieFile\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aCookieFile</code></dt>\n <dd>The file to import. This is usually <code>cookies.txt</code>.</dd>\n</dl>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICookie\" title=\"\">nsICookie</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICookie2\" title=\"\">nsICookie2</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICookieManager\" title=\"\">nsICookieManager</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICookiePermission\" title=\"\">nsICookiePermission</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/V@no\">V@no</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/snoedel\">snoedel</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Natch\">Natch</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mossop\">Mossop</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ericjung\">ericjung</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Ted_Mielczarek\">Ted_Mielczarek</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Ayhfung\">Ayhfung</a>",
    "title": "nsICookieManager2"
}