{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/components/nsIModule.idl\" rel=\"custom\">xpcom/components/nsIModule.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface must be implemented by each XPCOM component. It is the main entry point by which the system accesses an XPCOM component. \n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 0.9.9 </span></div>\n</div><p></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>boolean <a href=\"#canUnload()\">canUnload</a>(in nsIComponentManager aCompMgr);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#getClassObject()\">getClassObject</a>(in nsIComponentManager aCompMgr, in nsCIDRef aClass, in nsIIDRef aIID, [retval, iid_is(aIID)] out nsQIResult aResult);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#registerSelf()\">registerSelf</a>(in nsIComponentManager aCompMgr, in nsIFile aLocation, in string aLoaderStr, in string aType);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#unregisterSelf()\">unregisterSelf</a>(in nsIComponentManager aCompMgr, in nsIFile aLocation, in string aLoaderStr);</code></td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"canUnload()\" name=\"canUnload()\">canUnload()</h3>\n<p>This method may be queried to determine whether or not the component module can be unloaded by XPCOM.</p>\n<pre class=\"eval\">boolean canUnload(\n  in nsIComponentManager aCompMgr\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aCompMgr</code></dt>\n <dd>\n  The global component manager.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>Indicates to the caller whether or not the component module can be unloaded. Returning <code>true</code> is not a guarantee that the module will be unloaded. It constitues only willingness of the module to be unloaded. It is very important to ensure that no outstanding references to the module's code/data exist before returning <code>true</code>. Returning <code>false</code> guaratees that the module will not be unloaded.</p>\n<p>If the component module is native (that is, as part of a DLL), then this method may be called to determine whether or not the DLL may be unloaded from memory.</p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> As of Gecko 1.7, native component modules are never unloaded.</div><p></p>\n<h3 id=\"getClassObject()\" name=\"getClassObject()\">getClassObject()</h3>\n<p>Obtains a Class Object from a <code>nsIModule</code> for a given CID and IID pair. This class object can either be query to a <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFactory\" title=\"\">nsIFactory</a></code> or a may be query to a <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIClassInfo\" title=\"\">nsIClassInfo</a></code>.</p>\n<pre class=\"eval\">void getClassObject(\n  in nsIComponentManager aCompMgr,\n  in nsCIDRef aClass,\n  in nsIIDRef aIID,\n  [retval, iid_is(aIID)] out nsQIResult aResult\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aCompMgr</code></dt>\n <dd>\n  The global component manager.</dd>\n <dt>\n  <code>aClass</code></dt>\n <dd>\n  The ClassID of object instance requested.</dd>\n <dt>\n  <code>aIID</code></dt>\n <dd>\n  The IID of interface requested.</dd>\n <dt>\n  <code>aResult</code></dt>\n <dd>\n  The resulting interface pointer.</dd>\n</dl>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n <dt>\n  <code>NS_ERROR_FACTORY_NOT_REGISTERED</code></dt>\n <dd>\n  Indicates that the requested class is not available.</dd>\n <dt>\n  <code>NS_ERROR_NO_INTERFACE</code></dt>\n <dd>\n  Indicates that the requested interface is not supported.</dd>\n</dl>\n<h3 id=\"registerSelf()\" name=\"registerSelf()\">registerSelf()</h3>\n<p>When the <code>nsIModule</code> is discovered, this method will be called so that any setup registration can be preformed.</p>\n<pre class=\"eval\">void registerSelf(\n  in nsIComponentManager aCompMgr,\n  in nsIFile aLocation,\n  in string aLoaderStr,\n  in string aType\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aCompMgr</code></dt>\n <dd>\n  The global component manager.</dd>\n <dt>\n  <code>aLocation</code></dt>\n <dd>\n  The location of the <code>nsIModule</code> on disk.</dd>\n <dt>\n  <code>aLoaderStr</code></dt>\n <dd>\n  Opaque loader specific string.</dd>\n <dt>\n  <code>aType</code></dt>\n <dd>\n  Loader Type being used to load this module.</dd>\n</dl>\n<h3 id=\"unregisterSelf()\" name=\"unregisterSelf()\">unregisterSelf()</h3>\n<p>When the <code>nsIModule</code> is being unregistered, this method will be called so that any unregistration can be preformed.</p>\n<pre class=\"eval\">void unregisterSelf(\n  in nsIComponentManager aCompMgr,\n  in nsIFile aLocation,\n  in string aLoaderStr\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aCompMgr</code></dt>\n <dd>\n  The global component manager.</dd>\n <dt>\n  <code>aLocation</code></dt>\n <dd>\n  The location of the <code>nsIModule</code> on disk.</dd>\n <dt>\n  <code>aLoaderStr</code></dt>\n <dd>\n  Opaque loader specific string.</dd>\n</dl>\n<h2 id=\"Remarks\" name=\"Remarks\">Remarks</h2>\n<p>This interface was finalized (frozen) for <span title=\"\">Gecko 0.9.9</span>. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=99154\" title=\"FIXED: Freeze nsIModule.idl\">bug 99154</a> for details. From <span title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Gecko 2.0</span> interfaces are no longer frozen.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Waldo\">Waldo</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/DarinFisher\">DarinFisher</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dria\">Dria</a>",
    "title": "nsIModule"
}