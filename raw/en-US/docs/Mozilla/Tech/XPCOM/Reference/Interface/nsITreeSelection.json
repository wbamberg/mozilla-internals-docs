{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/layout/xul/base/src/tree/public/nsITreeSelection.idl\" rel=\"custom\">layout/xul/base/src/tree/public/nsITreeSelection.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface is used by the tree widget to get information about what is selected.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9 (Firefox 3)</span></div>\n</div><p></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#adjustSelection()\">adjustSelection</a>(in long index, in long count);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#clearRange()\">clearRange</a>(in long startIndex, in long endIndex);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#clearSelection()\">clearSelection</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#getRangeAt()\">getRangeAt</a>(in long i, out long min, out long max);</code></td>\n  </tr>\n  <tr>\n   <td><code>long <a href=\"#getRangeCount()\">getRangeCount</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#invalidateSelection()\">invalidateSelection</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#invertSelection()\">invertSelection</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#isSelected()\">isSelected</a>(in long index);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#rangedSelect()\">rangedSelect</a>(in long startIndex, in long endIndex, in boolean augment);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#select()\">select</a>(in long index);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#selectAll()\">selectAll</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#timedSelect()\">timedSelect</a>(in long index, in long delay);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#toggleSelect()\">toggleSelect</a>(in long index);</code></td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>count</code></td>\n   <td><code><a href=\"/en/long\" title=\"en/long\">long</a></code></td>\n   <td>The number of rows currently selected in this tree. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>currentColumn</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsITreeColumn\" title=\"\">nsITreeColumn</a></code></code></td>\n   <td>The current column. </td>\n  </tr>\n  <tr>\n   <td><code>currentIndex</code></td>\n   <td><code><a href=\"/en/long\" title=\"en/long\">long</a></code></td>\n   <td>\n    <p>The current item (the one with focus).</p>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> This property indicates only the index of the row with tree cursor around it. This is not a reliable method of determining the selected row, as the selection may include multiple rows, or the focused row may not even be selected.</div></td>\n  </tr>\n  <tr>\n   <td><code>selectEventsSuppressed</code></td>\n   <td><code><a href=\"/en/boolean\" title=\"en/boolean\">boolean</a></code></td>\n   <td>\n    <p>This attribute is a boolean indicating whether or not the \"select\" event should fire when the selection is changed using one of our methods. A view can use this to temporarily suppress the selection while manipulating all of the indices, for example, on a sort.</p>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> Setting this attribute to <code>false</code> will fire a <code>select</code> event.</div></td>\n  </tr>\n  <tr>\n   <td><code>shiftSelectPivot</code></td>\n   <td><code><a href=\"/en/long\" title=\"en/long\">long</a></code></td>\n   <td>The selection \"pivot\". This is the first item the user selected as part of a ranged select. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>single</code></td>\n   <td><code><a href=\"/en/boolean\" title=\"en/boolean\">boolean</a></code></td>\n   <td>This attribute is a boolean indicating single selection. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>tree</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsITreeBoxObject\" title=\"\">nsITreeBoxObject</a></code></code></td>\n   <td>The tree widget for this selection.</td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"adjustSelection()\" name=\"adjustSelection()\">adjustSelection()</h3>\n<p>Called when the row count changes to adjust selection indices.</p>\n<pre class=\"eval\">void adjustSelection(\n  in long index,\n  in long count\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>index</code></dt>\n <dd>\n  Index of the change.</dd>\n <dt>\n  <code>count</code></dt>\n <dd>\n  Number of rows changed.</dd>\n</dl>\n<h3 id=\"clearRange()\" name=\"clearRange()\">clearRange()</h3>\n<p>Clears the range.</p>\n<pre class=\"eval\">void clearRange(\n  in long startIndex,\n  in long endIndex\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>startIndex</code></dt>\n <dd>\n  Index to clearing at.</dd>\n <dt>\n  <code>endIndex</code></dt>\n <dd>\n  Index to stop clearing at.</dd>\n</dl>\n<h3 id=\"clearSelection()\" name=\"clearSelection()\">clearSelection()</h3>\n<p>Clears the selection.</p>\n<pre class=\"eval\">void clearSelection();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"getRangeAt()\" name=\"getRangeAt()\">getRangeAt()</h3>\n<p>Returns two objects whose value properties represent the minimum and maximum indices of the given selection range. See the <a href=\"/en/XUL_Tutorial/Tree_Selection#Multiple_Selection\" title=\"https://developer.mozilla.org/en/XUL_Tutorial/Tree_Selection#Multiple_Selection\">Tree Selection tutorial</a>.</p>\n<pre class=\"eval\">void getRangeAt(\n  in long i,\n  out long min,\n  out long max\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>i</code></dt>\n <dd>\n  <code>Index of range to get (0 &lt;= i &lt; getRangeCount())</code></dd>\n <dd>\n   </dd>\n <dt>\n  <code>min</code></dt>\n <dd>\n  <code>Index of first object in range.</code></dd>\n <dt>\n  <code>max</code></dt>\n <dd>\n  <code>Index of last object in this range.  For single selections</code>, min == max.</dd>\n <dd>\n   </dd>\n</dl>\n<h3 id=\"getRangeCount()\" name=\"getRangeCount()\">getRangeCount()</h3>\n<p>Returns a count of selection ranges.</p>\n<pre class=\"eval\">long getRangeCount();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>long - number of selection ranges</p>\n<h3 id=\"invalidateSelection()\" name=\"invalidateSelection()\">invalidateSelection()</h3>\n<p>Can be used to invalidate the selection.</p>\n<pre class=\"eval\">void invalidateSelection();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"invertSelection()\" name=\"invertSelection()\">invertSelection()</h3>\n<p>Inverts the selection.</p>\n<pre class=\"eval\">void invertSelection();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"isSelected()\" name=\"isSelected()\">isSelected()</h3>\n<p>Indicates whether or not the row at the specified index is part of the selection.</p>\n<pre class=\"eval\">boolean isSelected(\n  in long index\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>index</code></dt>\n <dd>\n  Index of the row to check.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p> </p>\n<h3 id=\"rangedSelect()\" name=\"rangedSelect()\">rangedSelect()</h3>\n<p>Select the range specified by the indices.</p>\n<pre class=\"eval\">void rangedSelect(\n  in long startIndex,\n  in long endIndex,\n  in boolean augment\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>startIndex</code></dt>\n <dd>\n  Index to start selecting at.</dd>\n <dt>\n  <code>endIndex</code></dt>\n <dd>\n  Index to stop selecting at. This parameter is inclusive; to select one item, set endIndex == startIndex.</dd>\n <dt>\n  <code>augment</code></dt>\n <dd>\n  If <code>true</code>, the range is added to the selection without clearing out anything else. If <code>false</code>, everything is cleared except for the specified range.</dd>\n</dl>\n<h3 id=\"select()\" name=\"select()\">select()</h3>\n<p>Deselect all rows and select the row at the specified index.</p>\n<pre class=\"eval\">void select(\n  in long index\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>index</code></dt>\n <dd>\n  Index of the row to select.</dd>\n</dl>\n<h3 id=\"selectAll()\" name=\"selectAll()\">selectAll()</h3>\n<p>Selects all rows.</p>\n<pre class=\"eval\">void selectAll();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"timedSelect()\" name=\"timedSelect()\">timedSelect()</h3>\n<p>Perform a timed select.</p>\n<pre class=\"eval\">void timedSelect(\n  in long index,\n  in long delay\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>index</code></dt>\n <dd>\n  Index of the row to select.</dd>\n <dt>\n  <code>delay</code></dt>\n <dd>\n  Time in miliseconds to delay selection.</dd>\n</dl>\n<h3 id=\"toggleSelect()\" name=\"toggleSelect()\">toggleSelect()</h3>\n<p>Toggle the selection state of the row at the specified index.</p>\n<pre class=\"eval\">void toggleSelect(\n  in long index\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>index</code></dt>\n <dd>\n  Row to toggle.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Allasso\">Allasso</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Stevie-O\">Stevie-O</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Pc1oad1etter\">Pc1oad1etter</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sevenspade\">Sevenspade</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Hywan\">Hywan</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Wjjohnst\">Wjjohnst</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Faark\">Faark</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/One\">One</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/The%20Hunter\">The Hunter</a>",
    "title": "nsITreeSelection"
}