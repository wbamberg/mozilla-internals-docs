{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/accessible/public/nsIAccessibleTable.idl\" rel=\"custom\">accessible/public/nsIAccessibleTable.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span></div>\n</div><p></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>nsIAccessible <a href=\"#getCellAt()\">getCellAt</a>(in long rowIndex, in long columnIndex);</code> <div class=\"note\"><strong>Note:</strong> Renamed from <code>cellRefAt</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>long <a href=\"#getCellIndexAt()\">getCellIndexAt</a>(in long rowIndex, in long columnIndex);</code> <div class=\"note\"><strong>Note:</strong> Renamed from <code>getIndexAt</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>AString <a href=\"#getColumnDescription()\">getColumnDescription</a>(in long columnIndex);</code></td>\n  </tr>\n  <tr>\n   <td><code>long <a href=\"#getColumnExtentAt()\">getColumnExtentAt</a>(in long row, in long column);</code></td>\n  </tr>\n  <tr>\n   <td><code>long <a href=\"#getColumnIndexAt()\">getColumnIndexAt</a>(in long cellIndex);</code> <div class=\"note\"><strong>Note:</strong> Renamed from <code>getColumnAtIndex</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#getRowAndColumnIndicesAt()\">getRowAndColumnIndicesAt</a>(in long cellIndex, out long rowIndex, out long columnIndex);</code> </td>\n  </tr>\n  <tr>\n   <td><code>AString <a href=\"#getRowDescription()\">getRowDescription</a>(in long rowIndex);</code></td>\n  </tr>\n  <tr>\n   <td><code>long <a href=\"#getRowExtentAt()\">getRowExtentAt</a>(in long row, in long column);</code></td>\n  </tr>\n  <tr>\n   <td><code>long <a href=\"#getRowIndexAt()\">getRowIndexAt</a>(in long cellIndex);</code> <div class=\"note\"><strong>Note:</strong> Renamed from <code>getRowAtIndex</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#getSelectedCellIndices()\">getSelectedCellIndices</a>(out unsigned long cellsArraySize, [retval, array, size_is(cellsArraySize)] out long cellsArray);</code> <div class=\"note\"><strong>Note:</strong> Renamed from <code>getSelectedCells</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#getSelectedColumnIndices()\">getSelectedColumnIndices</a>(out unsigned long columnsArraySize, [retval, array, size_is(columnsArraySize)] out long columnsArray);</code> <div class=\"note\"><strong>Note:</strong> Renamed from <code>getSelectedColumns</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#getSelectedRowIndices()\">getSelectedRowIndices</a>(out unsigned long rowsArraySize, [retval, array, size_is(rowsArraySize)] out long rowsArray);</code> <div class=\"note\"><strong>Note:</strong> Renamed from <code>getSelectedRows</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#isCellSelected()\">isCellSelected</a>(in long rowIndex, in long columnIndex);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#isColumnSelected()\">isColumnSelected</a>(in long columnIndex);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#isProbablyForLayout()\">isProbablyForLayout</a>();</code> </td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#isRowSelected()\">isRowSelected</a>(in long rowIndex);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#selectColumn()\">selectColumn</a>(in long columnIndex);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#selectRow()\">selectRow</a>(in long rowIndex);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#unselectColumn()\">unselectColumn</a>(in long columnIndex);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#unselectRow()\">unselectRow</a>(in long rowIndex);</code> </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>caption</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIAccessible\" title=\"\">nsIAccessible</a></code></code></td>\n   <td>The <code>caption</code> accessible for the table. For example, html:<code>caption</code> element of html:table element. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>columnCount</code></td>\n   <td><code><a href=\"/en/long\" title=\"en/long\">long</a></code></td>\n   <td>The number of <code>columns</code> in the table. <strong>Read only.</strong> <div class=\"note\"><strong>Note:</strong> Renamed from <code>columns</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>columnHeader</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIAccessibleTable\" title=\"\">nsIAccessibleTable</a></code></code></td>\n   <td><strong>Read only.</strong> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)\">Obsolete since Gecko 1.9.2</span></td>\n  </tr>\n  <tr>\n   <td><code>rowCount</code></td>\n   <td><code><a href=\"/en/long\" title=\"en/long\">long</a></code></td>\n   <td>The number of <code>rows</code> in the table. <strong>Read only.</strong> <div class=\"note\"><strong>Note:</strong> Renamed from <code>rows</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>rowHeader</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIAccessibleTable\" title=\"\">nsIAccessibleTable</a></code></code></td>\n   <td><strong>Read only.</strong> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)\">Obsolete since Gecko 1.9.2</span></td>\n  </tr>\n  <tr>\n   <td><code>selectedCellCount</code></td>\n   <td><code><a href=\"/en/unsigned_long\" title=\"en/unsigned long\">unsigned long</a></code></td>\n   <td>The total number of selected cells. <strong>Read only.</strong>  <div class=\"note\"><strong>Note:</strong> Renamed from <code>selectedCellsCount</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>selectedCells</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIArray\" title=\"\">nsIArray</a></code></code></td>\n   <td>An array of selected cells. <strong>Read only.</strong> </td>\n  </tr>\n  <tr>\n   <td><code>selectedColumnCount</code></td>\n   <td><code><a href=\"/en/unsigned_long\" title=\"en/unsigned long\">unsigned long</a></code></td>\n   <td>The total number of selected columns. <strong>Read only.</strong>  <div class=\"note\"><strong>Note:</strong> Renamed from <code>selectedColumnsCount</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>selectedRowCount</code></td>\n   <td><code><a href=\"/en/unsigned_long\" title=\"en/unsigned long\">unsigned long</a></code></td>\n   <td>The total number of selected rows. <strong>Read only.</strong>  <div class=\"note\"><strong>Note:</strong> Renamed from <code>selectedRowsCount</code> in Gecko 1.9.2</div></td>\n  </tr>\n  <tr>\n   <td><code>summary</code></td>\n   <td><code><a href=\"/en/AString\" title=\"en/AString\">AString</a></code></td>\n   <td>The <code>summary</code> description for the table. For example, <code>@summary</code> attribute on html:table element. <strong>Read only.</strong></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<p>Return the accessible object at the specified row and column in the table. If both row and column index are valid then the corresponding accessible object is returned that represents the requested cell regardless of whether the cell is currently visible (on the screen).</p>\n\n<pre class=\"eval\">nsIAccessible getCellAt(\n  in long rowIndex,\n  in long columnIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>rowIndex</code></dt>\n <dd>The row index of the cell.</dd>\n <dt><code>columnIndex</code></dt>\n <dd>The column index of the cell.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIAccessible\" title=\"\">nsIAccessible</a></code> object.</p>\n\n<p>Translate the given row and column indices into the corresponding cell index.</p>\n\n<pre class=\"eval\">long getCellIndexAt(\n  in long rowIndex,\n  in long columnIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>rowIndex</code></dt>\n <dd>The row index of the cell.</dd>\n <dt><code>columnIndex</code></dt>\n <dd>The column index of the cell.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>A cell index.</p>\n\n<h3 id=\"getColumnDescription()\" name=\"getColumnDescription()\">getColumnDescription()</h3>\n\n<p>Return the description text of the specified column in the table.</p>\n\n<pre class=\"eval\">AString getColumnDescription(\n  in long columnIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>columnIndex</code></dt>\n <dd>The column index.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The column description.</p>\n\n<h3 id=\"getColumnExtentAt()\" name=\"getColumnExtentAt()\">getColumnExtentAt()</h3>\n\n<p>Return the number of <code>columns</code> occupied by the accessible cell at the specified row and column in the table. The result differs from 1 if the specified cell spans multiple <code>columns</code>.</p>\n\n<pre class=\"eval\">long getColumnExtentAt(\n  in long row,\n  in long column\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>row</code></dt>\n <dd>The row index of the cell.</dd>\n <dt><code>column</code></dt>\n <dd>The column index of the cell.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The number of columns the cell spans.</p>\n\n<p>Return the index of the column containg the given cell index.</p>\n\n<pre class=\"eval\">long getColumnIndexAt(\n  in long cellIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>cellIndex</code></dt>\n <dd>The cell index.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The column index.</p>\n\n<p></p><h3 id=\"getRowAndColumnIndicesAt()\">getRowAndColumnIndicesAt()</h3><p></p>\n\n<p>Translate the given cell index into the corresponding row and column indices.</p>\n\n<pre class=\"eval\">void getRowAndColumnIndicesAt(\n  in long cellIndex,\n  out long rowIndex,\n  out long columnIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>cellIndex</code></dt>\n <dd>Cell index to return row and column indices for.</dd>\n <dt><code>rowIndex</code></dt>\n <dd>Row index at the given cell index.</dd>\n <dt><code>columnIndex</code></dt>\n <dd>Column index at the given cell index.</dd>\n</dl>\n\n<h3 id=\"getRowDescription()\" name=\"getRowDescription()\">getRowDescription()</h3>\n\n<p>Return the description text of the specified row in the table.</p>\n\n<pre class=\"eval\">AString getRowDescription(\n  in long rowIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>rowIndex</code></dt>\n <dd>The row index.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The row description</p>\n\n<h3 id=\"getRowExtentAt()\" name=\"getRowExtentAt()\">getRowExtentAt()</h3>\n\n<p>Return the number of <code>rows</code> occupied by the accessible cell at the specified row and column in the table. The result differs from 1 if the specified cell spans multiple <code>rows</code>.</p>\n\n<pre class=\"eval\">long getRowExtentAt(\n  in long row,\n  in long column\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>row</code></dt>\n <dd>Row index of the cell.</dd>\n <dt><code>column</code></dt>\n <dd>Column index of the cell.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The number of rows the cell spans.</p>\n\n<p>Return the index of the row containg the given cell index.</p>\n\n<pre class=\"eval\">long getRowIndexAt(\n  in long cellIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>cellIndex</code></dt>\n <dd>The cell index.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The row index.</p>\n\n<p></p><h3 id=\"getSelectedCellIndices()\">getSelectedCellIndices()</h3><p></p>\n\n<div class=\"blockIndicator renamed renamedHeader\">\n<p>Renamed from <code>getSelectedCells</code> in Gecko 1.9.2</p>\n</div>\n\n<p>Return an array of cell indices currently selected.</p>\n\n<pre class=\"eval\">void getSelectedCellIndices(\n  out unsigned long cellsArraySize,\n  [retval, array, size_is(cellsArraySize)] out long cellsArray\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>cellsArraySize</code></dt>\n <dd>Length of array.</dd>\n <dt><code>cellsArray</code></dt>\n <dd>Array of indexes of selected cells.</dd>\n</dl>\n\n<p>Return an array of column indices currently selected.</p>\n\n<pre class=\"eval\">void getSelectedColumnIndices(\n  out unsigned long columnsArraySize,\n  [retval, array, size_is(columnsArraySize)] out long columnsArray\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>columnsArraySize</code></dt>\n <dd>Length of array.</dd>\n <dt><code>columnsArray</code></dt>\n <dd>Array of indices of selected <code>columns</code>.</dd>\n</dl>\n\n<p>Return an array of row indices currently selected.</p>\n\n<pre class=\"eval\">void getSelectedRowIndices(\n  out unsigned long rowsArraySize,\n  [retval, array, size_is(rowsArraySize)] out long rowsArray\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>rowsArraySize</code></dt>\n <dd>Length of array.</dd>\n <dt><code>rowsArray</code></dt>\n <dd>Array of indices of selected <code>rows</code>.</dd>\n</dl>\n\n<h3 id=\"isCellSelected()\" name=\"isCellSelected()\">isCellSelected()</h3>\n\n<p>Return a boolean value indicating whether the specified cell is selected.</p>\n\n<pre class=\"eval\">boolean isCellSelected(\n  in long rowIndex,\n  in long columnIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>rowIndex</code></dt>\n <dd>The row index of the cell.</dd>\n <dt><code>columnIndex</code></dt>\n <dd>The column index of the cell.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if the cell is selected, <code>false</code> if the cell is not selected.</p>\n\n<h3 id=\"isColumnSelected()\" name=\"isColumnSelected()\">isColumnSelected()</h3>\n\n<p>Return a boolean value indicating whether the specified column is selected, that is all cells within the column are selected.</p>\n\n<pre class=\"eval\">boolean isColumnSelected(\n  in long columnIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>columnIndex</code></dt>\n <dd>The column index.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if the column is selected, <code>false</code> if the column is not selected.</p>\n\n<p></p><h3 id=\"isProbablyForLayout()\">isProbablyForLayout()</h3><p></p>\n\n<p>Use heuristics to determine if table is most likely used for layout.</p>\n\n<pre class=\"eval\">boolean isProbablyForLayout();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if the table is probably for layout, <code>false</code> if the table is probably not for layout.</p>\n\n<h3 id=\"isRowSelected()\" name=\"isRowSelected()\">isRowSelected()</h3>\n\n<p>Return a boolean value indicating whether the specified row is selected, that is all cells within the row are selected.</p>\n\n<pre class=\"eval\">boolean isRowSelected(\n  in long rowIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>rowIndex</code></dt>\n <dd>The row index.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if the row is selected, <code>false</code> if the row is not selected.</p>\n\n<p></p><h3 id=\"selectColumn()\">selectColumn()</h3><p></p>\n\n<p>Select a column and unselects all previously selected <code>columns</code>.</p>\n\n<pre class=\"eval\">void selectColumn(\n  in long columnIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>columnIndex</code></dt>\n <dd>The index of the column to select.</dd>\n</dl>\n\n<p></p><h3 id=\"selectRow()\">selectRow()</h3><p></p>\n\n<p>Select a row and unselects all previously selected <code>rows</code>.</p>\n\n<pre class=\"eval\">void selectRow(\n  in long rowIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>rowIndex</code></dt>\n <dd>The index of the row to select.</dd>\n</dl>\n\n<p></p><h3 id=\"unselectColumn()\">unselectColumn()</h3><p></p>\n\n<p>Unselect the given column, leaving other selected <code>columns</code> selected (if any).</p>\n\n<pre class=\"eval\">void unselectColumn(\n  in long columnIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>columnIndex</code></dt>\n <dd>The index of the column to unselect.</dd>\n</dl>\n\n<p></p><h3 id=\"unselectRow()\">unselectRow()</h3><p></p>\n\n<p>Unselect the given row, leaving other selected <code>rows</code> selected (if any).</p>\n\n<pre class=\"eval\">void unselectRow(\n  in long rowIndex\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>rowIndex</code></dt>\n <dd>The index of the row to unselect.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SphinxKnight\">SphinxKnight</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ExE-Boss\">ExE-Boss</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Kglee\">Kglee</a>",
    "title": "nsIAccessibleTable"
}