{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/toolkit/components/commandlines/public/nsICommandLine.idl\" rel=\"custom\">toolkit/components/commandlines/public/nsICommandLine.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nRepresents the command line used to invoke a XUL application. This may be the original command line of this instance or a command line provided remotely by another instance of the application.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 5.714285714285714%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 5.714285714285714%; background: #00dd00; position: absolute; width: 94.28571428571429%;\" title=\"Introduced in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Gecko 1.8</div>\n\n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)</span></div>\n</div><p></p>\n<p>Components may implement the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICommandLineHandler\" title=\"\">nsICommandLineHandler</a></code> interface to add custom command line handling behavior.</p>\n<h2 id=\"Definitions\">Definitions</h2>\n<dl> <dt>arguments</dt> <dd>Any values found on the command line.</dd> <dt>switches</dt> <dd>Flags. In normalized form, these are preceded by a single dash. Some flags may take parameters; for example: \"-url &lt;param&gt;\" or \"-install-xpi &lt;param&gt;\".</dd>\n</dl>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>long <a href=\"#findFlag()\">findFlag</a>(in AString aFlag, in boolean aCaseSensitive);</code></td> </tr> <tr> <td><code>AString <a href=\"#getArgument()\">getArgument</a>(in long aIndex);</code></td> </tr> <tr> <td><code>boolean <a href=\"#handleFlag()\">handleFlag</a>(in AString aFlag, in boolean aCaseSensitive);</code></td> </tr> <tr> <td><code>AString <a href=\"#handleFlagWithParam()\">handleFlagWithParam</a>(in AString aFlag, in boolean aCaseSensitive);</code></td> </tr> <tr> <td><code>void <a href=\"#removeArguments()\">removeArguments</a>(in long aStart, in long aEnd);</code></td> </tr> <tr> <td><code>nsIFile <a href=\"#resolveFile()\">resolveFile</a>(in AString aArgument);</code></td> </tr> <tr> <td><code>nsIURI <a href=\"#resolveURI()\">resolveURI</a>(in AString aArgument);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Attribute</td> <td class=\"header\">Type</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>length</code></td> <td><code><a href=\"/en/long\" title=\"en/long\">long</a></code></td> <td>Number of arguments in the command line. The application name is not part of the command line. <strong>Read only.</strong></td> </tr> <tr> <td><code>preventDefault</code></td> <td><code><a href=\"/en/boolean\" title=\"en/boolean\">boolean</a></code></td> <td>There may be a command-line handler which performs a default action if there was no explicit action on the command line (open a default browser window, for example). This flag allows the default action to be prevented.</td> </tr> <tr> <td><code>state</code></td> <td><code><a href=\"/en/unsigned_long\" title=\"en/unsigned long\">unsigned long</a></code></td> <td> <p>The type of command line being processed. See <a href=\"#State_constants\">State constants</a>. <strong>Read only.</strong></p> </td> </tr> <tr> <td><code>windowContext</code></td> <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDOMWindow\" title=\"\">nsIDOMWindow</a></code></code></td> <td>A window to be targeted by this command line. In most cases, this will be <code>null</code> (xremote will sometimes set this attribute). <strong>Read only.</strong></td> </tr> <tr> <td><code>workingDirectory</code></td> <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile\" title=\"\">nsIFile</a></code></code></td> <td>The working directory for this command line. Use this property instead of the working directory for the current process, since a redirected command line may have had a different working directory. <strong>Read only.</strong></td> </tr> </tbody>\n</table>\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n<h3 id=\"State_constants\">State constants</h3>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Constant</td> <td class=\"header\">Value</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>STATE_INITIAL_LAUNCH</code></td> <td><code>0</code></td> <td>The first launch of the application instance.</td> </tr> <tr> <td><code>STATE_REMOTE_AUTO</code></td> <td><code>1</code></td> <td>A remote command line automatically redirected to this instance.</td> </tr> <tr> <td><code>STATE_REMOTE_EXPLICIT</code></td> <td><code>2</code></td> <td>A remote command line explicitly redirected to this instance using xremote/windde/appleevents.</td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"findFlag()\" name=\"findFlag()\">findFlag()</h3>\n<p>Finds a command-line flag, returning its position on the command line.</p>\n<pre class=\"eval\">long findFlag(\n  in AString aFlag,\n  in boolean aCaseSensitive\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aFlag</code></dt> <dd>The flag name to locate. Do not include the initial hyphen.</dd> <dt><code>aCaseSensitive</code></dt> <dd>Whether to do case-sensitive comparisons.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>The position of the flag in the command line, or -1 if the flag is not found.</p><h3 id=\"getArgument()\" name=\"getArgument()\">getArgument()</h3>\n<p>Gets the value an argument from the array of command-line arguments, given the index into the argument list.</p>\n<p>On Windows, flags of the form <code>/flag</code> are normalized to <code>-flag</code>. <code>/flag:param</code> are normalized to <code>-flag param</code>.</p>\n<p>On Unix/Linux and Mac OS X, flags of the form <code>--flag</code> are normalized to <code>-flag</code>, and flags of the form <code>--flag=param</code> are normalized to the form <code>-flag param</code>.</p>\n<pre class=\"eval\">AString getArgument(\n  in long aIndex\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aIndex</code></dt> <dd>The argument to retrieve. This index is 0-based, and does not include the application name.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>The value of the specified argument. This is the full text of that argument, so if the argument is a flag, the returned value is \"<code>-flag [&lt;flagvalue&gt;]</code>\".</p>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl> <dt><code>NS_ERROR_INVALID_ARG</code></dt> <dd>The specified index is out of bounds.</dd>\n</dl>\n<h3 id=\"handleFlag()\" name=\"handleFlag()\">handleFlag()</h3>\n<p>Finds the specified flag, removing it from the array of flags. Reports whether or not the specified flag was found. This is useful for Boolean flags; that is, flags that don't accept a parameter. You can determine if the flag was provided and remove it from the list of flags waiting to be processed in one operation.</p>\n<pre class=\"eval\">boolean handleFlag(\n  in AString aFlag,\n  in boolean aCaseSensitive\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aFlag</code></dt> <dd>The flag name to find and remove.</dd> <dt><code>aCaseSensitive</code></dt> <dd>Whether to do case-sensitive comparisons.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if the flag was found, otherwise <code>false</code>.</p>\n<h3 id=\"handleFlagWithParam()\" name=\"handleFlagWithParam()\">handleFlagWithParam()</h3>\n<p>Finds a flag in the list of flags waiting to be processed and returns its value, after removing both the flag and its value from the list of flags waiting to be handled. This is useful for processing flags that accept a value. This is, essentially, a helper method that combines <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICommandLine#findFlag()\">findFlag()</a></code> and <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsICommandLine#removeArguments()\">removeArguments()</a></code> into one operation.</p>\n<pre class=\"eval\">AString handleFlagWithParam(\n  in AString aFlag,\n  in boolean aCaseSensitive\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aFlag</code></dt> <dd>The flag name to find and remove.</dd> <dt><code>aCaseSensitive</code></dt> <dd>Whether to do case-sensitive flag search.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>The value of the specified flag, an empty string if the flag's value is the empty string, or <code>null</code> if the specified parameter wasn't found.</p>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl> <dt><code>NS_ERROR_INVALID_ARG</code></dt> <dd>The specified flag has no value.</dd>\n</dl>\n<h3 id=\"removeArguments()\" name=\"removeArguments()\">removeArguments()</h3>\n<p>Removes a range of arguments from the command line; this is typically done once those arguments have been handled.</p>\n<pre class=\"eval\">void removeArguments(\n  in long aStart,\n  in long aEnd\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aStart</code></dt> <dd>The index to the first argument to remove from the command line; this is 0-based, and the name of the application is not included.</dd> <dt><code>aEnd</code></dt> <dd>The index to the last argument to remove from the command line.</dd>\n</dl>\n<h3 id=\"resolveFile()\" name=\"resolveFile()\">resolveFile()</h3>\n<p>Resolves a file-path argument into an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile\" title=\"\">nsIFile</a></code> object. This method gracefully handles relative or absolute file paths, according to the working directory of this command line.</p>\n<pre class=\"eval\">nsIFile resolveFile(\n  in AString aArgument\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aArgument</code></dt> <dd>The command-line argument to resolve.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>The file path as an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile\" title=\"\">nsIFile</a></code>.</p>\n<h3 id=\"resolveURI()\" name=\"resolveURI()\">resolveURI()</h3>\n<p>Resolves a URI argument into a URI. This method has platform-specific logic for converting an absolute URI or a relative file-path into the appropriate URI object; it gracefully handles win32 C:\\ paths which would confuse the I/O service if passed directly.</p>\n<pre class=\"eval\">nsIURI resolveURI(\n  in AString aArgument\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aArgument</code></dt> <dd>The command-line argument to resolve.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>A platform-specific URI.</p>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul> <li><a href=\"/en/Chrome/Command_Line\" title=\"en/Chrome/Command_Line\">Sample JS component</a> that implements a command-line flag.</li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Grubshka\">Grubshka</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/bsmedberg\">bsmedberg</a>",
    "title": "nsICommandLine"
}