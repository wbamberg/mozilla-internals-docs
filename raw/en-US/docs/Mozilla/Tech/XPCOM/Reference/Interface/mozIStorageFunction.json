{
    "content": "<p>This is an interface that must be implemented by consumers.  It allows consumers to add functions that are available to SQL queries and triggers. There are a <a class=\"external\" href=\"http://www.sqlite.org/lang_corefunc.html\" title=\"http://www.sqlite.org/lang_corefunc.html\">number of already defined functions provided by SQLite</a>. Objects implementing this interface can be registered with <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/mozIStorageConnection#createFunction()\">mozIStorageConnection.createFunction()</a></code>.</p>\n\n<p> </p>\n\n<div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/storage/public/mozIStorageFunction.idl\" rel=\"custom\">storage/public/mozIStorageFunction.idl</a></code><span style=\"float: right; text-align: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\"><em>Please add a summary to this article.</em> </span>\n\n<div style=\"background: #eee; padding: 2px;\"><span> </span> <span style=\"float: right; text-align: right;\">Last changed in Gecko 1.9.1.4 (Firefox 3.5.4)</span></div>\n</div>\n\n<p> </p>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIVariant\" title=\"\">nsIVariant</a></code> <a href=\"#onFunctionCall()\">onFunctionCall</a>(in <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIStorageValueArray\" title=\"\">mozIStorageValueArray</a></code> aFunctionArguments);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"onFunctionCall()\" name=\"onFunctionCall()\">onFunctionCall()</h3>\n\n<p>The implementation of the function. This is called by the database engine when the function registered with <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/mozIStorageConnection#createFunction()\">mozIStorageConnection.createFunction()</a></code> is used in an executing SQL statement or trigger.</p>\n\n<p>{{Storage-threadsafety_callback_warning()}}</p>\n\n<pre class=\"eval\">nsIVariant onFunctionCall(\n  in mozIStorageValueArray aFunctionArguments\n);</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aFunctionArguments</code></dt>\n <dd>A <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIStorageValueArray\" title=\"\">mozIStorageValueArray</a></code> holding the arguments passed in to the function.</dd>\n</dl>\n\n<h6 id=\"Return\" name=\"Return\">Return value</h6>\n\n<p>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIVariant\" title=\"\">nsIVariant</a></code> this is the return value of the function.</p>\n\n<h2 id=\"Sample_Code\">Sample Code</h2>\n\n<p>Both of the following code samples assume that the variable <code>dbConn</code> is an opened <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIStorageConnection\" title=\"\">mozIStorageConnection</a></code>.</p>\n\n<h3 id=\"JavaScript\">JavaScript</h3>\n\n<p>Starting in Gecko 1.9.1.4 (Firefox 3.0.15), you can directly pass your function into the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIStorageConnection\" title=\"\">mozIStorageConnection</a></code> method <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIStorageConnection\" title=\"\">mozIStorageConnection</a></code>, like this:</p>\n\n<pre class=\"brush: js\">dbConn.createFunction(\"square\", 1, function(aArguments) {\n    let value = aArguments.getInt32(0);\n    return value * value;\n});\n\n// Run some query that uses the function.\nlet stmt = dbConn.createStatement(\"SELECT square(value) FROM some_table\");\ntry {\n  while (stmt.executeStep()) {\n    // handle the results\n  }\n}\nfinally {\n  stmt.reset();\n}\n</pre>\n\n<p>In earlier versions of Gecko, however, you'll need to actually create an object containing the <code><a href=\"#onFunctionCall\">onFunctionCall</a></code> method. This still works in Gecko 1.9.1.4 and later, so you may wish to do it this way for compatibility for the time being.</p>\n\n<pre class=\"brush: js\">// First, create our object that will represent our function.\nvar squareFunction = {\n  onFunctionCall: function(aArguments) {\n    let value = aArguments.getInt32(0);\n    return value * value;\n  }\n};\n\n// Now, register our function with the database connection.\ndbConn.createFunction(\"square\", 1, squareFunction);\n\n// Run some query that uses the function.\nlet stmt = dbConn.createStatement(\"SELECT square(value) FROM some_table\");\ntry {\n  while (stmt.executeStep()) {\n    // handle the results\n  }\n}\nfinally {\n  stmt.reset();\n}\n</pre>\n\n<h3 id=\"C\">C++</h3>\n\n<pre class=\"brush: cpp\">// First, create our class that will represent our function.\nclass squareFunction : public mozIStorageFunction\n{\npublic:\n  NS_IMETHOD OnFunctionCall(mozIStorageValueArray *aArguments,\n                            nsIVariant **_result)\n  {\n    PRInt32 value;\n    nsresult rv = aArguments-&gt;GetInt32(&amp;value);\n    NS_ENSURE_SUCCESS(rv, rv);\n    \n    nsCOMPtr&lt;nsIWritableVariant&gt; result =\n      do_CreateInstance(\"@mozilla.org/variant;1\");\n    NS_ENSURE_TRUE(result, NS_ERROR_OUT_OF_MEMORY);\n    \n    rv = result-&gt;SetAsInt64(value * value);\n    NS_ENSURE_SUCCESS(rv, rv);\n\n    NS_ADDREF(*_result = result);\n    return NS_OK;\n  }\n};\n\n// Now, register our function with the database connection.\nnsCOMPtr&lt;mozIStorageFunction&gt; func = new squareFunction();\nNS_ENSURE_TRUE(func, NS_ERROR_OUT_OF_MEMORY);\nnsresult rv = dbConn-&gt;CreateFunction(\n  NS_LITERAL_CSTRING(\"square\"),\n  1,\n  func\n);\nNS_ENSURE_SUCCESS(rv, rv);\n\n// Run some query that uses the function.\nnsCOMPtr&lt;mozIStorageStatement&gt; stmt;\nrv = dbConn-&gt;CreateStatement(NS_LITERAL_CSTRING(\n  \"SELECT square(value) FROM some_table\"),\n  getter_AddRefs(stmt)\n);\nNS_ENSURE_SUCCESS(rv, rv);\nPRBool hasMore;\nwhile (NS_SUCCEEDED(stmt-&gt;ExecuteStep(&amp;hasMore)) &amp;&amp; hasMore) {\n  // handle the results\n}\n</pre>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><a href=\"/en/Storage\" title=\"en/Storage\">Storage</a> introduction and how-to article</li>\n <li><a href=\"/en/mozIStorageConnection\" title=\"en/mozIStorageConnection\">mozIStorageConnection</a> Database connection to a specific file or in-memory data storage</li>\n <li><a href=\"/en/mozIStorageStatement\" title=\"en/mozIStorageStatement\">mozIStorageStatement</a> Create and execute SQL statements on a SQLite database.</li>\n <li><a href=\"/en/mozIStorageValueArray\" title=\"en/mozIStorageValueArray\">mozIStorageValueArray</a> Wraps an array of SQL values, such as a result row.</li>\n <li><a href=\"/En/MozIStorageAggregateFunction\" title=\"en/MozIStorageAggregateFunction\">mozIStorageAggregateFunction</a> Create a new SQLite aggregate function.</li>\n <li><a href=\"/en/mozIStorageProgressHandler\" title=\"en/mozIStorageProgressHandler\">mozIStorageProgressHandler</a> Monitor progress during the execution of a statement.</li>\n <li><a href=\"/en/mozIStorageStatementWrapper\" title=\"en/mozIStorageStatementWrapper\">mozIStorageStatementWrapper</a> Storage statement wrapper</li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/Fernandolrs\">Fernandolrs</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/sdwilsh\">sdwilsh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Wjjohnst\">Wjjohnst</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/MarcDiethelm\">MarcDiethelm</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Arehman4\">Arehman4</a>",
    "title": "mozIStorageFunction"
}