{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/dom/interfaces/push/nsIPushService.idl\" rel=\"custom\">dom/interfaces/push/nsIPushService.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nIncludes information needed to send a push message to privileged code.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 46.0 (Firefox 46.0 / Thunderbird 46.0 / SeaMonkey 2.43)</span></div>\n</div><p></p>\n\n<p>Each subscription is associated with a unique URL generated by the Push service. Sending a <code>POST</code> request to this URL routes the message to the instance of Firefox that created the subscription. A subscription also has a public key and secret; these are used to encrypt message payloads.</p>\n\n<p>This interface resembles <a href=\"/en-US/docs/Web/API/PushSubscription\" title=\"The PushSubscription interface of the Push API provides a subcription's URL endpoint and allows unsubscription from a push service.\"><code>PushSubscription</code></a> from the <a class=\"external\" href=\"https://w3c.github.io/push-api/\" hreflang=\"en\" lang=\"en\" title=\"The 'Push API' specification\">Push API</a>.</p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#getKey()\">getKey</a>(in DOMString name, [optional] out uint32_t keyLen, [array, size_is(keyLen), retval] out uint8_t key);</code></td>\n  </tr>\n  <tr>\n   <td><code>bool <a href=\"#quotaApplies()\">quotaApplies</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>bool <a href=\"#isExpired()\">isExpired</a>();</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>endpoint</code></td>\n   <td><code>DOMString</code></td>\n   <td>The subscription URL.</td>\n  </tr>\n  <tr>\n   <td><code>pushCount</code></td>\n   <td><code>long long</code></td>\n   <td>The total number of messages sent to this subscription.</td>\n  </tr>\n  <tr>\n   <td><code>lastPush</code></td>\n   <td><code>long long</code></td>\n   <td>The last time a message was sent to this subscription, in milliseconds since the epoch.</td>\n  </tr>\n  <tr>\n   <td><code>quota</code></td>\n   <td><code>long</code></td>\n   <td>The number of remaining background messages for this subscription, or <code>-1</code> if exempt.</td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"getKey()\" name=\"getKey()\">getKey()</h3>\n\n<p>Returns a byte array containing the key material for this subscription. The remote server can use these keys to encrypt and authenticate message payloads. The following key names are supported:</p>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>p256dh</code></td>\n   <td>The ECDH public key, used as the input keying material in the HKDF invocation during encryption.</td>\n  </tr>\n  <tr>\n   <td><code>auth</code></td>\n   <td>The shared authentication secret, used as the salt in the HKDF invocation.</td>\n  </tr>\n </tbody>\n</table>\n\n<pre class=\"eval\">void getKey(\n  in DOMString name,\n  [optional] out uint32_t keyLen,\n  [array, size_is(keyLen), retval] out uint8_t key\n);\n</pre>\n\n<h4 id=\"getKey-parameters\" name=\"getKey-parameters\">Parameters</h4>\n\n<dl>\n <dt><code>name</code></dt>\n <dd>The encryption key name.</dd>\n <dt><code>keyLen</code></dt>\n <dd>The keying material length.</dd>\n <dt><code>key</code></dt>\n <dd>The byte array containing the keying material.</dd>\n</dl>\n\n<div class=\"note\">\n<p><code>keyLen</code> and <code>key</code> are out parameters. When called from JavaScript, <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPushSubscription#getKey()\">nsIPushSubscription.getKey()</a></code> only takes <code>name</code> as a parameter, and returns <code>key</code>. Please see <a href=\"/en-US/docs/Mozilla/XPIDL#Method_parameters\" title=\"XPIDL is an Interface Description Language used to specify XPCOM interface classes.\">Method parameters</a> in <a href=\"/en-US/docs/Mozilla/XPIDL\" title=\"XPIDL is an Interface Description Language used to specify XPCOM interface classes.\">XPIDL</a> for more details on using out parameters in JavaScript.</p>\n</div>\n\n<h3 id=\"quotaApplies()\" name=\"quotaApplies()\">quotaApplies()</h3>\n\n<p>Indicates whether this subscription is subject to the background message quota.</p>\n\n<pre class=\"eval\">bool quotaApplies();\n</pre>\n\n<div class=\"note\">\n<p><code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPushSubscription#quotaApplies()\">nsIPushSubscription.quotaApplies()</a></code> always returns <code>false</code> for system subscriptions.</p>\n</div>\n\n<h4 id=\"quotaApplies-parameters\" name=\"quotaApplies-parameters\">Parameters</h4>\n\n<p>None.</p>\n\n<h3 id=\"isExpired()\" name=\"isExpired()\">isExpired()</h3>\n\n<p>Indicates whether this subscription has expired and must be renewed. A subscription expires if its service worker exceeds the quota, or if the <code>desktop-notification</code> permission for its origin is revoked.</p>\n\n<pre class=\"eval\">bool isExpired();\n</pre>\n\n<div class=\"note\">\n<p><code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPushSubscription#isExpired()\">nsIPushSubscription.isExpired()</a></code> always returns <code>false</code> for system subscriptions.</p>\n</div>\n\n<h4 id=\"isExpired-parameters\" name=\"isExpired-parameters\">Parameters</h4>\n\n<p>None.</p>\n\n<h2 id=\"Example\" name=\"Example\">Example</h2>\n\n<pre class=\"brush: javascript\">const { classes: Cc, interfaces: Ci, utils: Cu } = Components;\n\nconst scriptSecurityManager = Cc[\"@mozilla.org/scriptsecuritymanager;1\"]\n                                .getService(Ci.nsIScriptSecurityManager);\nconst pushService = Cc[\"@mozilla.org/push/Service;1\"]\n                      .getService(Ci.nsIPushService);\n\nfunction sendSubscriptionToServer(subscription) {\n  let request = Cc[\"@mozilla.org/xmlextras/xmlhttprequest;1\"]\n                  .createInstance(Ci.nsIXMLHttpRequest);\n  request.open(\"POST\", \"https://example.com/register-for-push\", true);\n  request.addEventListener(\"error\", () =&gt; {\n    Cu.reportError(\"Error sending subscription to server\");\n  });\n  request.send(JSON.stringify({\n    endpoint: subscription.endpoint,\n\n    // Base64-encode the key and authentication secret.\n    key: String.fromCharCode.apply(null, btoa(subscription.getKey(\"p256dh\"))),\n    secret: String.fromCharCode.apply(null, btoa(subscription.getKey(\"auth\"))),\n  }));\n}\n\npushService.subscribe(\n  \"chrome://my-module/push\",\n  scriptSecurityManager.getSystemPrincipal(),\n  (code, subscription) =&gt; {\n    if (!Components.isSuccessCode(code)) {\n      Cu.reportError(\"Error creating subscription: \" + code);\n    } else {\n      sendSubscriptionToServer(subscription);\n    }\n  }\n);\n</pre>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPushService\" title=\"\">nsIPushService</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPushMessage\" title=\"\">nsIPushMessage</a></code></li>\n <li><a href=\"/en-US/docs/Web/API/PushSubscription\" title=\"The PushSubscription interface of the Push API provides a subcription's URL endpoint and allows unsubscription from a push service.\"><code>PushSubscription</code></a></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/rolfedh\">rolfedh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kitcambridge\">kitcambridge</a>",
    "title": "nsIPushSubscription"
}