{
    "content": "<div class=\"summary\">\n<p>IDL file: <a href=\"http://dxr.mozilla.org/mozilla-central/source/dom/base/nsIMessageManager.idl\">mozilla-central/source/dom/base/nsIMessageManager.idl</a></p>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code></p>\n</div>\n\n<p>This interface is used by parent process message managers to load scripts into a child process. The scripts run only once per process. The global object for process scripts is a ContentProcessMessageManager.</p>\n\n<h2 id=\"Methods\">Methods</h2>\n\n<table class=\"fullwidth-table standard-table\">\n <tbody>\n  <tr>\n   <td>\n    <p><code>void loadProcessScript(in AString aURL,<br>\n                            in boolean aAllowDelayedLoad)</code></p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>void removeDelayedProcessScript(in AString aURL);</code></td>\n  </tr>\n  <tr>\n   <td><code>jsval getDelayedProcessScripts();</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h3 id=\"loadProcessScript()\">loadProcessScript()</h3>\n\n<p>Load a script in the child process. Process scripts are loaded as soon as <code>loadProcessScript()</code> is called.</p>\n\n<p>If this function is called on a <code>ChromeMessageBroadcaster</code>, :</p>\n\n<ul>\n <li>it will load the process script into all child processes.</li>\n <li>if <code>aAllowDelayedLoad</code> is <code>true</code>, then the script will also be loaded into any new child processes created after the <code>loadProcessScript()</code> call. Otherwise it will only be loaded into child processes that exist at the time of the call.</li>\n</ul>\n\n<p>If this function is called on a <code>ChromeMessageSender</code>:</p>\n\n<ul>\n <li>it will load the process script only into this <code>ChromeMessageSender</code>'s child process</li>\n <li><code>aAllowDelayedLoad</code> should always be <code>true</code>. It's possible that the child process for this <code>ChromeMessageSender</code> is not yet available at the time of the <code>loadProcessScript()</code> call, and if you pass <code>false</code> in this situation, your process script won't be loaded.</li>\n</ul>\n\n<p>For example:</p>\n\n<pre class=\"brush: js\">let ppmm = Services.ppmm.getChildAt(1);\nppmm.loadProcessScript('data:,dump(\"foo\\n\");', true);</pre>\n\n<h4 id=\"Parameters\">Parameters</h4>\n\n<table class=\"fullwidth-table standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Name</th>\n   <th scope=\"col\">Type</th>\n   <th scope=\"col\">Description</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>aURL</code></td>\n   <td>String</td>\n   <td>URL for the script to load. aURL must be the absolute URL. <code>data:</code> URLs are also supported. For example <code>data:,dump(\"foo\\n\");</code></td>\n  </tr>\n  <tr>\n   <td><code>aAllowDelayedLoad</code></td>\n   <td>Boolean</td>\n   <td>\n    <p>If this flag is <code>false</code>, the process script will only be loaded into child processes that are already running at the time of the call.</p>\n\n    <p>If this flag is true, the process script will be loaded into any new child processes created after the <code>loadProcessScript()</code> call, until <code><code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIProcessScriptLoader#removeDelayedProcessScript()\">removeDelayedProcessScript()</a></code></code> is called for that script.</p>\n\n    <p>If you are calling <code>loadProcessScript()</code> on a <code>ChromeMessageSender</code>, you should always pass <code>true</code> here.</p>\n   </td>\n  </tr>\n </tbody>\n</table>\n\n<h3 id=\"removeDelayedProcessScript()\">removeDelayedProcessScript()</h3>\n\n<p>Removes <code>aURL</code> from the list of scripts which support delayed load.</p>\n\n<p>This cancels the effect of the <code>aAllowDelayedLoad</code> flag, meaning that the loader will no longer load the script into new child processes. If you used <code>aAllowDelayedLoad</code>, you should call this as part of your cleanup (for example, when your add-on is disabled or uninstalled).</p>\n\n<h4 id=\"Parameters_2\">Parameters</h4>\n\n<table class=\"fullwidth-table standard-table\">\n <tbody>\n  <tr>\n   <th scope=\"col\">Name</th>\n   <th scope=\"col\">Type</th>\n   <th scope=\"col\">Description</th>\n  </tr>\n  <tr>\n   <td><code>aURL</code></td>\n   <td>String</td>\n   <td>URL for the script to remove.</td>\n  </tr>\n </tbody>\n</table>\n\n<h3 id=\"getDelayedProcessScripts()\">getDelayedProcessScripts()</h3>\n\n<p>Returns all delayed scripts that will be loaded once a child process becomes available. The return value is a list of pairs <code>[&lt;URL&gt;, false]</code>.</p>\n\n<h4 id=\"Returns\">Returns</h4>\n\n<p>List of the delayed scripts. Each script is returned as a pair: <code>[&lt;URL&gt;, false]</code>.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>",
    "title": "nsIProcessScriptLoader"
}