{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/base/public/nsISocketTransportService.idl\" rel=\"custom\">netwerk/base/public/nsISocketTransportService.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface provides a mapping between a socket type and its associated socket provider instance. One could also use the service manager directly.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9 (Firefox 3)</span></div>\n</div><p></p>\n<p>Implemented by: <code>@mozilla.org/network/socket-transport-service;1</code>. To create an instance, use:</p>\n<pre class=\"eval\">var socketTransportService = Components.classes[\"@mozilla.org/network/socket-transport-service;1\"]\n                             .getService(Components.interfaces.nsISocketTransportService);\n</pre>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#attachSocket()\">attachSocket</a>(in PRFileDescPtr aFd, in nsASocketHandlerPtr aHandler);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span> </td> </tr> <tr> <td><code>nsISocketTransport <a href=\"#createTransport()\">createTransport</a>([array, size_is(aTypeCount)] in string aSocketTypes, in unsigned long aTypeCount, in AUTF8String aHost, in long aPort, in nsIProxyInfo aProxyInfo);</code></td> </tr> <tr> <td><code>void <a href=\"#init()\">init</a>();</code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\">Obsolete since Gecko 1.8</span></td> </tr> <tr> <td><code>void <a href=\"#notifyWhenCanAttachSocket()\">notifyWhenCanAttachSocket</a>(in nsIRunnable aEvent);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span> </td> </tr> <tr> <td><code>void <a href=\"#shutdown()\">shutdown</a>();</code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\">Obsolete since Gecko 1.8</span></td> </tr> </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Attribute</td> <td class=\"header\">Type</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>autodialEnabled</code></td> <td><code><a href=\"/en/boolean\" title=\"en/boolean\">boolean</a></code></td> <td>controls whether or not the socket transport service should poke the autodialer on connection failure. <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\">Obsolete since Gecko 1.8</span></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"attachSocket\">attachSocket</h3></div><p></p>\n<p></p>\n<p>Adds a new socket to the list of controlled sockets.</p>\n<p>This will fail with the error code <code>NS_ERROR_NOT_AVAILABLE</code> if the maximum number of sockets is already reached. In this case, the <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISocketTransportService#notifyWhenCanAttachSocket()\">notifyWhenCanAttachSocket()</a></code> method should be used.</p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> This function may only be called from an event dispatch on the socket thread.</div><p></p>\n<pre class=\"eval\">void attachSocket(\n  in PRFileDescPtr aFd,\n  in nsASocketHandlerPtr aHandler\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aFd</code></dt> <dd>Open file descriptor of the socket to control.</dd> <dt><code>aHandler</code></dt> <dd>Socket handler that will receive notifications when the socket is ready or detached.</dd>\n</dl>\n<h3 id=\"createTransport()\" name=\"createTransport()\">createTransport()</h3>\n<p>Creates a transport for a specified host and port.</p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> This function can be called from any thread.</div><p></p>\n<pre class=\"eval\">nsISocketTransport createTransport(\n  [array, size_is(aTypeCount)] in string aSocketTypes,\n  in unsigned long aTypeCount,\n  in AUTF8String aHost,\n  in long aPort,\n  in nsIProxyInfo aProxyInfo\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aSocketTypes</code></dt> <dd>Array of socket type strings. Currently <code>\"starttls\"</code>, <code>\"ssl\"</code> and <code>\"udp\"</code> are supported. Set to <code>null</code> if the default socket type should be used. You do not need to specify the strings <code>\"socks\"</code> or <code>\"socks4\"</code>, use the <code>aProxyInfo</code> instead.</dd> <dt><code>aTypeCount</code></dt> <dd>Specifies length of <code>aSocketTypes</code>.</dd> <dt><code>aHost</code></dt> <dd>Specifies the target hostname or IP address literal of the peer for this socket.</dd> <dt><code>aPort</code></dt> <dd>Specifies the target port of the peer for this socket.</dd> <dt><code>aProxyInfo</code></dt> <dd>Specifies the transport-layer proxy type to use. Set to <code>null</code> if no proxy should be used.</dd> <dd>For more details on communicating information about proxies like SOCKS (which are transparent to upper protocols), see <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIProxiedProtocolHandler\" title=\"\">nsIProxiedProtocolHandler</a></code> , <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIProtocolProxyService\" title=\"\">nsIProtocolProxyService</a></code> or <a class=\"internal\" href=\"/en/Proxies_in_Necko\" title=\"En/Proxies in Necko\">Proxies in Necko</a>.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISocketTransport\" title=\"\">nsISocketTransport</a></code> containing the SocketTransport.</p>\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"init()\">init()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)</span>\n        </div><p></p>\n<pre class=\"eval\">void init();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"notifyWhenCanAttachSocket\">notifyWhenCanAttachSocket</h3></div><p></p>\n<p></p>\n<p>If the number of sockets reaches the limit, then consumers can be notified when the number of sockets becomes less than the limit. The notification is asynchronous, delivered via the given <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIRunnable\" title=\"\">nsIRunnable</a></code> instance on the socket transport thread.</p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> This function may only be called from an event dispatch on the socket thread.</div><p></p>\n<pre class=\"eval\">void notifyWhenCanAttachSocket(\n  in nsIRunnable aEvent\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aEvent</code></dt> <dd>Event that will receive the notification when a new socket can be attached.</dd>\n</dl>\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"shutdown()\">shutdown()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)</span>\n        </div><p></p>\n<pre class=\"eval\">void shutdown();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h2 id=\"Example\" name=\"Example\">Example</h2>\n<pre class=\"brush: js\"> // at first, we need a nsISocketTransportService ....\n var transportService =\n     Components.classes[\"@mozilla.org/network/socket-transport-service;1\"]\n       .getService(Components.interfaces.nsISocketTransportService);\n \n // ... then it is time to create the transport. It will connect to ...\n // ... mozilla.org:2000 with TLS support and default proxy settings\n var socket = transportService.createTransport([\"starttls\"], 1,\"mozilla.org\", 2000, null);\n</pre>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul> <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISocketTransport\" title=\"\">nsISocketTransport</a></code></li> <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIRunnable\" title=\"\">nsIRunnable</a></code></li> <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIProxyInfo\" title=\"\">nsIProxyInfo</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Smi\">Smi</a>",
    "title": "nsISocketTransportService"
}