{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/protocol/http/nsIHttpHeaderVisitor.idl\" rel=\"custom\">netwerk/protocol/http/nsIHttpHeaderVisitor.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface is used to view <a href='\"/en/HTTP\"' title='\"en/HTTP\"'>HTTP</a> request and response headers.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#visitHeader()\">visitHeader</a>(in ACString aHeader, in ACString aValue);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"visitHeader()\" name=\"visitHeader()\">visitHeader()</h3>\n\n<p>Called by the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIHttpChannel\" title=\"\">nsIHttpChannel</a></code> implementation when visiting request and response headers. This method can throw an exception to terminate enumeration of the channel's headers.</p>\n\n<pre class=\"eval\">void visitHeader(\n  in ACString aHeader,\n  in ACString aValue\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aHeader</code></dt>\n <dd>A string containing the key for a header such as \"Content-Type\"</dd>\n <dt><code>aValue</code></dt>\n <dd>The header's value field such as \"text/html\". Multiple values are separated by a comma.</dd>\n</dl>\n\n<h2 id=\"Example\" name=\"Example\">Example</h2>\n\n<p>This example shows how to detect Flash content. It implements the <code>nsIHttpHeaderVisitor</code> Interface in JavaScript and uses it to evaluate the mime type of a http response. This is done by subscribing to the <code>http-on-examine-response</code> and <code>http-on-examine-cached-response</code> observers. When the observer fires, the visitor interface is used to walk through the response headers and evaluate the MIME type.</p>\n\n<pre class=\"brush: js\">myNsIHttpHeaderVisitor = function ( ) {\n        this._isFlash = false;\n};\nmyNsIHttpHeaderVisitor.prototype.visitHeader = function ( aHeader, aValue ) {\n        if ( aHeader.indexOf( \"Content-Type\" ) !== -1 ) {\n            if ( aValue.indexOf( \"application/x-shockwave-flash\" ) !== -1 ) {\n                this._isFlash = true;\n            }\n        }\n};\nmyNsIHttpHeaderVisitor.prototype.isFlash = function ( ) {\n\treturn this._isFlash;\n};\n\nmyHttpRequestObserver = function ( ) {\n        this.register( );\n        this.aborted = Components.results.NS_BINDING_ABORTED;\n        this.nsIHttpChannel = Components.interfaces.nsIHttpChannel;\n        this.nsIChannel = Components.interfaces.nsIChannel;\n        this.nsIRequest = Components.interfaces.nsIRequest;\n};\n\nmyHttpRequestObserver.prototype.observe = function ( subject, topic, data ) {\n\n        var uri, aVisitor;\n       \n        if ( subject instanceof this.nsIHttpChannel ) {\n            aVisitor = new myNsIHttpHeaderVisitor( );\n            subject.visitResponseHeaders( aVisitor );\n            if ( aVisitor.isFlash( ) ) {\n                uri = subject.URI;\n                subject.cancel( this.aborted );\n                alert( \"Found Flash!\" ); \n\t\t//handle flash file here\n            }\n        }\n};\n\nmyHttpRequestObserver.prototype.register = function ( ) {\n        var observerService = Components.classes[ \"@<a class=\"linkification-ext external\" href=\"http://mozilla.org/observer-service;1\" title=\"Linkification: http://mozilla.org/observer-service;1\">mozilla.org/observer-service;1</a>\" ].getService( Components.interfaces.nsIObserverService );\n        observerService.addObserver(this, \"http-on-examine-response\", false);\n        observerService.addObserver(this, \"http-on-examine-cached-response\", false);\n};\n\nmyHttpRequestObserver.prototype.unregister = function ( ) {\n        var observerService = Components.classes[ \"@<a class=\"linkification-ext external\" href=\"http://mozilla.org/observer-service;1\" title=\"Linkification: http://mozilla.org/observer-service;1\">mozilla.org/observer-service;1</a>\" ].getService( Components.interfaces.nsIObserverService );\n        observerService.removeObserver( this, \"http-on-examine-response\" );\n        observerService.removeObserver(this, \"http-on-examine-cached-response\");\n};\n</pre>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIHttpChannel\" title=\"\">nsIHttpChannel</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kafene\">kafene</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/EricYChu\">EricYChu</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/MKaply\">MKaply</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Smi\">Smi</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Btipling\">Btipling</a>",
    "title": "nsIHttpHeaderVisitor"
}