{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/threads/nsIProcess.idl\" rel=\"custom\">xpcom/threads/nsIProcess.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface represents an executable process.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span></div>\n</div><p></p>\n\n<p>Implemented by: <code>@mozilla.org/process/util;1</code>. To create an instance, use:</p>\n\n<pre class=\"eval\">var process = Components.classes[\"@mozilla.org/process/util;1\"]\n              .createInstance(Components.interfaces.nsIProcess);\n</pre>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#init()\">init</a>(in nsIFile executable);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#initWithPid()\">initWithPid</a>(in unsigned long pid);</code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)\">Obsolete since Gecko 1.9.2</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#kill()\">kill</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#run()\">run</a>(in boolean blocking, [array, size_is(count)] in string args, in unsigned long count);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#runAsync()\">runAsync</a>([array, size_is(count)] in string args, in unsigned long count, [optional] in nsIObserver observer, [optional] in boolean holdWeak);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#runw()\">runw</a>(in boolean blocking, [array, size_is(count)] in wstring args, in unsigned long count);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#runwAsync()\">runwAsync</a>([array, size_is(count)] in wstring args, in unsigned long count, [optional] in nsIObserver observer, [optional] in boolean holdWeak);</code> </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>exitValue</code></td>\n   <td><code><a href=\"/en/long\" title=\"en/long\">long</a></code></td>\n   <td>The value returned by the process upon exit. This is only valid after the process has exited. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>isRunning</code></td>\n   <td><code><a href=\"/en/boolean\" title=\"en/boolean\">boolean</a></code></td>\n   <td><code>true</code> if the process is running, otherwise <code>false</code>. Only accurate if the process was run with blocking disabled. <strong>Read only.</strong> </td>\n  </tr>\n  <tr>\n   <td><code>location</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile\" title=\"\">nsIFile</a></code></code></td>\n   <td>\n    <p>The location of the executable file on disk. <strong>Read only.</strong></p>\n\n    <p></p><div class=\"blockIndicator geckoMinVer standardNote\">\n  <div style=\"text-align: center; font-weight: bold; padding-bottom: 0.5em;\">Gecko 1.9.1 note</div>\n  <div>This attribute is no longer implemented as of Gecko 1.9.1, and is removed entirely in Gecko 1.9.2.</div>\n</div><p></p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>pid</code></td>\n   <td><code><a href=\"/en/unsigned_long\" title=\"en/unsigned long\">unsigned long</a></code></td>\n   <td>The process ID of the process. This value is only available after the process has started; in addition, some platforms may not offer this value at all. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>processName</code></td>\n   <td><code><a href=\"/en/string\" title=\"en/string\">string</a></code></td>\n   <td>\n    <p>The name of the process. <strong>Read only.</strong></p>\n\n    <p></p><div class=\"blockIndicator geckoMinVer standardNote\">\n  <div style=\"text-align: center; font-weight: bold; padding-bottom: 0.5em;\">Gecko 1.9.1 note</div>\n  <div>This attribute is no longer implemented as of Gecko 1.9.1, and is removed entirely in Gecko 1.9.2.</div>\n</div><p></p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>processSignature</code></td>\n   <td><code><a href=\"/en/unsigned_long\" title=\"en/unsigned long\">unsigned long</a></code></td>\n   <td>\n    <p>The process signature. <strong>Read only.</strong></p>\n\n    <p></p><div class=\"blockIndicator geckoMinVer standardNote\">\n  <div style=\"text-align: center; font-weight: bold; padding-bottom: 0.5em;\">Gecko 1.9.1 note</div>\n  <div>This attribute is no longer implemented as of Gecko 1.9.1, and is removed entirely in Gecko 1.9.2.</div>\n</div><p></p>\n   </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"init()\" name=\"init()\">init()</h3>\n\n<p>Initializes the <code>nsIProcess</code> with the specified executable file. Once initialized, you can start the process executing by calling <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIProcess#run()\">run()</a></code>.</p>\n\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> This function does not work with application bundles on Mac OS X, see <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=307463\" title=\"nsProcess::init fails for Mac OS X application bundles (foo.app)\">bug 307463</a> for details.</div><p></p>\n\n<pre class=\"eval\">void init(\n  in nsIFile executable\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>executable</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile\" title=\"\">nsIFile</a></code> executable file to be represented by the <code>nsIProcess</code> object.</dd>\n</dl>\n\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"initWithPid()\">initWithPid()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)</span>\n        </div><p></p>\n\n<p>Initializes the <code>nsIProcess</code> to represent an existing process, given that process's ID.</p>\n\n<p></p><div class=\"blockIndicator geckoMinVer standardNote\">\n  <div style=\"text-align: center; font-weight: bold; padding-bottom: 0.5em;\">Gecko 1.9.1 note</div>\n  <div>This method is no longer implemented as of Gecko 1.9.1, and is removed entirely in Gecko 1.9.2.</div>\n</div><p></p>\n\n<pre class=\"eval\">void initWithPid(\n  in unsigned long pid\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>pid</code></dt>\n <dd>The process ID to begin to represent.</dd>\n</dl>\n\n<h3 id=\"kill()\" name=\"kill()\">kill()</h3>\n\n<p>Immediately terminates the process represented by the <code>nsIProcess</code> object. This only works if the process was run without blocking enabled.</p>\n\n<p></p><div class=\"blockIndicator geckoMinVer standardNote\">\n  <div style=\"text-align: center; font-weight: bold; padding-bottom: 0.5em;\">Gecko 1.9.1 note</div>\n  <div>Prior to Gecko 1.9.1 (Firefox 3.5), this method did not work on Windows or Mac OS X. Now it does.</div>\n</div><p></p>\n\n<pre class=\"eval\">void kill();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h3 id=\"run()\" name=\"run()\">run()</h3>\n\n<p>Starts executing the process.</p>\n\n<p></p><div class=\"blockIndicator geckoMinVer standardNote\">\n  <div style=\"text-align: center; font-weight: bold; padding-bottom: 0.5em;\">Gecko 1.9.1 note</div>\n  <div>Prior to Gecko 1.9.1 (Firefox 3.5), this method returned the process ID of the newly executing process. It no longer returns a value.</div>\n</div><p></p>\n\n<pre class=\"eval\">void run(\n  in boolean blocking,\n  [array, size_is(count)] in string args,\n  in unsigned long count\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>blocking</code></dt>\n <dd>If <code>true</code>, this method will block until the process terminates; if <code>false</code>, the method returns immediately.</dd>\n <dt><code>args</code></dt>\n <dd>An array of <code>count</code> arguments, using the native character set, to be passed to the executable on its command line.</dd>\n <dt><code>count</code></dt>\n <dd>The number of arguments in the <code>args</code> array.</dd>\n</dl>\n\n<p></p><h3 id=\"runAsync()\">runAsync()</h3><p></p>\n\n<p>Asynchronously runs the process with which the object was initialized, optionally calling an observer when the process finishes running.</p>\n\n<pre class=\"eval\">void runAsync(\n  [array, size_is(count)] in string args,\n  in unsigned long count,\n  in nsIObserver observer, <span class=\"inlineIndicator optional optionalInline\">Optional</span>\n  in boolean holdWeak <span class=\"inlineIndicator optional optionalInline\">Optional</span>\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>args</code></dt>\n <dd>An array of arguments to pass into the process, using the native character set. This array must have <code>count</code> entries.</dd>\n <dt><code>count</code></dt>\n <dd>The number of arguments passed in the <code>args</code> array.</dd>\n <dt><code>observer</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt>\n <dd>An observer that will be notified when the process exits. The observer will receive this <code>nsIProcess</code> instance as the subject and \"process-finished\" or \"process-failed\" as the topic. The observer will be notified on the main thread.</dd>\n <dt><code>holdWeak</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt>\n <dd>If <code>true</code>, a <a class=\"internal\" href=\"/en/Weak_reference\" title=\"en/Weak reference\">weak reference</a> is used to hold the observer.</dd>\n <dd> </dd>\n</dl>\n\n<p></p><h3 id=\"runw()\">runw()</h3><p></p>\n\n<p>Executes the file this object was initialized with.</p>\n\n<pre class=\"eval\">void runw(\n  in boolean blocking,\n  [array, size_is(count)] in wstring args,\n  in unsigned long count\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>blocking</code></dt>\n <dd>If <code>true</code>, this method will block until the process terminates; if <code>false</code>, the method returns immediately.</dd>\n <dt><code>args</code></dt>\n <dd>An array of <code>count</code> arguments, using UTF-16, to be passed to the executable on its command line.</dd>\n <dt><code>count</code></dt>\n <dd>The number of arguments in the <code>args</code> array.</dd>\n</dl>\n\n<p></p><h3 id=\"runwAsync()\">runwAsync()</h3><p></p>\n\n<p>Asynchronously runs the process with which the object was initialized, optionally calling an observer when the process finishes running.</p>\n\n<pre class=\"eval\">void runwAsync(\n  [array, size_is(count)] in wstring args,\n  in unsigned long count,\n  in nsIObserver observer, <span class=\"inlineIndicator optional optionalInline\">Optional</span>\n  in boolean holdWeak <span class=\"inlineIndicator optional optionalInline\">Optional</span>\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>args</code></dt>\n <dd>An array of arguments to pass into the process, using UTF-16. This array must have <code>count</code> entries.</dd>\n <dt><code>count</code></dt>\n <dd>The number of arguments passed in the <code>args</code> array.</dd>\n <dt><code>observer</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt>\n <dd>An observer that will be notified when the process exits. The observer will receive this <code>nsIProcess</code> instance as the subject and \"process-finished\" or \"process-failed\" as the topic. The observer will be notified on the main thread.</dd>\n <dt><code>holdWeak</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt>\n <dd>If <code>true</code>, a <a class=\"internal\" href=\"/en/Weak_reference\" title=\"en/Weak reference\">weak reference</a> is used to hold the observer.</dd>\n</dl>\n\n<h2 id=\"Example\" name=\"Example\">Example</h2>\n\n<pre class=\"brush: js\">// create an nsIFile for the executable\nvar file = Components.classes[\"@mozilla.org/file/local;1\"]\n                     .createInstance(Components.interfaces.nsIFile);\nfile.initWithPath(\"c:\\\\myapp.exe\");\n\n// create an nsIProcess\nvar process = Components.classes[\"@mozilla.org/process/util;1\"]\n                        .createInstance(Components.interfaces.nsIProcess);\nprocess.init(file);\n\n// Run the process.\n// If first param is true, calling thread will be blocked until\n// called process terminates.\n// Second and third params are used to pass command-line arguments\n// to the process.\nvar args = [\"argument1\", \"argument2\"];\nprocess.run(false, args, args.length);\n</pre>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile\" title=\"\">nsIFile</a></code></li>\n <li><span style=\"line-height: 1.5em;\"><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIProcess2\" title=\"\">nsIProcess2</a></code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)\">Obsolete since Gecko 1.9.2</span></span></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SphinxKnight\">SphinxKnight</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/chrisdavidmills\">chrisdavidmills</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/MKaply\">MKaply</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Wladimir_Palant\">Wladimir_Palant</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/madarche\">madarche</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/smontagu\">smontagu</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Editmonkey\">Editmonkey</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mossop\">Mossop</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/bsmedberg\">bsmedberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/firefogg\">firefogg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Brettz9\">Brettz9</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/The%20Hunter\">The Hunter</a>",
    "title": "nsIProcess"
}