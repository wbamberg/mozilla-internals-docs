{
    "content": "<p>The nsIPermissionManager interface is used to persistently store permissions for different object types (cookies, images, and so on) on a site-by-site basis.</p>\n\n<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/base/nsIPermissionManager.idl\" rel=\"custom\">netwerk/base/nsIPermissionManager.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\n<span>Â </span>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 16 (Firefox 16 / Thunderbird 16 / SeaMonkey 2.13)</span></div>\n</div><p></p>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#add()\">add</a>(in nsIURI uri, in string type, in PRUint32 permission, [optional] in PRUint32 expireType, [optional] in PRInt64 expireTime);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#addFromPrincipal()\">addFromPrincipal</a>(in nsIPrincipal principal, in string type, in PRUint32 permission, [optional] in PRUint32 expireType, [optional] in PRInt64 expireTime); </code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#remove()\">remove</a>(in AUTF8String host, in string type);</code></td>\n  </tr>\n  <tr>\n   <td>\n    <p><code>void <a href=\"#removeFromPrincipal()\">removeFromPrincipal</a>(in nsIPrincipal principal, in string type);</code> </p>\n   </td>\n  </tr>\n  <tr>\n   <td>\n    <p><code>void <a href=\"#removePermission()\">removePermission</a>(in nsIPermission perm);</code></p>\n   </td>\n  </tr>\n  <tr>\n   <td>\n    <p><code>void <a href=\"#removeAllSince()\">removeAllSince</a>(in int64_t since);</code></p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#removeAll()\">removeAll</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>PRUint32 <a href=\"#testExactPermission()\">testExactPermission</a>(in nsIURI uri, in string type);</code> </td>\n  </tr>\n  <tr>\n   <td><code>PRUint32 <a href=\"#testExactPermissionFromPrincipal()\">testExactPermissionFromPrincipal</a>(in nsIPrincipal principal, in string type);</code> </td>\n  </tr>\n  <tr>\n   <td><code>PRUint32 <a href=\"#testPermission()\">testPermission</a>(in nsIURI uri, in string type);</code></td>\n  </tr>\n  <tr>\n   <td><code>PRUint32 <a href=\"#testPermissionFromPrincipal()\">testPermissionFromPrincipal</a>(in nsIPrincipal principal, in string type);</code> </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>enumerator</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISimpleEnumerator\" title=\"\">nsISimpleEnumerator</a></code></code></td>\n   <td>Enumerates all stored permissions. Allows access to <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermission\" title=\"\">nsIPermission</a></code> objects.<strong> Read only.</strong></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n\n<h3 id=\"Permission_type_constants\" name=\"Permission_type_constants\">Permission type constants</h3>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Constant</td>\n   <td class=\"header\">Value</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>UNKNOWN_ACTION</code></td>\n   <td><code>0</code></td>\n   <td>Default permission when no entry is found for a host. It should not be used by consumers.</td>\n  </tr>\n  <tr>\n   <td><code>ALLOW_ACTION</code></td>\n   <td><code>1</code></td>\n   <td>Permission is allowed.</td>\n  </tr>\n  <tr>\n   <td><code>DENY_ACTION</code></td>\n   <td><code>2</code></td>\n   <td>Permission is denied.</td>\n  </tr>\n  <tr>\n   <td><code>PROMPT_ACTION</code></td>\n   <td><code>3</code></td>\n   <td>Prompt user if the permission is allowed.</td>\n  </tr>\n </tbody>\n</table>\n\n<h3 id=\"Permission_expiration_constants\" name=\"Permission_expiration_constants\">Permission expiration constants</h3>\n\n<p></p>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Constant</td>\n   <td class=\"header\">Value</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>EXPIRE_NEVER</code></td>\n   <td><code>0</code></td>\n   <td>Permission never expires.</td>\n  </tr>\n  <tr>\n   <td><code>EXPIRE_SESSION</code></td>\n   <td><code>1</code></td>\n   <td>Permission expires at end of session.</td>\n  </tr>\n  <tr>\n   <td><code>EXPIRE_TIME</code></td>\n   <td><code>2</code></td>\n   <td>Permission expires at a specified time.</td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"add()\" name=\"add()\">add()</h3>\n\n<p>Add permission information and permission type for a given URI. If the permission already exists for a given type, it will be modified.</p>\n\n<pre class=\"eval\">void add(\n  in nsIURI uri,\n  in string type,\n  in PRUint32 permission,\n  [optional] in PRUint32 expireType,\n  [optional] in PRInt64 expireTime\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>uri</code></dt>\n <dd>The URI to add the permission for.</dd>\n <dt><code>type</code></dt>\n <dd>A unique, case-sensitive ASCII string identifying the consumer. Consumers should choose this string to be unique, with respect to other consumers.</dd>\n <dt><code>permission</code></dt>\n <dd>An integer specifying the permission. See <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPermissionManager#Permission_type_constants\">nsIPermissionManager.Permission_type_constants</a></code>.</dd>\n <dt><code>expireType</code></dt>\n <dd>Expiration type of the permission. See <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPermissionManager#Permission_expiration_constants\">nsIPermissionManager.Permission_expiration_constants</a></code>.</dd>\n <dt><code>expireTime</code></dt>\n <dd>Time (in milliseconds since Jan 1 1970 0:00:00) representing expiration of this permission.</dd>\n</dl>\n\n<p></p><h3 id=\"addFromPrincipal()\">addFromPrincipal()</h3><p></p>\n\n<p>Add permission information and permission type for a given principal. If the permission already exists for a given type, it will be modified. It is internally calling <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermissionManager#add()\">add()</a></code> method using the nsIURI from the principal.</p>\n\n<pre class=\"eval\">void addFromPrincipal(\n  in nsIPrincipal principal,\n  in string type,\n  in PRUint32 permission,\n  [optional] in PRUint32 expireType,\n  [optional] in PRInt64 expireTime\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>principal</code></dt>\n <dd>The principal to add the permission for.</dd>\n <dt><code>type</code></dt>\n <dd>A unique, case-sensitive ASCII string identifying the consumer. Consumers should choose this string to be unique, with respect to other consumers.</dd>\n <dt><code>permission</code></dt>\n <dd>An integer specifying the permission. See <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPermissionManager#Permission_type_constants\">nsIPermissionManager.Permission_type_constants</a></code>.</dd>\n <dt><code>expireType</code></dt>\n <dd>Expiration type of the permission. See <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIPermissionManager#Permission_expiration_constants\">nsIPermissionManager.Permission_expiration_constants</a></code>.</dd>\n <dt><code>expireTime</code></dt>\n <dd>Time (in milliseconds since Jan 1 1970 0:00:00) representing expiration of this permission.</dd>\n</dl>\n\n<h3 id=\"remove()\" name=\"remove()\">remove()</h3>\n\n<p>Remove permission information for a given host string and permission type.</p>\n\n<pre class=\"eval\">void remove(\n  in <code id=\"line-118\">nsIURI uri</code>,\n  in string type\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>nsIURI</code></dt>\n <dd>The uri whose permission will be removed.</dd>\n <dt><code>type</code></dt>\n <dd>A case-sensitive ASCII string, identifying the type of the permission to be removed. This must have been previously registered using the <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermissionManager#add()\">add()</a></code> method.</dd>\n</dl>\n\n<p></p><h3 id=\"removeFromPrincipal()\">removeFromPrincipal()</h3><p></p>\n\n<p>Remove permission information for a given principal and permission type.</p>\n\n<pre class=\"eval\">void removeFromPrincipal(\n  in nsIPrincipal principal,\n  in string type\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>principal</code></dt>\n <dd>The principal whose permission will be removed.</dd>\n <dt><code>type</code></dt>\n <dd>A case-sensitive ASCII string, identifying the type of the permission to be removed. This must have been previously registered using the <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermissionManager#add()\">add()</a></code> method.</dd>\n</dl>\n\n<h3 id=\"remove()\" name=\"remove()\"><a id=\"removePermission()\" name=\"removePermission()\">removePermission()</a></h3>\n\n<p>Remove a given permission from the stored permissions.</p>\n\n<pre class=\"eval\">void removePermission(\n  <code id=\"line-134\">in nsIPermission perm</code>\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermission\">nsIPermission</a></dt>\n <dd>The permission which will be removed.</dd>\n</dl>\n\n<h3 id=\"remove()\" name=\"remove()\"><a id=\"removeAllSince()\" name=\"removeAllSince()\">removeAllSince()</a></h3>\n\n<p>Remove permission information for a given host string and permission type.</p>\n\n<pre class=\"eval\">void remove(\n  <code id=\"line-144\">in <span class=\"k\">int64_t</span> since</code>\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>since</code></dt>\n <dd>Epoch timestamp. Permission information stored after this timestamp will be removed.</dd>\n</dl>\n\n<h3 id=\"removeAll()\" name=\"removeAll()\">removeAll()</h3>\n\n<p>Remove permission information for all URIs.</p>\n\n<pre class=\"eval\">void removeAll();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<p></p><h3 id=\"testExactPermission()\">testExactPermission()</h3><p></p>\n\n<p>Checks if a URI is permitted to perform an action. This requires an exact hostname match, subdomains are not a match.</p>\n\n<pre class=\"eval\">PRUint32 testExactPermission(\n  in nsIURI uri,\n  in string type\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>uri</code></dt>\n <dd>The URI to be tested.</dd>\n <dt><code>type</code></dt>\n <dd>A case-sensitive ASCII string, identifying the consumer.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>A PRUint32 representing the permission, or UNKNOWN_ACTION if no permission exists.</p>\n\n<p></p><h3 id=\"testExactPermissionFromPrincipal()\">testExactPermissionFromPrincipal()</h3><p></p>\n\n<p>Checks if a principal is permitted to perform an action. See <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermissionManager#testExactPermission()\">testExactPermission()</a></code>.</p>\n\n<pre class=\"eval\">PRUint32 testExactPermissionFromPrincipal(\n  in nsIPrincipal principal,\n  in string type\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>principal</code></dt>\n <dd>The principal to be tested.</dd>\n <dt><code>type</code></dt>\n <dd>A case-sensitive ASCII string, identifying the consumer.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>A PRUint32 representing the permission, or UNKNOWN_ACTION if no permission exists.</p>\n\n<h3 id=\"testPermission()\" name=\"testPermission()\">testPermission()</h3>\n\n<p>Checks if a URI is permitted to perform an action.</p>\n\n<pre class=\"eval\">PRUint32 testPermission(\n  in nsIURI uri,\n  in string type\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>uri</code></dt>\n <dd>The URI to be tested.</dd>\n <dt><code>type</code></dt>\n <dd>A case-sensitive ASCII string, identifying the consumer.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>A PRUint32 representing the permission, or UNKNOWN_ACTION if no permission exists.</p>\n\n<p></p><h3 id=\"testPermissionFromPrincipal()\">testPermissionFromPrincipal()</h3><p></p>\n\n<p>Checks if a principal is permitted to perform an action.</p>\n\n<pre class=\"eval\">PRUint32 testPermissionFromPrincipal(\n  in nsIPrincipal principal,\n  in string type\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>principal</code></dt>\n <dd>The principal to be tested.</dd>\n <dt><code>type</code></dt>\n <dd>A case-sensitive ASCII string, identifying the consumer.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>A PRUint32 representing the permission, or UNKNOWN_ACTION if no permission exists.</p>\n\n<h2 id=\"Remarks\" name=\"Remarks\">Remarks</h2>\n\n<p>This service broadcasts the following notification when the permission list is changed:</p>\n\n<p>topic : \"perm-changed\" (PERM_CHANGE_NOTIFICATION) broadcast whenever the permission list changes in some way.</p>\n\n<p>There are four possible data strings for this notification; one notification will be broadcast for each change, and will involve a single permission.</p>\n\n<p>data : \"deleted\" a permission was deleted. The subject is the deleted <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermission\" title=\"\">nsIPermission</a></code>.</p>\n\n<p>data : \"added\" a permission was added. The subject is the added <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermission\" title=\"\">nsIPermission</a></code>.</p>\n\n<p>data : \"changed\" a permission was changed. The subject is the new <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPermission\" title=\"\">nsIPermission</a></code>.</p>\n\n<p>data : \"cleared\" the entire permission list was cleared. The subject is <code>null</code>.</p>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISimpleEnumerator\" title=\"\">nsISimpleEnumerator</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Aryx\">Aryx</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Jorge.villalobos\">Jorge.villalobos</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/freaktechnik\">freaktechnik</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mnoorenberghe\">mnoorenberghe</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Hashem\">Hashem</a>",
    "title": "nsIPermissionManager"
}