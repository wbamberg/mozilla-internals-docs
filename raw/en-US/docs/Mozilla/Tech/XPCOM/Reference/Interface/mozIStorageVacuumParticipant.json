{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source//storage/public/mozIStorageVacuumParticipant.idl\" rel=\"custom\">/storage/public/mozIStorageVacuumParticipant.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nComponents can implement this interface to provide information to allow a database to be periodically vacuumed by the Storage service.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 11.428571428571429%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 11.428571428571429%; background: #00dd00; position: absolute; width: 88.57142857142857%;\" title=\"Introduced in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 11.428571428571429%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 11.428571428571429%;\">Gecko 2.0</div>\n\n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span></div>\n</div><p></p>\n<p>To create an instance of this interface, use the Category Manger, with the category \"vacuum-participant\".</p>\n<p><em>Add more details here.</em></p>\n<h2 id=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>boolean <a href=\"/en/XPCOM_Interface_Reference/mozIStorageVacuumParticipant#onBeginVacuum()\" title=\"en/XPCOM Interface Reference/mozIStorageVacuumParticipant#onBeginVacuum()\">onBeginVacuum</a>();</code></td> </tr> <tr> <td><code>void <a href=\"/en/XPCOM_Interface_Reference/mozIStorageVacuumParticipant#onEndVacuum()\" title=\"en/XPCOM Interface Reference/mozIStorageVacuumParticipant#onEndVacuum()\">onEndVacuum</a>(in boolean aSucceeded);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\" style=\"width: auto;\"> <tbody> <tr> <td class=\"header\">Attribute</td> <td class=\"header\">Type</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>databaseConnection</code></td> <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIStorageConnection\" title=\"\">mozIStorageConnection</a></code></td> <td>A connection to the database file to be vacuumed.</td> </tr> <tr> <td><code>expectedDatabasePageSize</code></td> <td><code>long</code></td> <td> <p>The expected page size, in bytes, for the database. The vacuum manager will try to correct the page size when the browser is idle, using this value as a target. Valid page sizes are in the range 512 to 65,536. The recommended value is <code>mozIStorageConnection::DEFAULT_PAGE_SIZE</code>.</p> <div class=\"note\"><strong>Note:</strong> If the database is using the <code>WAL</code> journal node and the current page size is not the expected one, the journal node will be changed to <code>TRUNCATE</code> because <code>WAL</code> doesn't allow page size changes. The vacuum manager will try to restore <code>WAL</code> mode, but this will only work reliably if the participant properly resets statements. If the attempt to restore the journal node fails, it will remain <code>TRUNCATE</code>.</div> </td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\">Methods</h2>\n<h3 id=\"onBeginVacuum()\">onBeginVacuum()</h3>\n<p>Called when a vacuum operation begins. Once you receive this notification, you should avoid using the database until <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIStorageVacuumParticipant#onEndVacuum()\">onEndVacuum()</a></code> is called.</p>\n<pre>boolean onBeginVacuum();\n</pre>\n<h6 id=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\">Return value</h6>\n<p>Return <code>true</code> to allow the vacuum operation to proceed, or <code>false</code> if you don't want the database to be vacuumed. You may wish to return <code>false</code>, for example, if you're in the middle of an operation that you don't want to (or can't) interrupt.</p>\n<h2 id=\"onEndVacuum()\">onEndVacuum()</h2>\n<p>Called when a vacuum operation ends.</p>\n<pre>void onEndVacuum(\n  in boolean aSucceeded\n); \n</pre>\n<h6 id=\"Parameters_2\">Parameters</h6>\n<dl> <dt><code>aSucceeded</code></dt> <dd><code>true</code> if the vacuum operation was successful, or <code>false</code> if it wasn't successful.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>",
    "title": "mozIStorageVacuumParticipant"
}