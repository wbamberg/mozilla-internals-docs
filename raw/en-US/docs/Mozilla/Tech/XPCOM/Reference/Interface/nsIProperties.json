{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/ds/nsIProperties.idl\" rel=\"custom\">xpcom/ds/nsIProperties.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface provides methods to access a map of named XPCOM object values.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.2 </span></div>\n</div><p></p>\n<p>Implemented by: <code>@mozilla.org/file/directory_service;1</code>. To get an instance, use:</p>\n<pre class=\"eval\">var properties = Components.classes[\"@mozilla.org/file/directory_service;1\"]\n                 .getService(Components.interfaces.nsIProperties);\n</pre>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#get()\">get</a>(in string prop, in nsIIDRef iid, [iid_is(iid),retval] out nsQIResult result);</code></td> </tr> <tr> <td><code>void <a href=\"#getKeys()\">getKeys</a>(out PRUint32 count, [array, size_is(count), retval] out string keys);</code></td> </tr> <tr> <td><code>boolean <a href=\"#has()\">has</a>(in string prop);</code></td> </tr> <tr> <td><code>void <a href=\"#set()\">set</a>(in string prop, in nsISupports value);</code></td> </tr> <tr> <td><code>void <a href=\"#undefine()\">undefine</a>(in string prop);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"get()\" name=\"get()\">get()</h3>\n<p>Gets the XPCOM object associated with a particular name.</p>\n<pre class=\"eval\">void get(\n  in string prop,\n  in nsIIDRef iid,\n  [iid_is(iid),retval] out nsQIResult result\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>prop</code></dt> <dd>The property name.</dd> <dt><code>iid</code></dt> <dd>The desired interface.</dd> <dt><code>result</code></dt> <dd>The resulting object instance.</dd>\n</dl>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl> <dt><code>NS_ERROR_FAILURE</code></dt> <dd>If the property does not exist.</dd> <dt><code>NS_ERROR_NO_INTERFACE</code></dt> <dd>If the property exists, but does not support the requested interface.</dd>\n</dl>\n<h3 id=\"getKeys()\" name=\"getKeys()\">getKeys()</h3>\n<p>Returns an array of property names.</p>\n<p>nsMemory.h defines the macro NS_FREE_XPCOM_ALLOCATED_POINTER_ARRAY, which can be used to free aKeys when it is no longer needed.</p>\n<pre class=\"eval\">void getKeys(\n  out PRUint32 count,\n  [array, size_is(count), retval] out string keys\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>count</code></dt> <dd>The length of the result array.</dd> <dt><code>keys</code></dt> <dd>The resulting array of keys.</dd>\n</dl>\n<h3 id=\"has()\" name=\"has()\">has()</h3>\n<p>Tests if a property exists.</p>\n<pre class=\"eval\">boolean has(\n  in string prop\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>prop</code></dt> <dd>The property name.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if the property exists, <code>false</code> if the property does not exist.</p>\n<h3 id=\"set()\" name=\"set()\">set()</h3>\n<p>Sets the XPCOM object associated with a particular name.</p>\n<pre class=\"eval\">void set(\n  in string prop,\n  in nsISupports value\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>prop</code></dt> <dd>The property name.</dd> <dt><code>value</code></dt> <dd>The XPCOM object value to associate with prop.</dd>\n</dl>\n<h3 id=\"undefine()\" name=\"undefine()\">undefine()</h3>\n<p>Undefines a property.</p>\n<pre class=\"eval\">void undefine(\n  in string prop\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>prop</code></dt> <dd>The property name.</dd>\n</dl>\n<h2 id=\"Remarks\" name=\"Remarks\">Remarks</h2>\n<p>This interface was frozen for <span title=\"\">Gecko 1.2</span>. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=162114\" title=\"FIXED: Freeze nsIProperties\">bug 162114</a> for details. From <span title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Gecko 2.0</span> interfaces are no longer frozen.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Jiaofeng\">Jiaofeng</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Ted_Mielczarek\">Ted_Mielczarek</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Pmash\">Pmash</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dria\">Dria</a>",
    "title": "nsIProperties"
}