{
    "content": "<p>The <code>nsIDBChangeListener</code> interface is used by components wanting to receive notification when the current database changes somehow.</p>\n\n<h2 id=\"Example\" name=\"Example\">Example</h2>\n\n<p>Here is an example implementation of the listener (that does nothing):</p>\n\n<pre>var myListener = {\n  onHdrFlagsChanged: function(aHdrChanged, aOldFlags, aNewFlags, aInstigator) {},\n  onHdrDeleted: function(aHdrChanged, aParentKey, aFlags, aInstigator) {},\n  onHdrAdded: function(aHdrChanged, aParentKey, aFlags, aInstigator) {},\n  onParentChanged: function(aKeyChanged, oldParent, newParent, aInstigator) {},\n  onAnnouncerGoingAway: function(aInstigator) {},\n  onReadChanged: function(aInstigator) {},\n  onJunkScoreChanged: function(aInstigator) {},\n  onHdrPropertyChanged: function(aHdrToChange, aPreChange, aStatus, aInstigator) {},\n  onEvent: function(aDB, aEvent) {},\n\n  QueryInterface: function(aIID) {\n    if (!aIID.equals(Components.interfaces.nsIDBChangeListener) &amp;&amp;    \n        !aIID.equals(Components.interfaces.nsISupports))\n      throw Components.results.NS_ERROR_NO_INTERFACE;\n    return this;\n  }\n};\n</pre>\n\n<p>and to attach it in <a href=\"/en/Thunderbird\" title=\"en/Thunderbird\">Thunderbird</a>, we must call <code>AddListener</code> on a <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDBChangeAnnouncer\" title=\"\">nsIDBChangeAnnouncer</a></code>, typically through a <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgDatabase\" title=\"\">nsIMsgDatabase</a></code>. There are a couple of ways to access the message database: if you have a <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgFolder\" title=\"\">nsIMsgFolder</a></code>, you can do this like so:</p>\n\n<pre class=\"eval\"> someFolder.msgDatabase.AddListener(myListener);\n</pre>\n\n<p>Alternately, you can access the message database through the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgDbView\" title=\"\">nsIMsgDbView</a></code> like so:</p>\n\n<pre class=\"eval\"> gFolderDisplay.view.dbView.db.AddListener(myListener);\n</pre>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#onHdrFlagsChanged.28.29\">onHdrFlagsChanged</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> aHdrChanged, in unsigned long aOldFlags, in unsigned long aNewFlags, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> aInstigator);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onHdrDeleted.28.29\">onHdrDeleted</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> aHdrChanged, in nsMsgKey aParentKey, in long aFlags, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> aInstigator);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onHdrAdded.28.29\">onHdrAdded</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> aHdrChanged, in nsMsgKey aParentKey, in long aFlags, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> aInstigator);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onParentChanged.28.29\">onParentChanged</a>(in nsMsgKey aKeyChanged, in nsMsgKey oldParent, in nsMsgKey newParent, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> aInstigator);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onAnnouncerGoingAway.28.29\">onAnnouncerGoingAway</a>(in <a href=\"/en/XPCOM_Interface_Reference/NsIDBChangeAnnouncer\" title=\"en/XPCOM_Interface_Reference/NsIDBChangeAnnouncer\">nsIDBChangeAnnouncer</a> instigator);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onReadChanged.28.29\">onReadChanged</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> aInstigator);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onJunkScoreChanged.28.29\">onJunkScoreChanged</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> aInstigator);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onHdrPropertyChanged.28.29\">onHdrPropertyChanged</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> aHdrToChange, in unsigned long aOldFlags, in PRBool aPreChange, inout PRUint32 aStatus, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> aInstigator);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onEvent.28.29\">onEvent</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDatabase\" title=\"en/XPCOM_Interface_Reference/nsIMsgDatabase\">nsIMsgDatabase</a> aDB, in string aEvent);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"onHdrFlagsChanged.28.29\" name=\"onHdrFlagsChanged.28.29\">onHdrFlagsChanged()</h3>\n\n<p>Called when a message's flags change.</p>\n\n<pre class=\"eval\"> void onHdrFlagsChanged(in nsIMsgDBHdr aHdrChanged,\n                        in unsigned long aOldFlags,\n                        in unsigned long aNewFlags, \n                        in nsIDBChangeListener aInstigator);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aHdrChanged</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgDBHdr\" title=\"\">nsIMsgDBHdr</a></code> of the message that changed.</dd>\n <dt><code>aOldFlags</code></dt>\n <dd>The original flags on the message. Can be used to figure out what changed. Flags are defined in <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsMsgMessageFlags\" title=\"\">nsMsgMessageFlags</a></code>.</dd>\n <dt><code>aNewFlags</code></dt>\n <dd>The new flags on the message. Can be used to figure out what changed. Flags are defined in <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsMsgMessageFlags\" title=\"\">nsMsgMessageFlags</a></code>.</dd>\n <dt><code>aInstigator</code></dt>\n <dd>The caller who changed the header. This can be used to filter out events that you yourself started. <code>aInstigator</code> may also be <code>null</code>.</dd>\n</dl>\n\n<h3 id=\"onHdrDeleted.28.29\" name=\"onHdrDeleted.28.29\">onHdrDeleted()</h3>\n\n<p>Called when a header is deleted from the database.</p>\n\n<pre class=\"eval\"> void onHdrDeleted(in nsIMsgDBHdr aHdrChanged,\n                   in nsMsgKey aParentKey,\n                   in long aFlags, \n                   in nsIDBChangeListener aInstigator);\n</pre>\n\n<h6 id=\"Parameters_2\" name=\"Parameters_2\">Parameters</h6>\n\n<dl>\n <dt><code>aHdrChanged</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgDBHdr\" title=\"\">nsIMsgDBHdr</a></code> of the message that was removed.</dd>\n <dt><code>aParentKey</code></dt>\n <dd>The <code>key</code> of the parent folder for deleted header. The typedef of <code>nsMsgKey</code> is given in <a class=\"external\" href=\"http://mxr.mozilla.org/mozilla/source/mailnews/public/MailNewsTypes2.idl\">MailNewsTypes2.idl</a>.</dd>\n <dt><code>aFlags</code></dt>\n <dd>The flags on the message. Flags are defined in <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsMsgMessageFlags\" title=\"\">nsMsgMessageFlags</a></code>.</dd>\n <dt><code>aInstigator</code></dt>\n <dd>The caller who deleted the header. This can be used to filter out events that you yourself started. <code>aInstigator</code> may also be <code>null</code>.</dd>\n</dl>\n\n<h3 id=\"onHdrAdded.28.29\" name=\"onHdrAdded.28.29\">onHdrAdded()</h3>\n\n<p>Called when a header is added to the database.</p>\n\n<pre class=\"eval\"> void onHdrAdded(in nsIMsgDBHdr aHdrChanged,\n                 in nsMsgKey aParentKey,\n                 in long aFlags, \n                 in nsIDBChangeListener aInstigator);\n</pre>\n\n<h6 id=\"Parameters_3\" name=\"Parameters_3\">Parameters</h6>\n\n<dl>\n <dt><code>aHdrChanged</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgDBHdr\" title=\"\">nsIMsgDBHdr</a></code> of the message that was added.</dd>\n <dt><code>aParentKey</code></dt>\n <dd>The <code>key</code> of the parent folder for new header. The typedef of <code>nsMsgKey</code> is given in <a class=\"external\" href=\"http://mxr.mozilla.org/mozilla/source/mailnews/public/MailNewsTypes2.idl\">MailNewsTypes2.idl</a>.</dd>\n <dt><code>aFlags</code></dt>\n <dd>The flags on the message. Flags are defined in <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsMsgMessageFlags\" title=\"\">nsMsgMessageFlags</a></code>.</dd>\n <dt><code>aInstigator</code></dt>\n <dd>The caller who added the header. This can be used to filter out events that you yourself started. <code>aInstigator</code> may also be <code>null</code>.</dd>\n</dl>\n\n<h3 id=\"onParentChanged.28.29\" name=\"onParentChanged.28.29\">onParentChanged()</h3>\n\n<p>Called when a message's parent is changing (i.e. most likely it is being moved).</p>\n\n<pre class=\"eval\"> void onParentChanged(in nsMsgKey aKeyChanged,\n                      in nsMsgKey oldParent,\n                      in nsMsgKey newParent,\n                      in nsIDBChangeListener aInstigator);\n</pre>\n\n<h6 id=\"Parameters_4\" name=\"Parameters_4\">Parameters</h6>\n\n<dl>\n <dt><code>aKeyChanged</code></dt>\n <dd>The <code>key</code> of the message that changed. The typedef of <code>nsMsgKey</code> is given in <a class=\"external\" href=\"http://mxr.mozilla.org/mozilla/source/mailnews/public/MailNewsTypes2.idl\">MailNewsTypes2.idl</a>.</dd>\n <dt><code>oldParent</code></dt>\n <dd>The <code>key</code> of the old parent folder for the header. The typedef of <code>nsMsgKey</code> is given in <a class=\"external\" href=\"http://mxr.mozilla.org/mozilla/source/mailnews/public/MailNewsTypes2.idl\">MailNewsTypes2.idl</a>.</dd>\n <dt><code>newParent</code></dt>\n <dd>The <code>key</code> of the new parent folder for the header. The typedef of <code>nsMsgKey</code> is given in <a class=\"external\" href=\"http://mxr.mozilla.org/mozilla/source/mailnews/public/MailNewsTypes2.idl\">MailNewsTypes2.idl</a>.</dd>\n <dt><code>aInstigator</code></dt>\n <dd>The caller who changed the parent. This can be used to filter out events that you yourself started. <code>aInstigator</code> may also be <code>null</code>.</dd>\n</dl>\n\n<h3 id=\"onAnnouncerGoingAway.28.29\" name=\"onAnnouncerGoingAway.28.29\">onAnnouncerGoingAway()</h3>\n\n<p>Called when an announcer is being deleted.</p>\n\n<pre class=\"eval\"> void onAnnouncerGoingAway(in nsIDBChangeAnnouncer aInstigator);\n</pre>\n\n<h6 id=\"Parameters_5\" name=\"Parameters_5\">Parameters</h6>\n\n<dl>\n <dt><code>aInstigator</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDBChangeAnnouncer\" title=\"\">nsIDBChangeAnnouncer</a></code> that is being removed.</dd>\n</dl>\n\n<h3 id=\"onReadChanged.28.29\" name=\"onReadChanged.28.29\">onReadChanged()</h3>\n\n<p>Called when the <code>read</code> state of news messages changes. Only used by <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINewsDatabase\" title=\"\">nsINewsDatabase</a></code> databases. Others use the <a href=\"#onHdrFlagsChanged.28.29\">onHdrFlagsChanged()</a> method.</p>\n\n<pre class=\"eval\"> void onReadChanged(in nsIDBChangeListener aInstigator);\n</pre>\n\n<h6 id=\"Parameters_6\" name=\"Parameters_6\">Parameters</h6>\n\n<dl>\n <dt><code>aInstigator</code></dt>\n <dd>The caller who changed the read state. This can be used to filter out events that you yourself started. <code>aInstigator</code> may also be <code>null</code>.</dd>\n</dl>\n\n<h3 id=\"onJunkScoreChanged.28.29\" name=\"onJunkScoreChanged.28.29\">onJunkScoreChanged()</h3>\n\n<p>Called when the junk score of a message has changed.</p>\n\n<pre class=\"eval\"> void onJunkScoreChanged(in nsIDBChangeListener aInstigator);\n</pre>\n\n<h6 id=\"Parameters_7\" name=\"Parameters_7\">Parameters</h6>\n\n<dl>\n <dt><code>aInstigator</code></dt>\n <dd>The caller who changed the junk score. This can be used to filter out events that you yourself started. <code>aInstigator</code> may also be <code>null</code>.</dd>\n</dl>\n\n<h3 id=\"onHdrPropertyChanged.28.29\" name=\"onHdrPropertyChanged.28.29\">onHdrPropertyChanged()</h3>\n\n<p>Called in the general case where any field may have changed. <code>OnHdrPropertyChanged</code> is called twice per change. On the first call, <code>aPreChange</code> is true, and <code>aStatus</code> is undefined. <code>OnHdrPropertyChanged</code> saves any required status in <code>aStatus</code> (such as a filter match). The calling function stores the value of <code>aStatus</code>, changes the header <code>aHdrToChange</code>, then calls <code>OnHdrPropertyChanged</code> again with <code>aPreChange</code> false. On this second call, the stored value of <code>aStatus </code>is provided, so that any changes may be noted.</p>\n\n<pre class=\"eval\"> void onHdrPropertyChanged(in nsIMsgDBHdr aHdrToChange,\n                           in PRBool aPreChange,\n                           inout PRUint32 aStatus,\n                           in nsIDBChangeListener aInstigator);\n</pre>\n\n<h6 id=\"Parameters_8\" name=\"Parameters_8\">Parameters</h6>\n\n<dl>\n <dt><code>aHdrToChange</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgDBHdr\" title=\"\">nsIMsgDBHdr</a></code> of the message that is changing.</dd>\n <dt><code>aPreChange</code></dt>\n <dd>True on first call before change, false on second call after change.</dd>\n <dt><code>aStatus</code></dt>\n <dd>The storage location provided by calling routine for status.</dd>\n <dt><code>aInstigator</code></dt>\n <dd>The caller who added the header. This can be used to filter out events that you yourself started. <code>aInstigator</code> may also be <code>null</code>.</dd>\n</dl>\n\n<h3 id=\"onEvent.28.29\" name=\"onEvent.28.29\">onEvent()</h3>\n\n<p>Generic notification for extensibility. Common events should be documented here so we have a hope of keeping the documentation up to date. Current events are:</p>\n\n<dl>\n <dt>DBOpened</dt>\n <dd>When a pending listener becomes real. This can happen when the existing db is force closed and a new one opened. Only registered pending listeners are notified.</dd>\n</dl>\n\n<p> </p>\n\n<pre class=\"eval\"> void onEvent(in nsIMsgDatabase aDB,\n              in string aEvent);\n</pre>\n\n<h6 id=\"Parameters_9\" name=\"Parameters_9\">Parameters</h6>\n\n<dl>\n <dt><code>aDB</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgDatabase\" title=\"\">nsIMsgDatabase</a></code> that is changing.</dd>\n <dt><code>aString</code></dt>\n <dd>The type of event.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/squib\">squib</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Wjjohnst\">Wjjohnst</a>",
    "title": "nsIDBChangeListener"
}