{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/js/jetpack/nsIJetpack.idl\" rel=\"custom\">js/jetpack/nsIJetpack.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface enables communication between the chrome process and a remote Jetpack process.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 11.428571428571429%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 11.428571428571429%; background: #00dd00; position: absolute; width: 88.57142857142857%;\" title=\"Introduced in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 11.428571428571429%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 11.428571428571429%;\">Gecko 2.0</div>\n\n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span></div>\n</div><p></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#sendMessage()\">sendMessage</a>(in AString aMessageName /* [optional] in jsval v1, [optional] in jsval v2, ... */);</code></td> </tr> <tr> <td><code>void <a href=\"#registerReceiver()\">registerReceiver</a>(in AString aMessageName, in jsval aReceiver);</code></td> </tr> <tr> <td><code>void <a href=\"#unregisterReceiver()\">unregisterReceiver</a>(in AString aMessageName, in jsval aReceiver);</code></td> </tr> <tr> <td><code>void <a href=\"#unregisterReceivers()\">unregisterReceivers</a>(in AString aMessageName);</code></td> </tr> <tr> <td><code>void <a href=\"#evalScript()\">evalScript</a>(in AString aScript);</code></td> </tr> <tr> <td><code>nsIVariant <a href=\"#createHandle()\">createHandle</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#destroy()\">destroy</a>();</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"sendMessage()\" name=\"sendMessage()\">sendMessage()</h3>\n<p>This method asynchronously sends a message to the Jetpack process.</p>\n<pre class=\"eval\">void sendMessage(\n  in AString aMessageName,\n  [optional] in jsval v1, <span class=\"inlineIndicator optional optionalInline\">Optional</span>\n  [optional] in jsval v2, <span class=\"inlineIndicator optional optionalInline\">Optional</span>\n  ...\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aMessageName</code></dt> <dd>The name of the message to send.</dd> <dt><code>v1, v2, ...</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt> <dd>JavaScript values to send with the message; they must be either JSON-serializable types or <a href=\"/en/Jetpack_Processes#Handles\" title=\"en/Jetpack_Processes#Handles\">handles</a>.</dd>\n</dl>\n<h3 id=\"registerReceiver()\" name=\"registerReceiver()\">registerReceiver()</h3>\n<p>This registers a callback to be triggered whenever the Jetpack process sends a particular message.</p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> Multiple callbacks may be registered for the same message; they will all be triggered.</div><p></p>\n<pre class=\"eval\">void registerReceiver(\n  in AString aMessageName,\n  in jsval aReceiver\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aMessageName</code></dt> <dd>The name of the message from the Jetpack process on which the callback is triggered.</dd> <dt><code>aReceiver</code></dt> <dd>A JavaScript function. The first argument passed to it is the name of the message, and all arguments following it are either JSON-serializable types or handles. If the message was sent synchronously from the Jetpack process via <code>callMessage()</code>, then the return value of this function is passed back to the Jetpack process.</dd>\n</dl>\n<h3 id=\"unregisterReceiver()\" name=\"unregisterReceiver()\">unregisterReceiver()</h3>\n<p>This unregisters a callback previously registered with <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIJetpack#registerReceiver()\">registerReceiver()</a></code></p>\n<pre class=\"eval\">void unregisterReceiver(\n  in AString aMessageName,\n  in jsval aReceiver\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aMessageName</code></dt> <dd>The name of the message on which the callback should no longer be triggered.</dd> <dt><code>aReceiver</code></dt> <dd>The JavaScript function that should no longer be triggered.</dd>\n</dl>\n<h3 id=\"unregisterReceivers()\" name=\"unregisterReceivers()\">unregisterReceivers()</h3>\n<p>This unregisters all callbacks previously registered with <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIJetpack#registerReceiver()\">registerReceiver()</a></code> for a particular message.</p>\n<pre class=\"eval\">void unregisterReceivers(\n  in AString aMessageName\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aMessageName</code></dt> <dd>The name of the message to unregister all callbacks from.</dd>\n</dl>\n<h3 id=\"evalScript()\" name=\"evalScript()\">evalScript()</h3>\n<p>This asynchronously sends code to the Jetpack process for evaluation. The code will be evaluated using at least JavaScript 1.8.1.</p>\n<p>When evaluated, the script's global scope will include all <a href=\"/en/Jetpack_Processes#Privileged_APIs\" title=\"en/Jetpack_Processes#Privileged_APIs\">privileged APIs</a>.</p>\n<p>Individual lines of the form <code>//@line 1 \"foo.js\"</code> can be used to specify filename and line number information for debugging purposes.</p>\n<pre class=\"eval\">void evalScript(\n  in AString aScript\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aScript</code></dt> <dd>The full contents of the script to evaluate in the Jetpack process.</dd>\n</dl>\n<h3 id=\"createHandle()\" name=\"createHandle()\">createHandle()</h3>\n<p>This creates an opaque handle that can transparently be exchanged between processes.</p>\n<pre class=\"eval\">nsIVariant createHandle();\n</pre>\n<h6 id=\"Return_value\" name=\"Return_value\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>The new <a href=\"/en/Jetpack_Processes#Handles\" title=\"en/Jetpack_Processes#Handles\">handle</a>.</p>\n<h3 id=\"destroy()\" name=\"destroy()\">destroy()</h3>\n<p>This terminates the Jetpack process.</p>\n<pre class=\"eval\">void destroy();\n</pre>\n<h6 id=\"Parameters_2\">Parameters</h6>\n<p>None.</p>\n<h2 id=\"Special_Messages\" name=\"Special_Messages\">Special Messages</h2>\n<p>If an exception goes uncaught in the Jetpack process, it will be reported to the chrome process via a message with the name <code>core:exception</code>. The message comes with one argument, which represents the exception object that was thrown.</p>\n<p>Warning: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=589308\" title=\"Jetpack child process doesn't report errors outside of registerReceiver() callbacks\">bug 589308</a> prevents this message from being sent in some situations.</p>\n<h2 id=\"History\" name=\"History\">History</h2>\n<p>See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=556846\" title=\"FIXED: Investigate multi-process Jetpack\">bug 556846</a> for details.</p>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul> <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIJetpackService\" title=\"\">nsIJetpackService</a></code></li> <li><a href=\"/en/Jetpack_Processes\" title=\"en/Jetpack_Processes\">Jetpack Processes</a></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Avarma\">Avarma</a>",
    "title": "nsIJetpack"
}