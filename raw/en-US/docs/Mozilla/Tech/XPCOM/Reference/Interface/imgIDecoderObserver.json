{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/image/public/imgIDecoderObserver.idl\" rel=\"custom\">image/public/imgIDecoderObserver.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface is used both for observing <a href=\"/en-US/docs/XPCOM_Interface_Reference/imgIDecoder\">imgIDecoder</a> objects and for observing <a href=\"/en-US/docs/XPCOM_Interface_Reference/imgIRequest\">imgIRequest</a> objects. It lets you monitor the progress of loading an image.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 22.857142857142858%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 22.857142857142858%; background: #00dd00; position: absolute; width: 77.14285714285714%;\" title=\"Introduced in Gecko 12.0 (Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 22.857142857142858%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 22.857142857142858%;\">Gecko 12.0</div>\n\n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIContainerObserver\" title=\"\">imgIContainerObserver</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n<p>We make the distinction here between \"load\" and \"decode\" notifications. Load notifications are fired as the image is loaded from the network or filesystem. Decode notifications are fired as the image is decoded. If an image is decoded on load and not visibly discarded, decode notifications are nested logically inside load notifications as one might expect. However, with decode-on-draw, the set of decode notifications can come completely <strong>after</strong> the load notifications, and can come multiple times if the image is discardable. Moreover, they can be interleaved in various ways. In general, any presumed ordering between load and decode notifications should not be relied upon.</p>\n<p>Decode notifications may or may not be synchronous, depending on the situation. If <code>imgIDecoder::FLAG_SYNC_DECODE</code> is passed to a function that triggers a decode, all notifications that can be generated from the currently loaded data fire before the call returns. If <code>FLAG_SYNC_DECODE</code> is not passed, all, some, or none of the notifications may fire before the call returns.</p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#onDataAvailable()\">onDataAvailable</a>(in imgIRequest aRequest, in boolean aCurrentFrame, [const] in nsIntRect aRect);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onDiscard()\">onDiscard</a>(in imgIRequest aRequest);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onImageIsAnimated()\">onImageIsAnimated</a>(in imgIRequest aRequest);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStartContainer()\">onStartContainer</a>(in imgIRequest aRequest, in imgIContainer aContainer);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStartDecode()\">onStartDecode</a>(in imgIRequest aRequest);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStartFrame()\">onStartFrame</a>(in imgIRequest aRequest, in unsigned long aFrame);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStartRequest()\">onStartRequest</a>(in imgIRequest aRequest);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStopContainer()\">onStopContainer</a>(in imgIRequest aRequest, in imgIContainer aContainer);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStopDecode()\">onStopDecode</a>(in imgIRequest aRequest, in nsresult status, in wstring statusArg);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStopFrame()\">onStopFrame</a>(in imgIRequest aRequest, in unsigned long aFrame);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStopRequest()\">onStopRequest</a>(in imgIRequest aRequest, in boolean aIsLastPart);</code> </td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"onDataAvailable\">onDataAvailable</h3></div><p></p>\n<p>Decode notification. Called when there is more to paint.</p>\n<pre class=\"eval\">void onDataAvailable(\n  in imgIRequest aRequest,\n  in boolean aCurrentFrame,\n  [const] in nsIntRect aRect\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n <dt>\n  <code>aCurrentFrame</code></dt>\n <dd>\n  Missing Description</dd>\n <dt>\n  <code>aRect</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<p></p><h3 id=\"onDiscard()\">onDiscard()</h3><p></p>\n<p>Called when the decoded image data is discarded. This means that the frames no longer exist in decoded form, and any attempt to access or draw the image will initiate a new series of progressive decode notifications.</p>\n<pre class=\"eval\">void onDiscard(\n  in imgIRequest aRequest\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n</dl>\n<p></p><h3 id=\"onImageIsAnimated()\">onImageIsAnimated()</h3><p></p>\n<p>Notification for when an image is known to be animated. This should be fired at the earliest possible time.</p>\n<pre class=\"eval\">void onImageIsAnimated(\n  in imgIRequest aRequest\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n</dl>\n<h3 id=\"onStartContainer()\" name=\"onStartContainer()\">onStartContainer()</h3>\n<p>This load notification is called once enough data has been loaded from the network that we were able to parse the width and height from the image. By the time this callback is been called, the size has been set on the container and <code>STATUS_SIZE_AVAILABLE</code> has been set on the associated <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgRequest\" title=\"\">imgRequest</a></code>.</p>\n<pre class=\"eval\">void onStartContainer(\n  in imgIRequest aRequest,\n  in imgIContainer aContainer\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n <dt>\n  <code>aContainer</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h3 id=\"onStartDecode()\" name=\"onStartDecode()\">onStartDecode()</h3>\n<p>This decode notification is called as soon as the image begins getting decoded. This does not include \"header-only\" decodes used by decode-on-draw to parse the width/height out of the image. Thus, it is a decode notification only.</p>\n<pre class=\"eval\">void onStartDecode(\n  in imgIRequest aRequest\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n</dl>\n<h3 id=\"onStartFrame()\" name=\"onStartFrame()\">onStartFrame()</h3>\n<p>This is a decode notification which is called when each frame is created.</p>\n<pre class=\"eval\">void onStartFrame(\n  in imgIRequest aRequest,\n  in unsigned long aFrame\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n <dt>\n  <code>aFrame</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<p></p><h3 id=\"onStartRequest()\">onStartRequest()</h3><p></p>\n<p>A load notification which is called at the same time that <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIRequestObserver#onStartRequest()\">nsIRequestObserver.onStartRequest()</a></code> would be (used only for observers of <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIRequest\" title=\"\">imgIRequest</a></code> objects, which are <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIRequests\" title=\"\">nsIRequests</a></code>, not <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> objects).</p>\n<pre class=\"eval\">void onStartRequest(\n  in imgIRequest aRequest\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n</dl>\n<h3 id=\"onStopContainer()\" name=\"onStopContainer()\">onStopContainer()</h3>\n<div class=\"warning\">\n <strong>Warning:</strong> Do not implement this. It is useless and going away.</div>\n<pre class=\"eval\">void onStopContainer(\n  in imgIRequest aRequest,\n  in imgIContainer aContainer\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n <dt>\n  <code>aContainer</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h3 id=\"onStopDecode()\" name=\"onStopDecode()\">onStopDecode()</h3>\n<p>In theory a decode notification, but currently a load notification.</p>\n<p>Ideally this would be called when the decode is complete. Unfortunately, this is currently the only way to signal decoding errors to consumers, and the only decoding errors that consumers care about (indeed, the only ones that they're prepared to hear about) are failures to instantiate the decoder (<span class=\"nowiki\"><code>&lt;img src=\"foo.html\"&gt;</code></span> for example). Thus, currently this is just a companion to <code>onStopRequest</code> to signal success or failure. You probably want <code>onStopContainer</code> instead. This will be revisited in <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=505385\" title=\"FIXED: Refactor Imagelib notifications\">bug 505385</a>. If you're thinking of doing something new with this, please talk to bholley first.</p>\n<pre class=\"eval\">void onStopDecode(\n  in imgIRequest aRequest,\n  in nsresult status,\n  in wstring statusArg\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n <dt>\n  <code>status</code></dt>\n <dd>\n  Missing Description</dd>\n <dt>\n  <code>statusArg</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h3 id=\"onStopFrame()\" name=\"onStopFrame()\">onStopFrame()</h3>\n<p>A decode notification that is called when a frame is finished decoding.</p>\n<pre class=\"eval\">void onStopFrame(\n  in imgIRequest aRequest,\n  in unsigned long aFrame\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n <dt>\n  <code>aFrame</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<p></p><h3 id=\"onStopRequest()\">onStopRequest()</h3><p></p>\n<p>A load notification that is called at the same time that <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIRequestObserver#onStopRequest()\">nsIRequestObserver.onStopRequest()</a></code> would be (used only for observers of <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIRequest\" title=\"\">imgIRequest</a></code> objects, which are <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIRequests\" title=\"\">nsIRequests</a></code>, not <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> objects).</p>\n<pre class=\"eval\">void onStopRequest(\n  in imgIRequest aRequest,\n  in boolean aIsLastPart\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aRequest</code></dt>\n <dd>\n  The request on which data is available, or <code>null</code> if being called for an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code> object.</dd>\n <dt>\n  <code>aIsLastPart</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIRequest\" title=\"\">imgIRequest</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIDecoder\" title=\"\">imgIDecoder</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIContainer\" title=\"\">imgIContainer</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/bholley\">bholley</a>",
    "title": "imgIDecoderObserver"
}