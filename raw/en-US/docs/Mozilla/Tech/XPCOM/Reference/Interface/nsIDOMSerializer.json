{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/content/base/public/nsIDOMSerializer.idl\" rel=\"custom\">content/base/public/nsIDOMSerializer.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface is really a placeholder till the W3C DOM Working Group defines a mechanism for serializing DOM nodes. An instance of this interface can be used to serialize a DOM document or any DOM subtree.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n<p>Implemented by: <code>@mozilla.org/xmlextras/xmlserializer;1</code>. To create an instance, use:</p>\n<pre class=\"eval\">var domSerializer = Components.classes[\"@mozilla.org/xmlextras/xmlserializer;1\"]\n                    .createInstance(Components.interfaces.nsIDOMSerializer);\n</pre>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#serializeToStream()\">serializeToStream</a>(in nsIDOMNode root, in nsIOutputStream stream, in AUTF8String charset);</code></td> </tr> <tr> <td><code>AString <a href=\"#serializeToString()\">serializeToString</a>(in nsIDOMNode root);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"serializeToStream()\" name=\"serializeToStream()\">serializeToStream()</h3>\n<p>The subtree rooted by the specified element is serialized to a byte stream using the character set specified.</p>\n<pre class=\"eval\">void serializeToStream(\n  in nsIDOMNode root,\n  in nsIOutputStream stream,\n  in AUTF8String charset\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>root</code></dt> <dd>The root of the subtree to be serialized. This could be any node, including a Document.</dd> <dt><code>stream</code></dt> <dd>The byte stream to which the subtree is serialized.</dd> <dt><code>charset</code></dt> <dd>The name of the character set to use for the encoding to a byte stream. If this string is empty and root is a document, the document's character set will be used.</dd>\n</dl>\n<h3 id=\"serializeToString()\" name=\"serializeToString()\">serializeToString()</h3>\n<p>The subtree rooted by the specified element is serialized to a string.</p>\n<pre class=\"eval\">AString serializeToString(\n  in nsIDOMNode root\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>root</code></dt> <dd>The root of the subtree to be serialized. This could be any node, including a Document.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>The serialized subtree in the form of a Unicode string.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "nsIDOMSerializer"
}