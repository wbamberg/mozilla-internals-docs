{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/toolkit/components/places/public/nsINavHistoryService.idl\" rel=\"custom\">toolkit/components/places/public/nsINavHistoryService.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nEncapsulates all the query parameters you're likely to need when building up history UI. All parameters are ANDed together.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 8.571428571428571%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 8.571428571428571%; background: #00dd00; position: absolute; width: 91.42857142857143%;\" title=\"Introduced in Gecko 1.9 (Firefox 3)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 8.571428571428571%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 8.571428571428571%;\">Gecko 1.9</div>\n\n    <div style=\"height: 8px; top: 16px; left: 10.928571428571429%; background: #eeee00; position: absolute; width: 1%; border-radius: 4px; -webkit-border-radius: 4px;\" title=\"Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\"></div>\n    \n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span></div>\n</div><p></p>\n<p>The <code>nsINavHistoryQuery</code> is not intended to be a super-general query mechanism. This was designed so that most queries can be done in only one SQL query. This is important because, if the user has their profile on a networked drive, query latency can be non-negligible</p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>nsINavHistoryQuery <a href=\"#clone.28.29\">clone</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#getFolders.28.29\">getFolders</a>([optional </code><code>]out unsigned long count, [retval,array,size_is(count)] out long long folders); <br> </code></td> </tr> <tr> <td><code>void <a href=\"#getTransitions()\">getTransitions</a>([optional] out unsigned long count, [retval,array,size_is(count)] out unsigned long transitions);</code> </td> </tr> <tr> <td><code>void <a href=\"#setFolders.28.29\">setFolders</a>([const,array, size_is(folderCount)] in long long folders, in unsigned long folderCount);</code></td> </tr> <tr> <td><code>void <a href=\"#setTransitions()\">setTransitions</a>([const,array, size_is(count)] in unsigned long transitions, in unsigned long count);</code> </td> </tr> </tbody>\n</table><h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Attribute</td> <td class=\"header\">Type</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>absoluteBeginTime</code></td> <td><code>PRTime</code></td> <td><strong>Read only:</strong> Retrieves the begin time value that the currently loaded reference points + offset resolve to.</td> </tr> <tr> <td><code>absoluteEndTime</code></td> <td><code>PRTime</code></td> <td><strong>Read only: </strong>Retrieves the end time value that the currently loaded reference points + offset resolve to.</td> </tr> <tr> <td><code>annotation</code></td> <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td> <td>The annotation name.</td> </tr> <tr> <td><code>annotationIsNot</code></td> <td><code>boolean</code></td> <td>Test for existance or non-existance of a given annotation. We don't currently support &gt;1 annotation name per query. If <code>annotationIsNot</code> is <code>true</code>, we test for the non-existance of the specified annotation. Testing for not annotation will do the same thing as a normal query and remove everything that doesn't have that annotation. Asking for things that DO have a given annotation is a little different. It also includes things that have never been visited. This allows place queries to be returned (which might include bookmark folders -- use the bookmark service's <code>GetFolderURI</code>) as well as anything else that may have been tagged with an annotation. This will only work for <code>RESULTS_AS_URI</code> since there will be no visits for these items.</td> </tr> <tr> <td><code>beginTime</code></td> <td><code>PRTime</code></td> <td>Begin time range for results (INCLUSIVE).</td> </tr> <tr> <td><code>beginTimeReference</code></td> <td><code>long</code></td> <td>One of the constants <code>TIME_RELATIVE_*</code> which indicates how to interpret the corresponding begin time value.</td> </tr> <tr> <td><code>domain</code></td> <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td> <td>This is the host or domain name (controlled by <code>domainIsHost</code>). When <code>domainIsHost</code>, domain only does exact matching on host names. Otherwise, it will return anything whose host name ends in <code>domain</code>. <p>This one is a little different than most. Setting it to an empty string is a real query and will match any URI that has no host name (local files and such). Set this to <code>NULL</code> (in C++ use <code>SetIsVoid</code>) if you don't want domain matching.</p> </td> </tr> <tr> <td><code>domainIsHost</code></td> <td><code>boolean</code></td> <td>This controls the meaning of <code>domain</code>, and whether it is an exact match <code>domainIsHost</code> = <code>true</code>, or hierarchical (<code>= false</code>).</td> </tr> <tr> <td><code>endTime</code></td> <td><code>PRTime</code></td> <td>End time range for results (INCLUSIVE).</td> </tr> <tr> <td><code>endTimeReference</code></td> <td><code>long</code></td> <td>One of the constants <code>TIME_RELATIVE_*</code> which indicates how to interpret the corresponding end time value.</td> </tr> <tr> <td><code>folderCount</code></td> <td><code>long</code></td> <td><strong>Read only: </strong>Count of folders.</td> </tr> <tr> <td><code>hasAnnotation</code></td> <td><code>boolean</code></td> <td><strong>Read only: </strong>Whether or not, <code>annotation</code> exists.</td> </tr> <tr> <td><code>hasBeginTime</code></td> <td><code>boolean</code></td> <td><strong>Read only: </strong>Whether or not, the corresponding begin time is considered.</td> </tr> <tr> <td><code>hasDomain</code></td> <td><code>boolean</code></td> <td><strong>Read only: </strong>Whether or not, <code>domain</code> exists.</td> </tr> <tr> <td><code>hasEndTime</code></td> <td><code>boolean</code></td> <td><strong>Read only: </strong>Whether or not, the corresponding end time is considered.</td> </tr> <tr> <td><code>hasSearchTerms</code></td> <td><code>boolean</code></td> <td><strong>Read only: </strong>Whether or not, text search terms exists.</td> </tr> <tr> <td><code>hasUri</code></td> <td><code>boolean</code></td> <td><strong>Read only: </strong>Whether or not, <code>uri</code> exists.</td> </tr> <tr> <td> <p><code>maxVisits</code> </p> </td> <td><code>long</code></td> <td>Set upper limits for how many times an item has been visited. The default value is <code>\"-1\"</code>, and in that case all items are matched regardless of their visit count.</td> </tr> <tr> <td> <p><code>minVisits</code> </p> </td> <td><code>long</code></td> <td>Set lower limits for how many times an item has been visited. The default value is <code>\"-1\"</code>, and in that case all items are matched regardless of their visit count.</td> </tr> <tr> <td><code>onlyBookmarked</code></td> <td><code>boolean</code></td> <td>When set, returns only bookmarked items, when unset, returns anything. Setting this is equivalent to listing all bookmark folders in the <code>folders</code> parameter.</td> </tr> <tr> <td><code>searchTerms</code></td> <td><code>AString</code></td> <td>Text search terms.</td> </tr> <tr> <td><code>tags</code> </td> <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIVariant\" title=\"\">nsIVariant</a></code></td> <td> <p>A list of tags to use for filtering query results. This attribute must be an array of strings. Duplicate tags may be specified, but when reading the list, only unique tags are returned.</p> <p>When called as a getter, this returns an array of strings sorted in ascending lexicographical (alphabetical) order.</p> <p>This array may be empty, in which case no filtering by tags is performed.</p> <p>To search for items that are tagged with any given tags instead of all, multiple queries may be passed to the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINavHistoryService\" title=\"\">nsINavHistoryService</a></code> method <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsINavHistoryService#executeQueries()\">nsINavHistoryService.executeQueries()</a></code>.</p> </td> </tr> <tr> <td><code>tagsAreNot</code> </td> <td><code>boolean</code></td> <td>If <code>true</code>, the results include only items that are not tagged with the specified <code>tags</code>. If <code>false</code>, only tags in the <code>tags</code> list are included in the results.</td> </tr> <tr> <td><code>uri</code></td> <td><code><a href=\"/en/XPCOM_Interface_Reference/nsIURI\" title=\"en/XPCOM_Interface_Reference/nsIURI\">nsIURI</a></code></td> <td>This is a URI to match, to, for example, find out every time you visited a given URI. Use <code>uriIsPrefix</code> to control whether this is an exact match.</td> </tr> <tr> <td><code>uriIsPrefix</code></td> <td><code>boolean</code></td> <td>Controls the interpretation of <code>uri</code>. When unset (default), the URI will request an exact match of the specified URI. When set, any history entry beginning in <code>uri</code> will match. For example <code><a class=\" external\" href=\"http://bar.com/foo\" rel=\"freelink\">http://bar.com/foo</a></code> will match <code><a class=\" external\" href=\"http://bar.com/foo\" rel=\"freelink\">http://bar.com/foo</a></code> as well as <code><a class=\" external\" href=\"http://bar.com/foo/baz.gif\" rel=\"freelink\">http://bar.com/foo/baz.gif</a></code>.</td> </tr> </tbody>\n</table>\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Constant</td> <td class=\"header\">Value</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>TIME_RELATIVE_EPOCH</code></td> <td>0</td> <td>Default value. The time is relative to Jan 1 1970 GMT, (this is a normal PRTime). As a special case, a 0 time relative to <code>TIME_RELATIVE_EPOCH</code> indicates that the time is not part of the query. This is the default, so an empty query will match any time.</td> </tr> <tr> <td><code>TIME_RELATIVE_TODAY</code></td> <td>1</td> <td>The time is relative to this morning at midnight. Normally used for queries relative to today. For example, a \"past week\" query would be (today-6 days -&gt; today+1 day).</td> </tr> <tr> <td><code>TIME_RELATIVE_NOW</code></td> <td>2</td> <td>The time is relative to right now.</td> </tr> </tbody>\n</table>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> <code>PRTime</code> is in MICROseconds since 1 Jan 1970. JavaScript date objects are expressed in MILLIseconds since 1 Jan 1970.</div><p></p>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"getFolders.28.29\" name=\"getFolders.28.29\">getFolders()</h3>\n<p>This method retrieves all the folders with the folder count.</p>\n<pre class=\"eval\"> void getFolders(\n   [optional] out unsigned long count,\n   [retval,array,size_is(count)] out long long folders\n );\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>count</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt> <dd>The count of the folders. This optional parameter was required prior to Gecko 2.0.</dd> <dt><code>folders</code></dt> <dd>The retrieved folders.</dd>\n</dl>\n<h3 id=\"setFolders.28.29\" name=\"setFolders.28.29\">setFolders()</h3>\n<p>This method sets the folders with the given folder count.</p>\n<pre class=\"eval\"> void setFolders(\n   [const,array, size_is(folderCount)] in long long folders,\n   in unsigned long folderCount\n );\n</pre>\n<h6 id=\"Parameters_2\" name=\"Parameters_2\">Parameters</h6>\n<dl> <dt><code>count</code></dt> <dd>The count of the folders.</dd> <dt><code>folders</code></dt> <dd>The folders to be set.</dd>\n</dl>\n<h3 id=\"clone.28.29\" name=\"clone.28.29\">clone()</h3>\n<p>This method creates a new query item with the same parameters of this one.</p>\n<pre class=\"eval\"> nsINavHistoryQuery clone();\n</pre>\n<h6 id=\"Parameters_3\" name=\"Parameters_3\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>Returns the newly created cloned query.</p>\n<p></p><h3 id=\"getTransitions()\">getTransitions()</h3><p></p>\n<p>Get the transitions set for this query.</p>\n<pre class=\"eval\">void getTransitions(\n  out unsigned long count, <span class=\"inlineIndicator optional optionalInline\">Optional</span>\n  [retval,array,size_is(count)] out unsigned long transitions\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>count</code> <span class=\"inlineIndicator optional optionalInline\">Optional</span></dt> <dd>The number of transitions</dd> <dt><code>transitions</code></dt> <dd>Missing Description</dd>\n</dl>\n<p></p><h3 id=\"setTransitions()\">setTransitions()</h3><p></p>\n<p>When the set of transitions is nonempty, results are limited to pages which have at least one visit for each of the transition types.</p>\n<p>Limit results to the specified list of transition types.</p>\n<pre class=\"eval\">void setTransitions(\n  [const,array, size_is(count)] in unsigned long transitions,\n  in unsigned long count\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>transitions</code></dt> <dd>Missing Description.</dd> <dt><code>count</code></dt> <dd>The number of transitions.</dd>\n</dl>\n<h3 id=\"See_also\" name=\"See_also\">See also</h3>\n<ul> <li><a href=\"/en/Places\" title=\"en/Places\">Places</a></li> <li><a href=\"/en/Using_the_Places_history_service\" title=\"en/Using_the_Places_history_service\">Using the Places history service</a></li> <li><a href=\"/en/Querying_Places\" title=\"en/Querying_Places\">Querying Places</a></li> <li><a href=\"/en/XPCOM_Interface_Reference/nsINavHistoryService\" title=\"en/nsINavHistoryService\">nsINavHistoryService</a></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/One\">One</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Arehman4\">Arehman4</a>",
    "title": "nsINavHistoryQuery"
}