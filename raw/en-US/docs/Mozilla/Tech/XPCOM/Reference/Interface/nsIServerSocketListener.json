{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/base/public/nsIServerSocket.idl\" rel=\"custom\">netwerk/base/public/nsIServerSocket.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface is notified whenever a server socket accepts a new connection. The transport is in the connected state, and read/write streams can be opened using the normal <a href=\"/en-US/docs/XPCOM_Interface_Reference/nsITransport\">nsITransport</a> API. The address of the client can be found by calling the <code><a href=\"/en-US/docs/XPCOM_Interface_Reference/nsISocketTransport\">nsISocketTransport.GetAddress()</a></code> method or by inspecting <a href=\"/en-US/docs/XPCOM_Interface_Reference/nsISocketTransport\"><code>nsISocketTransport.GetHost()</code></a>, which returns a string representation of the client's IP address, which may be either an IPv4 or an IPv6 address.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#onSocketAccepted()\">onSocketAccepted</a>(in nsIServerSocket aServ, in nsISocketTransport aTransport);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onStopListening()\">onStopListening</a>(in nsIServerSocket aServ, in nsresult aStatus);</code></td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"onSocketAccepted()\" name=\"onSocketAccepted()\">onSocketAccepted()</h3>\n<p>This method is called when a client connection is accepted.</p>\n<pre class=\"eval\">void onSocketAccepted(\n  in nsIServerSocket aServ,\n  in nsISocketTransport aTransport\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aServ</code></dt>\n <dd>\n  The server socket.</dd>\n <dt>\n  <code>aTransport</code></dt>\n <dd>\n  The connected socket transport.</dd>\n</dl>\n<h3 id=\"onStopListening()\" name=\"onStopListening()\">onStopListening()</h3>\n<p>This method is called when the listening socket stops for some reason. The server socket is effectively dead after this notification.</p>\n<pre class=\"eval\">void onStopListening(\n  in nsIServerSocket aServ,\n  in nsresult aStatus\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aServ</code></dt>\n <dd>\n  The server socket.</dd>\n <dt>\n  <code>aStatus</code></dt>\n <dd>\n  The reason why the server socket stopped listening. If the server socket was manually closed, then this value will be <code>NS_BINDING_ABORTED</code>.</dd>\n</dl>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIServerSocket\" title=\"\">nsIServerSocket</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISocketTransport\" title=\"\">nsISocketTransport</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Hashem\">Hashem</a>",
    "title": "nsIServerSocketListener"
}