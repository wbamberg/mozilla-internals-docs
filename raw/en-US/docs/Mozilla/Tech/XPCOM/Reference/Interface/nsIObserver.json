{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/ds/nsIObserver.idl\" rel=\"custom\">xpcom/ds/nsIObserver.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface is implemented by an object that wishes to observe notifications. These notifications are often, though not always, broadcast via the nsIObserverService.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 0.9.6 </span></div>\n</div><p></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#observe()\">observe</a>(in nsISupports aSubject, in string aTopic, in wstring aData);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"observe()\" name=\"observe()\">observe()</h3>\n\n<p>This method will be called when there is a notification for the topic that the observer has been registered for.</p>\n\n<p>If you expect multiple topics/subjects, the implementor is responsible for filtering.</p>\n\n<p>You should not modify, add, remove, or enumerate notifications in the implementation of this method.</p>\n\n<pre class=\"eval\">void observe(\n  in nsISupports aSubject,\n  in string aTopic,\n  in wstring aData \n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aSubject</code></dt>\n <dd>In general reflects the object whose change or action is being observed.</dd>\n <dt><code>aTopic</code></dt>\n <dd>Indicates the specific change or action.</dd>\n <dt><code>aData</code></dt>\n <dd>An optional parameter or other auxiliary data further describing the change or action.</dd>\n</dl>\n\n<h2 id=\"Remarks\" name=\"Remarks\">Remarks</h2>\n\n<p>The specific values and meanings of the parameters provided varies widely, though, according to where the observer was registered, and what topic is being observed.</p>\n\n<p>A single <code>nsIObserver</code> implementation can observe multiple types of notification, and is responsible for dispatching its own behavior on the basis of the parameters for a given callback. In general, <code>aTopic</code> is the primary criterion for such dispatch; <code>nsIObserver</code> implementations should take care that they can handle being called with unknown values for <code>aTopic</code>.</p>\n\n<p>The most common implementation of <code>nsIObserverService</code> is the XPCOM observer service. With this implementation, it's safe (and common practice) for an implementation of <code>nsIObserver</code> to remove itself as an observer during the <code>Observe</code> callback, or to add or remove other observers. Be careful, though, because other uses of <code>nsIObserver</code> may not support these operations correctly within <code>Observe</code>.</p>\n\n<h2 id=\"Example\" name=\"Example\">Example</h2>\n\n<p>The following code is an implementation of <code>nsIObserver</code> that is registered to receive notifications for the \"myTopicID\" topic. See <a class=\"internal\" href=\"/en/Observer_Notifications\" title=\"en/Observer Notifications\">Observer Notifications</a> for a list of built-in topics possible.</p>\n\n<p>Observing preferences works slightly differently. See <a href=\"/en/Code_snippets/Preferences#Using_preference_observers\" title=\"en/Code_snippets/Preferences#Using_preference_observers\"> Code snippets:Preferences - Using preference observers</a> for an example.</p>\n\n<pre class=\"brush: js\">function myObserver()\n{\n  this.register();\n}\nmyObserver.prototype = {\n  observe: function(subject, topic, data) {\n     // Do your stuff here.\n  },\n  register: function() {\n    var observerService = Components.classes[\"@mozilla.org/observer-service;1\"]\n                          .getService(Components.interfaces.nsIObserverService);\n    observerService.addObserver(this, \"myTopicID\", false);\n  },\n  unregister: function() {\n    var observerService = Components.classes[\"@mozilla.org/observer-service;1\"]\n                            .getService(Components.interfaces.nsIObserverService);\n    observerService.removeObserver(this, \"myTopicID\");\n  }\n}\n</pre>\n\n<p>Instantiation - this should be fired once you're ready to start observing (for example a window's load event).</p>\n\n<pre class=\"brush: js\">observer = new myObserver();\n</pre>\n\n<p>Destruction - this should be fired once you're done observing (for example a window's unload event). Failure to do so may result in memory leaks.</p>\n\n<pre class=\"brush: js\">observer.unregister();\n</pre>\n\n<p>\"Get Everything\" - note that \"*\" is an acceptable value (be careful with this, because it observes many events, and can degrade performance).Â </p>\n\n<pre class=\"eval deki-transform\">observer.register(\"*\");\n</pre>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIObserverService\" title=\"\">nsIObserverService</a></code></li>\n <li><a href=\"/en/Observer_Notifications\" title=\"Observer Notifications\">Observer_Notifications</a></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SphinxKnight\">SphinxKnight</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/seth\">seth</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/gregg.lind\">gregg.lind</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Oeekker\">Oeekker</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Bedi\">Bedi</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Np\">Np</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/LouCypher\">LouCypher</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Spanglerco\">Spanglerco</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/cbiesinger\">cbiesinger</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Callek\">Callek</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dria\">Dria</a>",
    "title": "nsIObserver"
}