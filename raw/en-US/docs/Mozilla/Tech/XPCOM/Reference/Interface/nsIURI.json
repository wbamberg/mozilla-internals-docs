{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/base/public/nsIURI.idl\" rel=\"custom\">netwerk/base/public/nsIURI.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis is an interface for an uniform resource identifier with internationalization support, offering attributes that allow setting and querying the basic components of a URI, and methods for performing basic operations on URIs.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 6.0 (Firefox 6.0 / Thunderbird 6.0 / SeaMonkey 2.3)</span></div>\n</div><p></p>\n\n<p>See the following RFCs for details:</p>\n\n<ul>\n <li><a class=\"external\" href=\"http://www.ietf.org/rfc/rfc3490.txt\" title=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC3490</a>: Internationalizing Domain Names in Applications (IDNA)</li>\n <li><a class=\"external\" href=\"http://tools.ietf.org/rfc/rfc3986.txt\" title=\"http://tools.ietf.org/rfc/rfc3986.txt\">RFC3986</a>: Uniform Resource Identifier (URI): Generic Syntax</li>\n <li><a class=\"external\" href=\"http://tools.ietf.org/rfc/rfc3987.txt\" title=\"http://tools.ietf.org/rfc/rfc3987.txt\">RFC3987</a>: Internationalized Resource Identifiers</li>\n</ul>\n\n<p>Subclasses of <code>nsIURI</code>, such as <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURL\" title=\"\">nsIURL</a></code>, impose further structure on the URI.</p>\n\n<p>To create an <code>nsIURI</code> object, you should use <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIIOService#newURI()\">nsIIOService.newURI()</a></code>, like this:</p>\n\n<pre class=\"brush: js\">function makeURI(aURL, aOriginCharset, aBaseURI) {\n  var ioService = Components.classes[\"@mozilla.org/network/io-service;1\"]\n                  .getService(Components.interfaces.nsIIOService);\n  return ioService.newURI(aURL, aOriginCharset, aBaseURI);\n}\n</pre>\n\n<h2 id=\"Components_of_a_URI\" name=\"Components_of_a_URI\">Components of a URI</h2>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th colspan=\"7\" scope=\"col\" style=\"text-align: center;\">prePath</th>\n   <th colspan=\"2\" scope=\"col\" style=\"text-align: center;\">path</th>\n  </tr>\n  <tr>\n   <th scope=\"col\" style=\"text-align: center;\">scheme</th>\n   <th scope=\"col\" style=\"text-align: center;\"> </th>\n   <th scope=\"col\" style=\"text-align: center;\">userPass</th>\n   <th scope=\"col\" style=\"text-align: center;\"> </th>\n   <th scope=\"col\" style=\"text-align: center;\">host</th>\n   <th scope=\"col\" style=\"text-align: center;\"> </th>\n   <th scope=\"col\" style=\"text-align: center;\">port</th>\n   <th scope=\"col\" style=\"text-align: center;\"> </th>\n   <th scope=\"col\" style=\"text-align: center;\">ref</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td style=\"text-align: right;\">ftp</td>\n   <td>://</td>\n   <td>username@password</td>\n   <td>@</td>\n   <td>hostname</td>\n   <td>:</td>\n   <td>portnumber</td>\n   <td>/pathname?query=value</td>\n   <td>#ref</td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>nsIURI <a href=\"#clone()\">clone</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>nsIURI <a href=\"#cloneIgnoringRef()\">cloneIgnoringRef</a>();</code> </td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#equals()\">equals</a>(in nsIURI other);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#equalsExceptRef()\">equalsExceptRef</a>(in nsIURI other);</code> </td>\n  </tr>\n  <tr>\n   <td><code>AUTF8String <a href=\"#resolve()\">resolve</a>(in AUTF8String relativePath);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#schemeIs()\">schemeIs</a>(in string scheme);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>asciiHost</code></td>\n   <td><code><a href=\"/en/ACString\" title=\"en/ACString\">ACString</a></code></td>\n   <td>\n    <p>The URI <code>host</code> with an ASCII compatible encoding. Follows the IDNA draft specification for converting internationalized domain names (UTF-8) to ASCII for compatibility with existing Internet infrastructure. <strong>Read only.</strong></p>\n\n    <div class=\"note\">\n    <p><strong>Note:</strong> IPv6 addresses are not enclosed in square brackets.</p>\n    </div>\n   </td>\n  </tr>\n  <tr>\n   <td><code>asciiSpec</code></td>\n   <td><code><a href=\"/en/ACString\" title=\"en/ACString\">ACString</a> (US-ASCII)</code></td>\n   <td>The URI spec with an ASCII compatible encoding. The host portion follows the IDNA draft spec. Other parts are URL-escaped per the rules of <a class=\"external\" href=\"http://tools.ietf.org/rfc/rfc3986.txt\" title=\"http://tools.ietf.org/rfc/rfc3986.txt\">RFC3986</a>. The result is strictly ASCII. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>hasRef</code></td>\n   <td><code>boolean</code></td>\n   <td>Returns if there is a reference portion (the part after the \"#\") of the URI.<br>\n    <br>\n    </td>\n  </tr>\n  <tr>\n   <td><code>host</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The host is the Internet domain name to which this URI refers. It could be an IPv4 (or IPv6) address literal. If supported, it could be a non-ASCII internationalized domain name.</p>\n\n    <h6 id=\"Exceptions_thrown\">Exceptions thrown</h6>\n\n    <dl>\n     <dt><code>NS_ERROR_FAILURE</code></dt>\n     <dd>If host is not applicable to the URI scheme (e.g. about:blank)</dd>\n    </dl>\n\n    <div class=\"note\"><strong>Note:</strong> Characters are <strong>not</strong> escaped. IPv6 addresses are not enclosed in square brackets.</div>\n   </td>\n  </tr>\n  <tr>\n   <td><code>hostPort</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The \"host:port\" part of the URI (or simply the host, if port is -1).</p>\n\n    <h6 id=\"Exceptions_thrown_2\">Exceptions thrown</h6>\n\n    <dl>\n     <dt><code>NS_ERROR_FAILURE</code></dt>\n     <dd>If hostPort is not applicable to the URI scheme (e.g. about:blank)</dd>\n    </dl>\n\n    <div class=\"note\"><strong>Note:</strong> Characters are <strong>not</strong> escaped.</div>\n   </td>\n  </tr>\n  <tr>\n   <td><code>originCharset</code></td>\n   <td><code><a href=\"/en/ACString\" title=\"en/ACString\">ACString</a></code></td>\n   <td>\n    <p>The charset of the document from which this URI originated. An empty value implies UTF-8.</p>\n    If this value is something other than UTF-8 then the URI components (for example <code>spec</code>, <code>prePath</code>, <code>username</code>, and so on) are all fully URL-escaped. Otherwise, the URI components may contain unescaped multibyte UTF-8 characters. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>password</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The optional password, assuming the <code>preHost</code> consists of \"username:password\".</p>\n\n    <h6 id=\"Exceptions_thrown_3\">Exceptions thrown</h6>\n\n    <dl>\n     <dt><code>NS_ERROR_FAILURE</code></dt>\n     <dd>If password is not applicable to the URI scheme (e.g. about:blank)</dd>\n    </dl>\n\n    <p></p><div class=\"blockIndicator note\"><strong>Note:</strong> Some characters may be escaped.</div><p></p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>path</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The path, typically including at least a leading '/' (but may also be empty, depending on the protocol).</p>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> Some characters may be escaped.</div></td>\n  </tr>\n  <tr>\n   <td><code>port</code></td>\n   <td><code><a href=\"/en/long\" title=\"en/long\">long</a></code></td>\n   <td>\n    <p>The URI's port. A port value of -1 corresponds to the protocol's default port (for example -1 implies port 80 for HTTP URIs).</p>\n\n    <h6 id=\"Exceptions_thrown_4\">Exceptions thrown</h6>\n\n    <dl>\n     <dt><code>NS_ERROR_FAILURE</code></dt>\n     <dd>If port is not applicable to the URI scheme (e.g. about:blank)</dd>\n    </dl>\n   </td>\n  </tr>\n  <tr>\n   <td><code>prePath</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The <code>prePath</code> returns the string before the path (such as \"<a class=\"external\" rel=\"freelink\">scheme://user:password@host</a>:port\").</p>\n\n    <p>This is related to the <a class=\"external\" href=\"http://tools.ietf.org/html/rfc6454\" title=\"http://tools.ietf.org/html/rfc6454\">Web Origin Concept of RFC6454</a>.</p>\n\n    <p>This is useful for authentication, managing sessions, or for checking the <code>origin</code> of an URI to prevent cross-site scripting attacks while using methods such as <a href=\"/en-US/docs/Web/API/Window/postMessage\" title=\"The window.postMessage() method safely enables cross-origin communication between Window objects; e.g., between a page and a pop-up that it spawned, or between a page and an iframe embedded within it.\"><code>window.postMessage()</code></a>.</p>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> Some characters may be escaped.</div> <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>ref</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>Returns the reference portion (the part after the \"#\") of the URI. If there is not one, an empty string is returned.</p>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> Some characters may be escaped.</div> </td>\n  </tr>\n  <tr>\n   <td><code>scheme</code></td>\n   <td><code><a href=\"/en/ACString\" title=\"en/ACString\">ACString</a> (US-ASCII)</code></td>\n   <td>\n    <p>The <code>scheme</code> is the protocol to which this URI refers. The scheme is restricted to the US-ASCII charset per <a class=\"external\" href=\"http://tools.ietf.org/rfc/rfc3986.txt\" title=\"http://tools.ietf.org/rfc/rfc3986.txt\">RFC3986</a>.</p>\n\n    <div class=\"warning\"><strong>Warning:</strong> Setting this is highly discouraged outside of a protocol handler implementation, since doing so will generally lead to unpredictable results.</div>\n   </td>\n  </tr>\n  <tr>\n   <td><code>spec</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>Returns a string representation of the URI. Setting the <code>spec</code> causes the new spec to be parsed using the rules for the scheme the URI currently has. If the string cannot be parsed as a URI, <code>NS_ERROR_MALFORMED_URI</code> thrown.</p>\n\n    <div class=\"warning\"><strong>Warning:</strong> Because parsing the string is done using the current URI's scheme, setting the spec to a URI with a different scheme will produce incorrect results. Therefore, only protocol handler implementations should do this.</div>\n\n    <p>If the URI stores information from the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIIOService\" title=\"\">nsIIOService</a></code> interface's <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIIOService#newURI()\">nsIIOService.newURI()</a></code> call that created it, other than just the parsed string, the behavior of this information when setting the <code>spec</code> attribute is undefined.</p>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> Some characters may be escaped.</div></td>\n  </tr>\n  <tr>\n   <td><code>specIgnoringRef</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>Returns a string representation of the URI without the <code>ref</code> (part after the #) portion.<br>\n    <br>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> Some characters may be escaped.</div> </td>\n  </tr>\n  <tr>\n   <td><code>username</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The optional username, assuming the <code>preHost</code> consists of \"username:password\".</p>\n\n    <h6 id=\"Exceptions_thrown_5\">Exceptions thrown</h6>\n\n    <dl>\n     <dt><code>NS_ERROR_FAILURE</code></dt>\n     <dd>If username is not applicable to the URI scheme (e.g. about:blank)</dd>\n    </dl>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> Some characters may be escaped.</div></td>\n  </tr>\n  <tr>\n   <td><code>userPass</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The \"username:password\" (or username only if the value doesn't contain a ':').</p>\n\n    <h6 id=\"Exceptions_thrown_6\">Exceptions thrown</h6>\n\n    <dl>\n     <dt><code>NS_ERROR_FAILURE</code></dt>\n     <dd>If userPass is not applicable to the URI scheme (e.g. about:blank)</dd>\n    </dl>\n    <div class=\"blockIndicator note\"><strong>Note:</strong> Some characters may be escaped.</div></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"clone()\" name=\"clone()\">clone()</h3>\n\n<p>Clones the URI, returning a new <code>nsIURI</code> object.</p>\n\n<div class=\"note\"><strong>Note:</strong> For some protocols, this is more than just an optimization. For example, under Mac OS X, the spec of a file URI doesn't necessarily uniquely identify a file, since two volumes can have the same name.</div>\n\n<pre class=\"eval\">nsIURI clone();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>An <code>nsIURI</code> object that represents the same URI as the current <code>nsIURI</code>.</p>\n\n<p></p><h3 id=\"cloneIgnoringRef()\">cloneIgnoringRef()</h3><p></p>\n\n<p>Clones the current URI, clearing the <code>'ref'</code> attribute in the clone.</p>\n\n<pre class=\"eval\">nsIURI cloneIgnoringRef();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>An <code>nsIURI</code> object that represents the same URI as the current <code>nsIURI</code> without the <code>'ref'</code> attribute.</p>\n\n<h3 id=\"equals()\" name=\"equals()\">equals()</h3>\n\n<p>Compares the current URI with another URI.</p>\n\n<div class=\"note\"><strong>Note:</strong> This is more than a string comparison, as two different URI strings can represent the same location. For example, comparing \"<a class=\"external\" href=\"http://foo.com:80/\" rel=\"freelink\">http://foo.com:80/</a>\" and \"<a class=\"external\" href=\"http://foo.com/\" rel=\"freelink\">http://foo.com/</a>\" will return <code>true</code>.</div>\n\n<pre class=\"eval\">boolean equals(\n  in nsIURI other\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>other</code></dt>\n <dd>Another <code>nsIURI</code> to compare to.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if the two URIs represent the same location; otherwise <code>false</code>.</p>\n\n<p></p><h3 id=\"equalsExceptRef()\">equalsExceptRef()</h3><p></p>\n\n<p>Compares the current URI with another URI, ignoring the value of the <code>.ref</code> member.</p>\n\n<div class=\"note\"><strong>Note:</strong> This is more than a string comparison, as two different URI strings can represent the same location. For example, comparing \"<a class=\"external\" href=\"http://foo.com/#\" rel=\"freelink\">http://foo.com/#</a>\" and \"<a class=\"external\" href=\"http://foo.com/\" rel=\"freelink\">http://foo.com/</a>\" or \"<a class=\"external\" href=\"http://foo.com/#aaa\" rel=\"freelink\">http://foo.com/#aaa</a>\" and \"<a class=\"external\" href=\"http://foo.com/#bbb\" rel=\"freelink\">http://foo.com/#bbb</a>\" will return <code>true</code>.</div>\n\n<pre class=\"eval\">boolean equalsExceptRef(\n  in nsIURI other\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>other</code></dt>\n <dd>Another <code>nsIURI</code> to compare to.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if the two URIs represent the same location; otherwise <code>false</code>.</p>\n\n<h3 id=\"resolve()\" name=\"resolve()\">resolve()</h3>\n\n<p>Resolves a relative URI string, using this URI as the base.</p>\n\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> Some implementations may have no concept of a relative URI.</div><p></p>\n\n<pre class=\"eval\">AUTF8String resolve(\n  in AUTF8String relativePath\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>relativePath</code></dt>\n <dd>The relative path to resolve.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The resolved absolute URI string.</p>\n\n<h3 id=\"schemeIs()\" name=\"schemeIs()\">schemeIs()</h3>\n\n<p>Quickly reports whether the <code>nsIURI</code> represents a URI with the specified scheme. This comparison is case-insensitive.</p>\n\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> This is an optimization, allowing you to check the scheme of the URI without having to get the scheme and do the comparison yourself; this saves memory allocations.</div><p></p>\n\n<pre class=\"eval\">boolean schemeIs(\n  in string scheme\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>scheme</code></dt>\n <dd>A string representing the scheme to compare to.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if the URI is for the specified scheme; otherwise <code>false</code>.</p>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><a href=\"/en/Code_snippets/URI_parsing\" title=\"en/Code_snippets/URI_parsing\">Code snippets:URI parsing</a></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mnoorenberghe\">mnoorenberghe</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/aurimas\">aurimas</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/madarche\">madarche</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kmaglione\">kmaglione</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/jreschke\">jreschke</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sevenspade\">Sevenspade</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Ghostheaven\">Ghostheaven</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/MarkFinkle\">MarkFinkle</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Johnjbarton\">Johnjbarton</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Brettz9\">Brettz9</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Waldo\">Waldo</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mook\">Mook</a>",
    "title": "nsIURI"
}