{
    "content": "<p>The <code>nsIMessenger</code> interface provides functions for managing the history, undo and redo operations, and for loading, saving, or deleting messages and attachments in mailnews.</p>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code></p>\n\n<p>Implemented by: <code>@mozilla.org/messenger;1</code>. To create an instance, use:</p>\n\n<pre class=\"eval\"> messenger = Components.classes[\"@mozilla.org/messenger;1\"]\n                       .createInstance(Components.interfaces.nsIMessenger);\n</pre>\n\n<p>In <a href=\"/en/Thunderbird\" title=\"en/Thunderbird\">Thunderbird</a>, a global nsIMessenger object is defined as <code>messenger</code> via the <code>createMessenger</code> function in <a class=\"external\" href=\"http://mxr.mozilla.org/mozilla/source/mail/base/content/mailWindow.js#112\">mailWindow.js</a>.</p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#setDisplayCharset.28.29\">setDisplayCharset</a>(in ACString aCharset);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#setWindow.28.29\">setWindow</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIDOMWindowInternal\" title=\"en/XPCOM_Interface_Reference/nsIDOMWindowInternal\">nsIDOMWindow</a> ptr, in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgWindow\" title=\"en/XPCOM_Interface_Reference/nsIMsgWindow\">nsIMsgWindow</a> msgWindow);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#openURL.28.29\">openURL</a>(in ACString aURL);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#loadURL.28.29\">loadURL</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIDOMWindowInternal\" title=\"en/XPCOM_Interface_Reference/nsIDOMWindowInternal\">nsIDOMWindow</a> ptr, in ACString aURL);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#launchExternalURL.28.29\">launchExternalURL</a>(in ACString aURL);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#canUndo.28.29\">canUndo</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#canRedo.28.29\">canRedo</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>unsigned long <a href=\"#getUndoTransactionType.28.29\">getUndoTransactionType</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>unsigned long <a href=\"#getRedoTransactionType.28.29\">getRedoTransactionType</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#undo.28.29\">undo</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgWindow\" title=\"en/XPCOM_Interface_Reference/nsIMsgWindow\">nsIMsgWindow</a> msgWindow);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#redo.28.29\">redo</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgWindow\" title=\"en/XPCOM_Interface_Reference/nsIMsgWindow\">nsIMsgWindow</a> msgWindow);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#sendUnsentMessages.28.29\">sendUnsentMessages</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgIdentity\" title=\"en/XPCOM_Interface_Reference/nsIMsgIdentity\">nsIMsgIdentity</a> aIdentity, in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgWindow\" title=\"en/XPCOM_Interface_Reference/nsIMsgWindow\">nsIMsgWindow</a> aMsgWindow);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#setDocumentCharset.28.29\">setDocumentCharset</a>(in ACString characterSet);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#saveAs.28.29\">saveAs</a>(in ACString aURI, in boolean aAsFile, in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgIdentity\" title=\"en/XPCOM_Interface_Reference/nsIMsgIdentity\">nsIMsgIdentity</a> aIdentity, in AString aMsgFilename);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#openAttachment.28.29\">openAttachment</a>(in ACString contentTpe, in ACString url, in ACString displayName, in ACString messageUri, in boolean isExternalAttachment);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#saveAttachment.28.29\">saveAttachment</a>(in ACString contentTpe, in ACString url, in ACString displayName, in ACString messageUri, in boolean isExternalAttachment);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#saveAllAttachments.28.29\">saveAllAttachments</a>(in unsigned long count, [array, size_is(count)] in string contentTypeArray, [array, size_is(count)] in string urlArray, [array, size_is(count)] in string displayNameArray, [array, size_is(count)] in string messageUriArray);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#saveAttachmentToFile.28.29\">saveAttachmentToFile</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIFile\" title=\"en/XPCOM_Interface_Reference/nsIFile\">nsIFile</a> aFile, in ACString aUrl, in ACString aMessageUri, in ACString aContentType, in <a href=\"/en/NsIUrlListener\" title=\"en/NsIUrlListener\">nsIUrlListener</a> aListener);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#detachAttachment.28.29\">detachAttachment</a>(in string contentTpe, in string url, in string displayName, in string messageUri, in boolean saveFirst, [optional] in boolean withoutWarning);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#detachAllAttachments.28.29\">detachAllAttachments</a>(in unsigned long count, [array, size_is(count)] in string contentTypeArray, [array, size_is(count)] in string urlArray, [array, size_is(count)] in string displayNameArray, [array, size_is(count)] in string messageUriArray, in boolean saveFirst, [optional] in boolean withoutWarning);</code></td>\n  </tr>\n  <tr>\n   <td><code><a href=\"/en/NsILocalFile\" title=\"en/NsILocalFile\">nsILocalFile</a> <a href=\"#saveAttachmentToFolder.28.29\">saveAttachmentToFolder</a>(in ACString contentType, in ACString url, in ACString displayName, in ACString messageUri, in <a href=\"/en/NsILocalFile\" title=\"en/NsILocalFile\">nsILocalFile</a> aDestFolder);</code></td>\n  </tr>\n  <tr>\n   <td><code><a href=\"/en/XPCOM_Interface_Reference/nsIMsgMessageService\" title=\"en/XPCOM_Interface_Reference/nsIMsgMessageService\">nsIMsgMessageService</a> <a href=\"#messageServiceFromURI.28.29\">messageServiceFromURI</a>(in ACString aUri);</code></td>\n  </tr>\n  <tr>\n   <td><code><a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> <a href=\"#msgHdrFromURI.28.29\">msgHdrFromURI</a>(in ACString aUri);</code></td>\n  </tr>\n  <tr>\n   <td><code>ACString <a href=\"#getMsgUriAtNavigatePos.28.29\">getMsgUriAtNavigatePos</a>(in long aPos);</code></td>\n  </tr>\n  <tr>\n   <td><code>ACString <a href=\"#getFolderUriAtNavigatePos.28.29\">getFolderUriAtNavigatePos</a>(in long aPos);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#getNavigateHistory.28.29\">getNavigateHistory</a>(out unsigned long aCurPos, out unsigned long aCount, [array, size_is(aCount)] out string aHistory);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<div class=\"note\">\n<p><strong>Note:</strong> Prior to <span title=\"(Firefox 8.0 / Thunderbird 8.0 / SeaMonkey 2.5)\">GeckoÂ 8.0</span>, all references to <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDOMWindow\" title=\"\">nsIDOMWindow</a></code> used in this interface were <code>nsIDOMWindow</code>.</p>\n</div>\n\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>transactionManager</code></td>\n   <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsITransactionManager\" title=\"\">nsITransactionManager</a></code></td>\n   <td><strong>Readonly:</strong> The transaction manager for this <code>nsIMessenger</code> instance.</td>\n  </tr>\n  <tr>\n   <td><code>sendingUnsentMsgs</code></td>\n   <td>boolean</td>\n   <td>Indicates if sending messages is in progress.</td>\n  </tr>\n  <tr>\n   <td><code>lastDisplayedMessageUri</code></td>\n   <td>ACString</td>\n   <td><strong>Readonly:</strong> The URL of the last displayed message.</td>\n  </tr>\n  <tr>\n   <td><code>navigatePos</code></td>\n   <td>long</td>\n   <td>The current index in the navigation history.</td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Name</td>\n   <td class=\"header\">Value</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>eUnknown</code></td>\n   <td>0</td>\n   <td>Unknown transaction type.</td>\n  </tr>\n  <tr>\n   <td><code>eDeleteMsg</code></td>\n   <td>1</td>\n   <td>Delete transaction type.</td>\n  </tr>\n  <tr>\n   <td><code>eMoveMsg</code></td>\n   <td>2</td>\n   <td>Move transaction type.</td>\n  </tr>\n  <tr>\n   <td><code>eCopyMsg</code></td>\n   <td>3</td>\n   <td>Copy transaction type.</td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"setDisplayCharset.28.29\" name=\"setDisplayCharset.28.29\">setDisplayCharset()</h3>\n\n<p>Sets the character set for the displayed message.</p>\n\n<pre class=\"eval\"> void setDisplayCharset(in ACString aCharset);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aCharset</code></dt>\n <dd>The character set to use.</dd>\n</dl>\n\n<h3 id=\"setWindow.28.29\" name=\"setWindow.28.29\">setWindow()</h3>\n\n<p>Sets the current window for a messenger session.</p>\n\n<pre class=\"eval\"> void setWindow(in nsIDOMWindow aWin,\n                in nsIMsgWindow aMsgWindow);\n</pre>\n\n<h6 id=\"Parameters_2\" name=\"Parameters_2\">Parameters</h6>\n\n<dl>\n <dt><code>aWin</code></dt>\n <dd>The window to set as the window for the messaging session. If this window contains a messagepane element (I think this may mean a <a href=\"/en/XUL/browser\" title=\"en/XUL/browser\">XUL:browser</a> element with its <code>id</code> set to \"messagepane\"?), then the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDocShell\" title=\"\">nsIDocShell</a></code> will be used for future <code>nsIMessenger</code> operations. If there is no messagepane element, then the root XUL <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDocShell\" title=\"\">nsIDocShell</a></code> will be used (so that <code>openURL()</code> will still work). If <code>null</code> is passed in then observers are removed in preparation for shutdown.</dd>\n <dt><code>aMsgWindow</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgWindow\" title=\"\">nsIMsgWindow</a></code> with the transation manager to be used.</dd>\n</dl>\n\n<h3 id=\"openURL.28.29\" name=\"openURL.28.29\">openURL()</h3>\n\n<p>Opens a url in the current window (set by <code>setWindow()</code>) and adds it to the current history.</p>\n\n<pre class=\"eval\"> void openURL(in ACString aURL);\n</pre>\n\n<h6 id=\"Parameters_3\" name=\"Parameters_3\">Parameters</h6>\n\n<dl>\n <dt><code>aURL</code></dt>\n <dd>The url to open.</dd>\n</dl>\n\n<h3 id=\"loadURL.28.29\" name=\"loadURL.28.29\">loadURL()</h3>\n\n<p>Load a custom message by url. Similar to <code>openURL()</code> except can be used to load things that appear as messages to users (e.g load an attachment as a email).</p>\n\n<pre class=\"eval\"> void loadURL(in nsIDOMWindow aWin,\n              in ACString aURL); \n</pre>\n\n<h6 id=\"Parameters_4\" name=\"Parameters_4\">Parameters</h6>\n\n<dl>\n <dt><code>aWin</code></dt>\n <dd>A window. As far as I can tell this isn't used or checked.</dd>\n <dt><code>aURL</code></dt>\n <dd>The url to open.</dd>\n</dl>\n\n<h3 id=\"launchExternalURL.28.29\" name=\"launchExternalURL.28.29\">launchExternalURL()</h3>\n\n<p>Launches the <a href=\"/en/XPCOM_Interface_Reference/nsIExternalProtocolService\" title=\"en/XPCOM_Interface_Reference/nsIExternalProtocolService\">nsIExternalProtocolService</a> and sends it the url.</p>\n\n<pre class=\"eval\"> void launchExternalURL(in ACString aURL);\n</pre>\n\n<h6 id=\"Parameters_5\" name=\"Parameters_5\">Parameters</h6>\n\n<dl>\n <dt><code>aURL</code></dt>\n <dd>The url to open.</dd>\n</dl>\n\n<h3 id=\"canUndo.28.29\" name=\"canUndo.28.29\">canUndo()</h3>\n\n<p>Queries if there are any undo items in the transaction manager.</p>\n\n<pre class=\"eval\"> boolean canUndo();\n</pre>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<dl>\n <dd>Boolean representing whether undo is available.</dd>\n</dl>\n\n<h3 id=\"canRedo.28.29\" name=\"canRedo.28.29\">canRedo()</h3>\n\n<p>Queries if there are any redo items in the transaction manager.</p>\n\n<pre class=\"eval\"> boolean canRedo();\n</pre>\n\n<h6 id=\"Return_value_2\" name=\"Return_value_2\">Return value</h6>\n\n<dl>\n <dd>Boolean representing whether redo is available.</dd>\n</dl>\n\n<h3 id=\"getUndoTransactionType.28.29\" name=\"getUndoTransactionType.28.29\">getUndoTransactionType()</h3>\n\n<p>Gets the type of the next undo transaction.</p>\n\n<pre class=\"eval\"> unsigned long getUndoTransactionType();\n</pre>\n\n<h6 id=\"Return_value_3\" name=\"Return_value_3\">Return value</h6>\n\n<dl>\n <dd>A long representing the type of the transaction. See <a href=\"#Constants\">#Constants</a> for available types.</dd>\n</dl>\n\n<h3 id=\"getRedoTransactionType.28.29\" name=\"getRedoTransactionType.28.29\">getRedoTransactionType()</h3>\n\n<p>Gets the type of the next redo transaction. Available types are defined as constants in <code>nsIMessenger</code>.</p>\n\n<pre class=\"eval\"> unsigned long getRedoTransactionType();\n</pre>\n\n<h6 id=\"Return_value_4\" name=\"Return_value_4\">Return value</h6>\n\n<dl>\n <dd>A long representing the type of the transaction. See <a href=\"#Constants\">#Constants</a> for available types.</dd>\n</dl>\n\n<h3 id=\"undo.28.29\" name=\"undo.28.29\">undo()</h3>\n\n<p>Performs the next undo transaction.</p>\n\n<pre class=\"eval\"> void undo(in nsIMsgWindow msgWindow);\n</pre>\n\n<h6 id=\"Parameters_6\" name=\"Parameters_6\">Parameters</h6>\n\n<dl>\n <dt><code>msgWindow</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgWindow\" title=\"\">nsIMsgWindow</a></code> to perform the undo transaction on.</dd>\n</dl>\n\n<h3 id=\"redo.28.29\" name=\"redo.28.29\">redo()</h3>\n\n<p>Performs the next redo transaction.</p>\n\n<pre class=\"eval\"> void redo(in nsIMsgWindow msgWindow);\n</pre>\n\n<h6 id=\"Parameters_7\" name=\"Parameters_7\">Parameters</h6>\n\n<dl>\n <dt><code>msgWindow</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgWindow\" title=\"\">nsIMsgWindow</a></code> to perform the redo transaction on.</dd>\n</dl>\n\n<h3 id=\"sendUnsentMessages.28.29\" name=\"sendUnsentMessages.28.29\">sendUnsentMessages()</h3>\n\n<p>Creates a <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgSendLater\" title=\"\">nsIMsgSendLater</a></code> instance and sends all messages for the given identity.</p>\n\n<pre class=\"eval\"> void sendUnsentMessages(in nsIMsgIdentity aIdentity,\n                         in nsIMsgWindow aMsgWindow);\n</pre>\n\n<h6 id=\"Parameters_8\" name=\"Parameters_8\">Parameters</h6>\n\n<dl>\n <dt><code>aIdentity</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgIdentity\" title=\"\">nsIMsgIdentity</a></code> to send messages for.</dd>\n <dt><code>aMsgWindow</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgWindow\" title=\"\">nsIMsgWindow</a></code> to get messages from.</dd>\n</dl>\n\n<h3 id=\"setDocumentCharset.28.29\" name=\"setDocumentCharset.28.29\">setDocumentCharset()</h3>\n\n<p>Redisplay the currently selected message (if any) using the given character set.</p>\n\n<pre class=\"eval\"> void setDocumentCharset(in ACString characterSet);\n</pre>\n\n<h6 id=\"Parameters_9\" name=\"Parameters_9\">Parameters</h6>\n\n<dl>\n <dt><code>characterSet</code></dt>\n <dd>The character set to use.</dd>\n</dl>\n\n<h3 id=\"saveAs.28.29\" name=\"saveAs.28.29\">saveAs()</h3>\n\n<p>Save the URL given.</p>\n\n<pre class=\"eval\"> void saveAs(in ACString aURI,\n             in boolean aAsFile,\n             in nsIMsgIdentity aIdentity,\n             in AString aMsgFilename);\n</pre>\n\n<h6 id=\"Parameters_10\" name=\"Parameters_10\">Parameters</h6>\n\n<dl>\n <dt><code>aURI</code></dt>\n <dd>The URL of the message to save.</dd>\n <dt><code>aAsFile</code></dt>\n <dd>If true a file picker is spawned with the option save the message as <a href=\"/en/HTML\" title=\"en/HTML\">HTML</a>, text, or <a href=\"/en/EML\" title=\"en/EML\">EML</a>. If false, the message is saved as a Template</dd>\n <dt><code>aIdentity</code></dt>\n <dd>The identity to use if saving as a Template.</dd>\n <dt><code>aMsgFilename</code></dt>\n <dd>The filename to use as the default filename if we are saving as a file.</dd>\n</dl>\n\n<h3 id=\"openAttachment.28.29\" name=\"openAttachment.28.29\">openAttachment()</h3>\n\n<p>Open an attachment.</p>\n\n<pre class=\"eval\"> void openAttachment(in ACString contentType,\n                     in ACString url,\n                     in ACString displayName,\n                     in ACString messageUri,\n                     in boolean isExternalAttachment);\n</pre>\n\n<h6 id=\"Parameters_11\" name=\"Parameters_11\">Parameters</h6>\n\n<dl>\n <dt><code>contentType</code></dt>\n <dd>The content type of the attachment.</dd>\n <dt><code>url</code></dt>\n <dd>The url of the attachment.</dd>\n <dt><code>displayName</code></dt>\n <dd>The file name for display purposes.</dd>\n <dt><code>messageUri</code></dt>\n <dd>The url of the message containing the attachment.</dd>\n <dt><code>isExternalAttachment</code></dt>\n <dd>Is the attachment inside a message or saved somewhere externally. If set to true the attachment is opened inside the message pane which in turn should trigger the helper app dialog. Same as just using the <a href=\"#openURL.28.29\">openURL()</a> method.</dd>\n</dl>\n\n<h3 id=\"saveAttachment.28.29\" name=\"saveAttachment.28.29\">saveAttachment()</h3>\n\n<p>Save an attachment.</p>\n\n<pre class=\"eval\"> void saveAttachment(in ACString contentType,\n                     in ACString url,\n                     in ACString displayName,\n                     in ACString messageUri,\n                     in boolean isExternalAttachment);\n</pre>\n\n<h6 id=\"Parameters_12\" name=\"Parameters_12\">Parameters</h6>\n\n<dl>\n <dt><code>contentType</code></dt>\n <dd>The content type of the attachment.</dd>\n <dt><code>url</code></dt>\n <dd>The url of the attachment.</dd>\n <dt><code>displayName</code></dt>\n <dd>The file name for display purposes.</dd>\n <dt><code>messageUri</code></dt>\n <dd>The url of the message containing the attachment.</dd>\n <dt><code>isExternalAttachment</code></dt>\n <dd>Is the attachment inside a message or saved somewhere externally. If set to true the attachment is opened inside the message pane which in turn should trigger the helper app dialog. Same as just using the <a href=\"#openURL.28.29\">openURL()</a> method.</dd>\n</dl>\n\n<h3 id=\"saveAllAttachments.28.29\" name=\"saveAllAttachments.28.29\">saveAllAttachments()</h3>\n\n<p>Launches a filepicker and saves all attachments listed in an array.</p>\n\n<pre class=\"eval\"> void saveAllAttachments(in unsigned long count,\n                         [array, size_is(count)] in string contentTypeArray,\n                         [array, size_is(count)] in string urlArray,\n                         [array, size_is(count)] in string displayNameArray,\n                         [array, size_is(count)] in string messageUriArray);\n</pre>\n\n<h6 id=\"Parameters_13\" name=\"Parameters_13\">Parameters</h6>\n\n<dl>\n <dt><code>count</code></dt>\n <dd>The number of attachments being saved.</dd>\n <dt><code>contentTypeArray</code></dt>\n <dd>An array of content types for each attachment.</dd>\n <dt><code>urlArray</code></dt>\n <dd>An array of urls for each attachment.</dd>\n <dt><code>displayNameArray</code></dt>\n <dd>An array of file names for each attachment.</dd>\n <dt><code>messageUriArray</code></dt>\n <dd>An array of message uris for each attachment.</dd>\n</dl>\n\n<h3 id=\"saveAttachmentToFile.28.29\" name=\"saveAttachmentToFile.28.29\">saveAttachmentToFile()</h3>\n\n<p>Save an attachment to a particular <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile\" title=\"\">nsIFile</a></code>.</p>\n\n<pre class=\"eval\"> void saveAttachmentToFile(in nsIFile aFile,\n                           in ACString aUrl,\n                           in ACString aMessageUri, \n                           in ACString aContentType,\n                           in nsIUrlListener aListener);\n</pre>\n\n<h6 id=\"Parameters_14\" name=\"Parameters_14\">Parameters</h6>\n\n<dl>\n <dt><code>aFile</code></dt>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFile\" title=\"\">nsIFile</a></code> to save to.</dd>\n <dt><code>aUrl</code></dt>\n <dd>The url of the attachment.</dd>\n <dt><code>aMessageUri</code></dt>\n <dd>The url of the message containing this attachment.</dd>\n <dt><code>aContentType</code></dt>\n <dd>The content type of the attachment.</dd>\n <dt><code>aListener</code></dt>\n <dd>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIUrlListener\" title=\"\">nsIUrlListener</a></code> to be notified when the file is saved.</dd>\n</dl>\n\n<h3 id=\"detachAttachment.28.29\" name=\"detachAttachment.28.29\">detachAttachment()</h3>\n\n<p>Deletes an attachment from a message.</p>\n\n<pre class=\"eval\"> void detachAttachment(in string contentType,\n                       in string url,\n                       in string displayName,\n                       in string messageUri,\n                       in boolean saveFirst,\n                       [optional] in boolean withoutWarning);\n</pre>\n\n<h6 id=\"Parameters_15\" name=\"Parameters_15\">Parameters</h6>\n\n<dl>\n <dt><code>contentType</code></dt>\n <dd>The content type of the attachment.</dd>\n <dt><code>url</code></dt>\n <dd>The url of the attachment.</dd>\n <dt><code>displayName</code></dt>\n <dd>The file name of the attachment.</dd>\n <dt><code>messageUri</code></dt>\n <dd>The url of the message containing the attachment.</dd>\n <dt><code>saveFirst</code></dt>\n <dd>If <code>true</code>, the attachment is saved using <a href=\"#saveAttachment.28.29\">saveAttachment()</a> before it is deleted.</dd>\n <dt><code>withoutWarning</code></dt>\n <dd>If <code>true</code>, no warning is shown to the user before the delete.</dd>\n</dl>\n\n<h3 id=\"detachAllAttachments.28.29\" name=\"detachAllAttachments.28.29\">detachAllAttachments()</h3>\n\n<p>Deletes a set of attachments.</p>\n\n<pre class=\"eval\"> void detachAllAttachments(in unsigned long count,\n                           [array, size_is(count)] in string contentTypeArray,\n                           [array, size_is(count)] in string urlArray,\n                           [array, size_is(count)] in string displayNameArray,\n                           [array, size_is(count)] in string messageUriArray,\n                           in boolean saveFirst,\n                           [optional] in boolean withoutWarning);\n</pre>\n\n<h6 id=\"Parameters_16\" name=\"Parameters_16\">Parameters</h6>\n\n<dl>\n <dt><code>count</code></dt>\n <dd>The number of attachments to be deleted.</dd>\n <dt><code>contentTypeArray</code></dt>\n <dd>An array of content types for each attachment.</dd>\n <dt><code>urlArray</code></dt>\n <dd>An array of urls for each attachment.</dd>\n <dt><code>displayNameArray</code></dt>\n <dd>An array of file names for each attachment.</dd>\n <dt><code>messageUriArray</code></dt>\n <dd>An array of urls for the message containing each attachment.</dd>\n <dt><code>saveFirst</code></dt>\n <dd>If <code>true</code>, the attachments are saved using <a href=\"#saveAllAttachments.28.29\">saveAllAttachments()</a> before being deleted.</dd>\n <dt><code>withoutWarning</code></dt>\n <dd>If <code>true</code>, no warning is shown to the user before the delete.</dd>\n</dl>\n\n<h3 id=\"saveAttachmentToFolder.28.29\" name=\"saveAttachmentToFolder.28.29\">saveAttachmentToFolder()</h3>\n\n<p>Saves an attachment in a given folder. <code>saveAttachmentToFolder()</code> is used by the drag and drop code to drop an attachment to a destination folder. Returns the actual file path (including the filename).</p>\n\n<pre class=\"eval\"> nsILocalFile saveAttachmentToFolder(in ACString ,\n                                     in ACString url,\n                                     in ACString displayName,\n                                     in ACString messageUri,\n                                     in nsILocalFile aDestFolder);\n</pre>\n\n<h6 id=\"Parameters_17\" name=\"Parameters_17\">Parameters</h6>\n\n<dl>\n <dt><code>contentType</code></dt>\n <dd>The content type of the attachment.</dd>\n <dt><code>url</code></dt>\n <dd>The url of the attachment.</dd>\n <dt><code>displayName</code></dt>\n <dd>The file name of the attachment.</dd>\n <dt><code>messageUri</code></dt>\n <dd>The url of the message containing the attachment.</dd>\n <dt><code>aDestFolder</code></dt>\n <dd>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsILocalFile\" title=\"\">nsILocalFile</a></code> poiting to the folder where the attachment should be saved.</dd>\n</dl>\n\n<h6 id=\"Return_value_5\" name=\"Return_value_5\">Return value</h6>\n\n<dl>\n <dd>The actual <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsILocalFile\" title=\"\">nsILocalFile</a></code> where the attachment was saved.</dd>\n</dl>\n\n<h3 id=\"messageServiceFromURI.28.29\" name=\"messageServiceFromURI.28.29\">messageServiceFromURI()</h3>\n\n<p>Gets the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgMessageService\" title=\"\">nsIMsgMessageService</a></code> in charge of a particular url. Message services are implemented for different protocols such as <a href=\"/en/IMAP\" title=\"en/IMAP\">IMAP</a>, <a href=\"/en/POP3\" title=\"en/POP3\">POP3</a>, or local mail sources.</p>\n\n<pre class=\"eval\"> nsIMsgMessageService messageServiceFromURI(in ACString aUri);\n</pre>\n\n<h6 id=\"Parameters_18\" name=\"Parameters_18\">Parameters</h6>\n\n<dl>\n <dt><code>aUri</code></dt>\n <dd>The url of the message or attachment to get the service for.</dd>\n</dl>\n\n<h6 id=\"Return_value_6\" name=\"Return_value_6\">Return value</h6>\n\n<dl>\n <dd>The <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgMessageService\" title=\"\">nsIMsgMessageService</a></code> responsible for the url.</dd>\n</dl>\n\n<h3 id=\"msgHdrFromURI.28.29\" name=\"msgHdrFromURI.28.29\">msgHdrFromURI()</h3>\n\n<pre class=\"eval\"> nsIMsgDBHdr msgHdrFromURI(in ACString aUri);\n</pre>\n\n<h3 id=\"getMsgUriAtNavigatePos.28.29\" name=\"getMsgUriAtNavigatePos.28.29\">getMsgUriAtNavigatePos()</h3>\n\n<p>Gets the message a particular position in the navigation history. For example, back-forward history needs a list of visited messages, and where it is in the list. Unfortunately, you must call this before navigating to a position, because calling this has the side effect of making us adjust our current history position, and <strong>not</strong> adding the loaded message to the history queue.</p>\n\n<pre class=\"eval\"> ACString getMsgUriAtNavigatePos(in long aPos);\n</pre>\n\n<h6 id=\"Parameters_19\" name=\"Parameters_19\">Parameters</h6>\n\n<dl>\n <dt><code>aPos</code></dt>\n <dd>The position to get the url from relative to the current history cursor. +1 is forward, -1 is back.</dd>\n</dl>\n\n<h6 id=\"Return_value_7\" name=\"Return_value_7\">Return value</h6>\n\n<dl>\n <dd>The url at that point in the history.</dd>\n</dl>\n\n<h3 id=\"getFolderUriAtNavigatePos.28.29\" name=\"getFolderUriAtNavigatePos.28.29\">getFolderUriAtNavigatePos()</h3>\n\n<p>Gets the folder url at a particular position in the navigation history.</p>\n\n<pre class=\"eval\"> ACString getFolderUriAtNavigatePos(in long aPos);\n</pre>\n\n<h6 id=\"Parameters_20\" name=\"Parameters_20\">Parameters</h6>\n\n<dl>\n <dt><code>aPos</code></dt>\n <dd>The position to get the url from relative to the current history cursor. +1 is forward, -1 is back.</dd>\n</dl>\n\n<h6 id=\"Return_value_8\" name=\"Return_value_8\">Return value</h6>\n\n<dl>\n <dd>The url of the folder at that point in the history.</dd>\n</dl>\n\n<h3 id=\"getNavigateHistory.28.29\" name=\"getNavigateHistory.28.29\">getNavigateHistory()</h3>\n\n<p>Returns information about the current navigation history. If caller just wants the count and current pos, they can pass in <code>null</code> for aHistory, which will be more efficent. If they want a list suitable for display, they should pass in an aHistory pointer, and they'll get returned an array with strings containing something like subject and sender of the message - other possible info is the folder containing the message, and the preview text, if available.</p>\n\n<pre class=\"eval\"> void getNavigateHistory(out unsigned long aCurPos, out unsigned long aCount, [array, size_is(aCount)] out string aHistory);\n</pre>\n\n<h6 id=\"Return_value_9\" name=\"Return_value_9\">Return value</h6>\n\n<dl>\n <dt><code>aCurPos</code></dt>\n <dd>The current position in the history.</dd>\n <dt><code>aCount</code></dt>\n <dd>The number of items in the history.</dd>\n <dt><code>aHistory</code></dt>\n <dd>An array of strings containing information about each entry in the history.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Wjjohnst\">Wjjohnst</a>",
    "title": "nsIMessenger"
}