{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/webshell/public/nsIClipboardCommands.idl\" rel=\"custom\">webshell/public/nsIClipboardCommands.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nAn interface for embedding clients who wish to interact with the system-wide OS clipboard. Mozilla does not use a private clipboard, instead it places its data directly onto the system clipboard. The webshell implements this interface.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.7 </span></div>\n</div><p></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>boolean <a href=\"#canCopyImageContents()\">canCopyImageContents</a>();</code></td> </tr> <tr> <td><code>boolean <a href=\"#canCopyImageLocation()\">canCopyImageLocation</a>();</code></td> </tr> <tr> <td><code>boolean <a href=\"#canCopyLinkLocation()\">canCopyLinkLocation</a>();</code></td> </tr> <tr> <td><code>boolean <a href=\"#canCopySelection()\">canCopySelection</a>();</code></td> </tr> <tr> <td><code>boolean <a href=\"#canCutSelection()\">canCutSelection</a>();</code></td> </tr> <tr> <td><code>boolean <a href=\"#canPaste()\">canPaste</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#copyImageContents()\">copyImageContents</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#copyImageLocation()\">copyImageLocation</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#copyLinkLocation()\">copyLinkLocation</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#copySelection()\">copySelection</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#cutSelection()\">cutSelection</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#paste()\">paste</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#selectAll()\">selectAll</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#selectNone()\">selectNone</a>();</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"canCopyImageContents()\" name=\"canCopyImageContents()\">canCopyImageContents()</h3>\n<p>Returns whether we can copy an image's contents.</p>\n<pre class=\"eval\">boolean canCopyImageContents();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if an image is selected, <code>false</code> otherwise.</p>\n<h3 id=\"canCopyImageLocation()\" name=\"canCopyImageLocation()\">canCopyImageLocation()</h3>\n<p>Returns whether we can copy an image location.</p>\n<pre class=\"eval\">boolean canCopyImageLocation();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if an image is selected, <code>false</code> otherwise.</p>\n<h3 id=\"canCopyLinkLocation()\" name=\"canCopyLinkLocation()\">canCopyLinkLocation()</h3>\n<p>Returns whether we can copy a link location.</p>\n<pre class=\"eval\">boolean canCopyLinkLocation();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if a link is selected, <code>false</code> otherwise.</p>\n<h3 id=\"canCopySelection()\" name=\"canCopySelection()\">canCopySelection()</h3>\n<p>Returns whether there is a selection and it is copyable.</p>\n<pre class=\"eval\">boolean canCopySelection();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if there is a selection, <code>false</code> otherwise.</p>\n<h3 id=\"canCutSelection()\" name=\"canCutSelection()\">canCutSelection()</h3>\n<p>Returns whether there is a selection and it is not read-only.</p>\n<pre class=\"eval\">boolean canCutSelection();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if the current selection can be cut, <code>false</code> otherwise.</p>\n<h3 id=\"canPaste()\" name=\"canPaste()\">canPaste()</h3>\n<p>Returns whether the current contents of the clipboard can be pasted and if the current selection is not read-only.</p>\n<pre class=\"eval\">boolean canPaste();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if there is data to paste on the clipboard and the current selection is not read-only, <code>false</code> otherwise.</p>\n<h3 id=\"copyImageContents()\" name=\"copyImageContents()\">copyImageContents()</h3>\n<p>Copy the contents of the selected image.</p>\n<pre class=\"eval\">void copyImageContents();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"copyImageLocation()\" name=\"copyImageLocation()\">copyImageLocation()</h3>\n<p>Copy the location of the selected image.</p>\n<pre class=\"eval\">void copyImageLocation();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"copyLinkLocation()\" name=\"copyLinkLocation()\">copyLinkLocation()</h3>\n<p>Copy the link location of the current selection (For example the |href| attribute of a selected |a| tag).</p>\n<pre class=\"eval\">void copyLinkLocation();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"copySelection()\" name=\"copySelection()\">copySelection()</h3>\n<p>Copy the current selection onto the clipboard.</p>\n<pre class=\"eval\">void copySelection();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"cutSelection()\" name=\"cutSelection()\">cutSelection()</h3>\n<p>Cut the current selection onto the clipboard.</p>\n<pre class=\"eval\">void cutSelection();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"paste()\" name=\"paste()\">paste()</h3>\n<p>Paste the contents of the clipboard into the current selection.</p>\n<pre class=\"eval\">void paste();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"selectAll()\" name=\"selectAll()\">selectAll()</h3>\n<p>Select the entire contents.</p>\n<pre class=\"eval\">void selectAll();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"selectNone()\" name=\"selectNone()\">selectNone()</h3>\n<p>Clear the current selection (if any). Insertion point ends up at beginning of current selection.</p>\n<pre class=\"eval\">void selectNone();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul> <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIClipboard\" title=\"\">nsIClipboard</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Ayhfung\">Ayhfung</a>",
    "title": "nsIClipboardCommands"
}