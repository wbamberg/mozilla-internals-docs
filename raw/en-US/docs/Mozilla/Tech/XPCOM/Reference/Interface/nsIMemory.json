{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/xpcom/base/nsIMemory.idl\" rel=\"custom\">xpcom/base/nsIMemory.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface represents a generic memory allocator.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 0.9.6 </span></div>\n</div><p></p>\n\n<p><code>nsIMemory</code> is used to allocate and deallocate memory segments from a heap. The implementation is free to define the heap. <code><a href=\"/en/NS_GetMemoryManager\" title=\"en/NS_GetMemoryManager\">NS_GetMemoryManager</a></code> returns the global <code>nsIMemory</code> instance.</p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>voidPtr <a href=\"#alloc()\">alloc</a>(in size_t size);</code> <span class=\"inlineIndicator notXPCOM notXPCOMInline\" title=\"Only use this method if you REALLY know what you are doing!\">Violates the XPCOM interface guidelines</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#free()\">free</a>(in voidPtr ptr);</code> <span class=\"inlineIndicator notXPCOM notXPCOMInline\" title=\"Only use this method if you REALLY know what you are doing!\">Violates the XPCOM interface guidelines</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#heapMinimize()\">heapMinimize</a>(in boolean immediate);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#isLowMemory()\">isLowMemory</a>();</code> <span class=\"inlineIndicator deprecated deprecatedInline\" title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Deprecated since Gecko 2.0</span></td>\n  </tr>\n  <tr>\n   <td><code>voidPtr <a href=\"#realloc()\">realloc</a>(in voidPtr ptr, in size_t newSize);</code> <span class=\"inlineIndicator notXPCOM notXPCOMInline\" title=\"Only use this method if you REALLY know what you are doing!\">Violates the XPCOM interface guidelines</span></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"alloc\">alloc</h3>\n\n<p>Allocates a block of memory of a particular size.</p>\n\n<pre class=\"eval\">voidPtr alloc(\n  in size_t size\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>size</code></dt>\n <dd>The size of the block to allocate.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>If the memory cannot be allocated (because of an out-of-memory condition), <code>null</code> is returned. Otherwise, it returns a pointer to the newly allocated memory segment. The result must be freed with a call to <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemory#free()\">free()</a></code> when it is no longer needed.</p>\n\n<h3 id=\"free\">free</h3>\n\n<p>Frees a previously allocated block of memory.</p>\n\n<pre class=\"eval\">void free(\n  in voidPtr ptr\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>ptr</code></dt>\n <dd>The address of the memory block to free. This may be <code>null</code>, in which case nothing happens.</dd>\n</dl>\n\n<h3 id=\"heapMinimize()\" name=\"heapMinimize()\">heapMinimize()</h3>\n\n<p>Attempts to shrink the size of the heap. A particular <code>nsIMemory</code> instance may choose not to implement this method.</p>\n\n<pre class=\"eval\">void heapMinimize(\n  in boolean immediate\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>immediate</code></dt>\n <dd>If <code>true</code>, heap minimization will occur immediately if the call was made on the main thread. If <code>false</code>, the flush will be scheduled to happen when the app is idle.</dd>\n</dl>\n\n<h3 id=\"isLowMemory\">isLowMemory</h3>\n\n<p>Determine if we are in a low-memory situation (what constitutes low-memory is platform dependent). This can be used to trigger the memory pressure observers.</p>\n\n<div class=\"note\">\n<p><strong>Note:</strong> This method was deprecated in <span title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Gecko 2.0</span>. If you need to monitor low memory conditions, you should watch for the <a href=\"#Low_memory_notifications\">Low memory notifications</a> \"memory-pressure\" notifications instead.</p>\n</div>\n\n<pre class=\"eval\">boolean isLowMemory();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if we are in a low-memory situation. Otherwise <code>false</code>.</p>\n\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong>  From <span title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Gecko 2.0</span> always returns <code>false</code>. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=592308\" title=\"FIXED: IsLowMemory() is terribly slow and there is nothing to do about it.\">bug 592308</a>.</div><p></p>\n\n<h3 id=\"realloc()\" name=\"realloc()\">realloc()</h3>\n\n<p>Reallocates a block of memory to a new size.</p>\n\n<pre class=\"eval\">voidPtr realloc(\n  in voidPtr ptr,\n  in size_t newSize\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>ptr</code></dt>\n <dd>The address of the memory block to reallocate. This may be <code>null</code>, in which case <code>realloc</code> behaves like <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemory#alloc()\">alloc()</a></code>.</dd>\n <dt><code>newSize</code></dt>\n <dd>Specifies the new size in bytes of the block of memory to allocate. This may be 0, in which case <code>realloc</code> behaves like <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemory#alloc()\">alloc()</a></code>.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>null</code> if the memory allocation fails. Otherwise, it returns a pointer to the newly allocated memory segment. The result must be freed with a call to <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemory#free()\">free()</a></code> when it is no longer needed.</p>\n\n<h4 id=\"Low_memory_notifications\" name=\"Low_memory_notifications\">Low memory notifications</h4>\n\n<p>An <code>nsIMemory</code> implementation may be capable of monitoring heap usage. Moreover, a mechanism exists by which a client can receive notifications about low-memory situations.</p>\n\n<p>A client that wishes to be notified of low memory situations (for example, because the client maintains a large memory cache that could be released when memory is tight) should register with the observer service (see <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIObserverService\" title=\"\">nsIObserverService</a></code>) using the topic \"memory-pressure\". There are three specific types of notifications that can occur. These types will be passed as the <code>aData</code> parameter of the of the \"memory-pressure\" notification:</p>\n\n<dl>\n <dt>\"<code>low-memory</code>\"</dt>\n <dd>This will be passed as the value of <code>aData</code> when a low-memory condition occurs (not necessarily an out-of-memory condition).</dd>\n <dt>\"<code>heap-minimize</code>\"</dt>\n <dd>This will be passed as the value of <code>aData</code> when an explicit call to <code><code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMemory#heapMinimize()\">heapMinimize()</a></code></code> was made.</dd>\n <dt>\"<code>alloc-failure</code>\"</dt>\n <dd>This will be passed as the value of <code>aData</code> when an out-of-memory condition occurs.</dd>\n</dl>\n\n<p>When a <code>nsIMemory</code> instance notifies memory pressure observers, it passes itself as the <code>aSubject</code> parameter in the call to <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIObserverService#notifyObservers()\">nsIObserverService.notifyObservers()</a></code>. This allows <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIObserver\" title=\"\">nsIObserver</a></code> implementations to observe multiple <code>nsIMemory</code> instances and determine the source of memory pressure notifications.</p>\n\n<h2 id=\"Remarks\" name=\"Remarks\">Remarks</h2>\n\n<p>This interface was frozen for <span title=\"\">Gecko 0.9.6</span>. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=99151\" title=\"FIXED: nsIMemory needs to be frozen\">bug 99151</a> for details. From <span title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Gecko 2.0</span> interfaces are no longer frozen.</p>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/NS_GetMemoryManager\" title=\"\">NS_GetMemoryManager</a></code></li>\n <li><code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIObserverService#notifyObservers()\">nsIObserverService.notifyObservers()</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIObserver\" title=\"\">nsIObserver</a></code></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIObserverService\" title=\"\">nsIObserverService</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/TheBits\">TheBits</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Pmash\">Pmash</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Dria\">Dria</a>",
    "title": "nsIMemory"
}