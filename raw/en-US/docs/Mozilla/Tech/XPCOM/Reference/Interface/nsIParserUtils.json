{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/parser/html/nsIParserUtils.idl\" rel=\"custom\">parser/html/nsIParserUtils.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nProvides non-Web HTML parsing functionality to Firefox extensions and XULRunner applications.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 24.285714285714285%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 24.285714285714285%; background: #00dd00; position: absolute; width: 75.71428571428572%;\" title=\"Introduced in Gecko 13.0 (Firefox 13.0 / Thunderbird 13.0 / SeaMonkey 2.10)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 24.285714285714285%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 24.285714285714285%;\">Gecko 13.0</div>\n\n    <div style=\"height: 8px; top: 16px; left: 25.21428571428571%; background: #eeee00; position: absolute; width: 1%; border-radius: 4px; -webkit-border-radius: 4px;\" title=\"Last changed in Gecko 14.0 (Firefox 14.0 / Thunderbird 14.0 / SeaMonkey 2.11)\"></div>\n    \n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 14.0 (Firefox 14.0 / Thunderbird 14.0 / SeaMonkey 2.11)</span></div>\n</div><p></p>\n\n<div class=\"warning\">Warning: Do not use this from within Gecko--use <code>nsContentUtils</code>, <code>nsTreeSanitizer</code>, and so on directly instead.</div>\n\n<p>Implemented by: <code>@mozilla.org/parserutils;1</code> as a service:</p>\n\n<pre class=\"eval\">var parserUtils = Components.classes[\"@mozilla.org/<code>parserutils;1</code>\"]\n                  .getService(Components.interfaces.nsIParserUtils);\n</pre>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><code>AString <a href=\"#convertToPlainText()\">convertToPlainText</a>(in AString src, in unsigned long flags, in unsigned long wrapCol);</code></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>nsIDOMDocumentFragment <a href=\"#parseFragment()\">parseFragment</a>(in AString fragment, in unsigned long flags, in boolean isXML, in nsIURI baseURI, in nsIDOMElement element);</code> </td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>AString <a href=\"#sanitize()\">sanitize</a>(in AString src, in unsigned long flags);</code> </td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n\n<table class=\"standard-table\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td class=\"header\">Constant</td>\n\t\t\t<td class=\"header\">Value</td>\n\t\t\t<td class=\"header\">Description</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>SanitizerAllowComments</code></td>\n\t\t\t<td><code>(1 &lt;&lt; 0)</code></td>\n\t\t\t<td>Flag for sanitizer: Allow comment nodes. </td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>SanitizerAllowStyle</code></td>\n\t\t\t<td><code>(1 &lt;&lt; 1)</code></td>\n\t\t\t<td>\n\t\t\t<p>Flag for sanitizer: Allow <a href=\"/en-US/docs/Web/HTML/Element/style\" title=\"The HTML &lt;style> element contains style information for a document, or part of a document.\"><code>&lt;style&gt;</code></a> elements and <code>style</code> attributes (with contents sanitized in case of <code>-moz-binding</code>).</p>\n\n\t\t\t<div class=\"note\"><strong>Note:</strong> If <code>-moz-binding</code> is absent, properties that might be XSS risks in other Web engines are preserved! </div>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>SanitizerCidEmbedsOnly</code></td>\n\t\t\t<td><code>(1 &lt;&lt; 2)</code></td>\n\t\t\t<td>\n\t\t\t<p>Flag for sanitizer: Only allow cid: URLs for embedded content.</p>\n\n\t\t\t<p>At present, sanitizing CSS backgrounds, and so on., is not supported, so setting this together with <code>SanitizerAllowStyle</code> doesn't make sense.</p>\n\t\t\tAt present, sanitizing CSS syntax in SVG presentational attributes is not supported, so this option flattens out SVG. </td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>SanitizerDropNonCSSPresentation</code></td>\n\t\t\t<td><code>(1 &lt;&lt; 3)</code></td>\n\t\t\t<td>Flag for sanitizer: Drops non-CSS presentational HTML elements and attributes, such as <a href=\"/en-US/docs/Web/HTML/Element/font\" title=\"The HTML Font Element (&lt;font>) defines the font size, color and face for its content.\"><code>&lt;font&gt;</code></a>, <a href=\"/en-US/docs/Web/HTML/Element/center\" title=\"The obsolete HTML Center Element (&lt;center>) is a block-level element that displays its block-level or inline contents centered horizontally within its containing element.\"><code>&lt;center&gt;</code></a>, and the <code>bgcolor</code> attribute. </td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>SanitizerDropForms</code></td>\n\t\t\t<td><code>(1 &lt;&lt; 4)</code></td>\n\t\t\t<td>Flag for sanitizer: Drops forms and form controls (excluding <a href=\"/en-US/docs/Web/HTML/Element/fieldset\" title=\"The HTML &lt;fieldset> element is used to group several controls as well as labels (&lt;label>) within a web form.\"><code>&lt;fieldset&gt;</code></a> and <a href=\"/en-US/docs/Web/HTML/Element/legend\" title=\"The HTML &lt;legend> element represents a caption for the content of its parent &lt;fieldset>.\"><code>&lt;legend&gt;</code></a>. </td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>SanitizerDropMedia</code></td>\n\t\t\t<td><code>(1 &lt;&lt; 5)</code></td>\n\t\t\t<td>Flag for sanitizer: Drops <a href=\"/en-US/docs/Web/HTML/Element/img\" title=\"The HTML &lt;img> element embeds an image into the document. It is a replaced element.\"><code>&lt;img&gt;</code></a>, <a href=\"/en-US/docs/Web/HTML/Element/video\" title=\"The HTML Video element (&lt;video>) embeds a media player which supports video playback into the document.\"><code>&lt;video&gt;</code></a>, <a href=\"/en-US/docs/Web/HTML/Element/audio\" title=\"The HTML &lt;audio> element is used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the &lt;source> element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.\"><code>&lt;audio&gt;</code></a>, and <a href=\"/en-US/docs/Web/HTML/Element/source\" title=\"The HTML &lt;source> element specifies multiple media resources for the &lt;picture>, the &lt;audio> element, or the &lt;video> element.\"><code>&lt;source&gt;</code></a>, and flattens out <a href=\"/en/SVG\" title=\"en/SVG\">SVG</a>. </td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>SanitizerLogRemovals</code></td>\n\t\t\t<td><code>(1 &lt;&lt; 6)</code></td>\n\t\t\t<td>Flag for sanitizer: Log messages to the <a href=\"/en-US/docs/Tools/Browser_Console\">console</a> for everything that gets sanitized.</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"convertToPlainText()\" name=\"convertToPlainText()\">convertToPlainText()</h3>\n\n<p>Converts HTML to plain text.</p>\n\n<pre class=\"eval\">AString convertToPlainText(\n  in AString src,\n  in unsigned long flags,\n  in unsigned long wrapCol\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n\t<dt><code>src</code></dt>\n\t<dd>The HTML source to parse (C++ callers are allowed but not required to use the same string for the return value.)</dd>\n\t<dt><code>flags</code></dt>\n\t<dd>Conversion option flags defined in <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDocumentEncoder\" title=\"\">nsIDocumentEncoder</a></code>.</dd>\n\t<dt><code>wrapCol</code></dt>\n\t<dd>Number of characters per line; 0 for no auto-wrapping.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The plain text conversion of the HTML specified in <code>src</code>.</p>\n\n<p></p><h3 id=\"parseFragment()\">parseFragment()</h3><p></p>\n\n<p>Parses markup into a sanitized document fragment.</p>\n\n<pre class=\"eval\">nsIDOMDocumentFragment parseFragment(\n  in AString fragment,\n  in unsigned long flags,\n  in boolean isXML,\n  in nsIURI baseURI,\n  in nsIDOMElement element\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n\t<dt><code>fragment</code></dt>\n\t<dd>The input markup.</dd>\n\t<dt><code>flags</code></dt>\n\t<dd>Sanitization option flags defined above.</dd>\n\t<dt><code>isXML</code></dt>\n\t<dd><code>true</code> if |fragment| is XML and <code>false</code> if HTML.</dd>\n\t<dt><code>baseURI</code></dt>\n\t<dd>The base URL for this fragment.</dd>\n\t<dt><code>element</code></dt>\n\t<dd>The context node for the fragment parsing algorithm.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDOMDocumentFragment\" title=\"\">nsIDOMDocumentFragment</a></code> object for the resulting sanitized document fragment.</p>\n\n<p></p><h3 id=\"sanitize()\">sanitize()</h3><p></p>\n\n<p>Parses a string into an HTML document, sanitizes the document, and returns the result serialized to a string.</p>\n\n<p>The sanitizer is designed to protect against XSS when sanitized content is inserted into a different-origin context without an iframe-equivalent sandboxing mechanism.</p>\n\n<p>By default, the sanitizer doesn't try to avoid leaking information that the content was viewed to third parties. That is, by default, for example <a href=\"/en-US/docs/Web/HTML/Element/img\" title=\"The HTML &lt;img> element embeds an image into the document. It is a replaced element.\"><code>&lt;img&gt;</code></a> with a source pointing to an HTTP server potentially controlled by a third party is not removed. To avoid ambient information leakage upon loading the sanitized content, use the <code>SanitizerInternalEmbedsOnly</code> flag. In that case, <a href=\"/en-US/docs/Web/HTML/Element/a\" title=\"The HTML &lt;a> element (or anchor element) creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL.\"><code>&lt;a&gt;</code></a> links (and similar) to other content are preserved, so an explicit user action (following a link) after the content has been loaded can still leak information.</p>\n\n<p>By default, non-dangerous non-CSS presentational HTML elements and attributes or forms are not removed. To remove these, use <code>SanitizerDropNonCSSPresentation</code> and/or <code>SanitizerDropForms</code>.</p>\n\n<p>By default, comments and CSS is removed. To preserve comments, use <code>SanitizerAllowComments</code>. To preserve <a href=\"/en-US/docs/Web/HTML/Element/style\" title=\"The HTML &lt;style> element contains style information for a document, or part of a document.\"><code>&lt;style&gt;</code></a> elements and <code>style</code> attributes on other elements, use <code>SanitizerAllowStyle</code>. <code>-moz-binding</code> is removed from <a href=\"/en-US/docs/Web/HTML/Element/style\" title=\"The HTML &lt;style> element contains style information for a document, or part of a document.\"><code>&lt;style&gt;</code></a> elements and <code>style</code> attributes if present. In this case, properties that Gecko doesn't recognize can get removed as a side effect.</p>\n\n<div class=\"note\"><strong>Note:</strong> If <code>-moz-binding</code> is not present, <a href=\"/en-US/docs/Web/HTML/Element/style\" title=\"The HTML &lt;style> element contains style information for a document, or part of a document.\"><code>&lt;style&gt;</code></a> elements and <code>style</code> attributes, and if <code>SanitizerAllowStyle</code> is specified, the sanitized content may still be XSS dangerous if loaded into a non-Gecko Web engine!</div>\n\n<pre class=\"eval\">AString sanitize(\n  in AString src,\n  in unsigned long flags\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n\t<dt><code>src</code></dt>\n\t<dd>The HTML source to parse (C++ callers are allowed but not required to use the same string for the return value).</dd>\n\t<dt><code>flags</code></dt>\n\t<dd>Sanitization option flags defined above.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The resulting text.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>",
    "title": "nsIParserUtils"
}