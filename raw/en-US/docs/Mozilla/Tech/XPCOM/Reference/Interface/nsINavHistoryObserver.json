{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/toolkit/components/places/nsINavHistoryService.idl\" rel=\"custom\">toolkit/components/places/nsINavHistoryService.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface is similar to the nsIRDFObserver class, but is used to observe interactions on the global history.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 5.714285714285714%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 5.714285714285714%; background: #00dd00; position: absolute; width: 94.28571428571429%;\" title=\"Introduced in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Gecko 1.8</div>\n\n    <div style=\"height: 8px; top: 16px; left: 35.214285714285715%; background: #eeee00; position: absolute; width: 1%; border-radius: 4px; -webkit-border-radius: 4px;\" title=\"Last changed in Gecko 21.0 (Firefox 21.0 / Thunderbird 21.0 / SeaMonkey 2.18)\"></div>\n    \n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 21.0 (Firefox 21.0 / Thunderbird 21.0 / SeaMonkey 2.18)</span></div>\n</div><p></p>\n<div class=\"warning\">\n <strong>Warning:</strong> If you are in the middle of a batch transaction, there may be a database transaction active. You can still access the database in this situation but be careful (<em>of what?</em>).</div>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#onBeforeDeleteURI()\">onBeforeDeleteURI</a>(in nsIURI aURI, in ACString aGUID);</code>  <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 21.0 / Thunderbird 21.0 / SeaMonkey 2.18)\">Obsolete since Gecko 21.0</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onBeginUpdateBatch()\">onBeginUpdateBatch</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onClearHistory()\">onClearHistory</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onDeleteURI()\">onDeleteURI</a>(in nsIURI aURI, in ACString aGUID);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onDeleteVisits()\">onDeleteVisits</a>(in nsIURI aURI, in PRTime aVisitTime, in ACString aGUID);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onEndUpdateBatch()\">onEndUpdateBatch</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onPageChanged()\">onPageChanged</a>(in nsIURI aURI, in unsigned long aWhat, in AString aValue);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onPageExpired()\">onPageExpired</a>(in nsIURI aURI, in PRTime aVisitTime, in boolean aWholeEntry);</code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Obsolete since Gecko 2.0</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onTitleChanged()\">onTitleChanged</a>(in nsIURI aURI, in AString aPageTitle);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#onVisit()\">onVisit</a>(in nsIURI aURI, in long long aVisitID, in PRTime aTime, in long long aSessionID, in long long aReferringID, in unsigned long aTransitionType, in ACString aGUID, out unsigned long aAdded);</code> </td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Constant</td>\n   <td class=\"header\">Value</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>ATTRIBUTE_FAVICON</code></td>\n   <td><code>3</code></td>\n   <td>The page's favicon changed.</td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"onBeforeDeleteURI()\">onBeforeDeleteURI()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 21.0 (Firefox 21.0 / Thunderbird 21.0 / SeaMonkey 2.18)</span>\n        </div><p></p>\n<div class=\"note\">\n <p><strong>Note:</strong> This method was removed in <span title=\"(Firefox 21.0 / Thunderbird 21.0 / SeaMonkey 2.18)\">Gecko 21.0</span> as part of <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=826409\" title=\"https://bugzilla.mozilla.org/show_bug.cgi?id=826409\">Bug 826409</a>.</p>\n</div>\n<p>The specified page and all its visits are about to be deleted.</p>\n<div class=\"note\">\n <strong>Note:</strong> The page does not necessarily have to have ever existed for this function to be called.</div>\n<p>Delete notifications aren't quite 100% accurate. Batch delete operations take place in two steps; the notifications come first, followed by a bulk delete. If an error occurs in between these two steps (for example, an out of memory error), then you may get a notification even though the page doesn't wind up getting deleted.</p>\n<div class=\"note\">\n <strong>Note:</strong> See <a href=\"#Using_onBeforeDeleteURI()_in_Gecko_1.9.1\">Using onBeforeDeleteURI() in Gecko 1.9.1</a> for how to implement this in <span title=\"(Firefox 3.5 / Thunderbird 3.0 / SeaMonkey 2.0)\">Gecko 1.9.1</span></div>\n<pre class=\"eval\">void onBeforeDeleteURI(\n  in nsIURI aURI,\n  in ACString aGUID\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aURI</code></dt>\n <dd>\n  The URI of the page about to be deleted.</dd>\n <dt>\n  <code>aGUID</code> </dt>\n <dd>\n  The unique ID associated with the page.</dd>\n</dl>\n<h3 id=\"onBeginUpdateBatch()\" name=\"onBeginUpdateBatch()\">onBeginUpdateBatch()</h3>\n<p>Notifies you that a batch of things are about to change. You should avoid doing any heavy-duty processing until <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINavHistoryObserver#onEndUpdateBatch()\">onEndUpdateBatch()</a></code> is called.</p>\n<pre class=\"eval\">void onBeginUpdateBatch();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"onClearHistory()\" name=\"onClearHistory()\">onClearHistory()</h3>\n<p>Called just prior to all of history being cleared.</p>\n<pre class=\"eval\">void onClearHistory();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"onDeleteURI()\" name=\"onDeleteURI()\">onDeleteURI()</h3>\n<p>The specified page and all its visits has been deleted.</p>\n<p>Delete notifications are not quite 100% accurate. Batch delete operations take place in two steps; the notifications come first, followed by a bulk delete. If an error occurs in between these two steps (for example, an out of memory error), then you may get a notification even though the page doesn't wind up getting deleted.</p>\n<div class=\"note\">\n <strong>Note:</strong> The page does not necessarily have to have ever existed for this function to be called.</div>\n<h6 id=\"onDeleteURI() Notes\" name=\"onDeleteURI() Notes\">Notes</h6>\n<p>The <code>removePagesByHost()</code> and <code>removePagesByTimeFrame()</code> functions call <code>beginUpdateBatch()</code> and <code>endUpdateBatch()</code> rather than <code>onClearHistory()</code> or <code>onDeleteURI()</code>.</p>\n<pre class=\"eval\">void onDeleteURI(\n  in nsIURI aURI,\n  in ACString aGUID\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aURI</code></dt>\n <dd>\n  The URI of the page that was deleted.</dd>\n <dt>\n  <code>aGUID</code> </dt>\n <dd>\n  The unique ID associated with the page.</dd>\n</dl>\n<p></p><h3 id=\"onDeleteVisits()\">onDeleteVisits()</h3><p></p>\n<p>Called when some visits of an history entry are expired.</p>\n<div class=\"note\">\n <strong>Note:</strong> When all visits for a page are expired and also the full page entry is expired, you will only get an onDeleteURI notification. If a page entry is removed, then you can be sure that we don't have anymore visits for it.</div>\n<pre class=\"eval\">void onDeleteVisits(\n  in nsIURI aURI,\n  in PRTime aVisitTime,\n  in ACString aGUID\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aURI</code></dt>\n <dd>\n  The URI of the page whose visits have been expired.</dd>\n <dt>\n  <code>aVisitTime</code></dt>\n <dd>\n  The largest visit time in microseconds that has been expired. We guarantee that we do not have any visit older than this date.</dd>\n <dt>\n  <code>aGUID</code> </dt>\n <dd>\n  The unique ID associated with the page.</dd>\n</dl>\n<h3 id=\"onEndUpdateBatch()\" name=\"onEndUpdateBatch()\">onEndUpdateBatch()</h3>\n<p>Called once a batch of updates is completed. Once this has been called, you can perform processing, user interface updates, and so forth. This is called sometime after <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINavHistoryObserver#onBeginUpdateBatch()\">onBeginUpdateBatch()</a></code>.</p>\n<pre class=\"eval\">void onEndUpdateBatch();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<h3 id=\"onPageChanged()\" name=\"onPageChanged()\">onPageChanged()</h3>\n<p>Some attribute on the specified page has changed.</p>\n<p>Note that for <code>TYPED</code> and <code>HIDDEN</code> pages, the page might not actually have been added yet. <em>This needs to be clarified; what are TYPED and HIDDEN?</em></p>\n<pre class=\"eval\">void onPageChanged(\n  in nsIURI aURI,\n  in unsigned long aWhat,\n  in AString aValue\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aURI</code></dt>\n <dd>\n  The URI of the page on which an attribute changed.</dd>\n <dt>\n  <code>aWhat</code></dt>\n <dd>\n  The attribute whose value changed.</dd>\n <dt>\n  <code>aValue</code></dt>\n <dd>\n  The attribute's new value.</dd>\n</dl>\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"onPageExpired()\">onPageExpired()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span>\n        </div><p></p>\n<div class=\"note\">\n <strong>Note:</strong> This method was removed in Gecko 2.0. Use <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINavHistoryObserver#onDeleteVisits()\">onDeleteVisits()</a></code> instead.</div>\n<p>Called when a history entry expires. This notification is sent to indicate that a specific visit has expired, and includes the time of that visit. When the last visit for a history entry expires, the history entry itself is deleted and the <code>aWholeEntry</code> parameter is <code>true</code>.</p>\n<p>If your code only cares about whole entries being deleted instead of individual visits, you can simply act only when <code>aWholeEntry</code> is <code>true</code>.</p>\n<p>It's possible for a history entry to be deleted even though it has no visits if something is out of sync after a bookmark with no visits is deleted; this results in the entire history entry being freed). In such cases, <code>aVisitTime</code> is 0.</p>\n<pre class=\"eval\">void onPageExpired(\n  in nsIURI aURI,\n  in PRTime aVisitTime,\n  in boolean aWholeEntry\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aURI</code></dt>\n <dd>\n  The URI of the page that expired.</dd>\n <dt>\n  <code>aVisitTime</code></dt>\n <dd>\n  The visit time that expired; this may (or may not) be 0 if a bookmark with no visits is deleted.</dd>\n <dt>\n  <code>aWholeEntry</code></dt>\n <dd>\n  <code>true</code> if this expiration will result in the entire history entry being deleted from the history store; if <code>false</code>, only the specified visit is being deleted.</dd>\n</dl>\n<h3 id=\"onTitleChanged()\" name=\"onTitleChanged()\">onTitleChanged()</h3>\n<p>Called whenever either the real title or the custom title of the page changes. Both titles are always included in this notification, even though only one is changed each time it is called, since often consumers will want to display the user title if available, falling back to the title specified by the page's <code>&lt;title&gt;</code> element if there is no user title.</p>\n<p>It's important to note that there is a difference between an empty title and a <code>null</code> title. An empty string means the title was specifically set to be nothing. <code>null</code> means the title was not set at all. From C++ code, use the <code>IsVoid()</code> and <code>SetIsvoid()</code> methods to see whether an empty string is \"<code>null</code>\" or not; in either case it will always be an empty string.</p>\n<pre class=\"eval\">void onTitleChanged(\n  in nsIURI aURI,\n  in AString aPageTitle\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aURI</code></dt>\n <dd>\n  The URI of the page whose title changed.</dd>\n <dt>\n  <code>aPageTitle</code></dt>\n <dd>\n  The new title of the page.</dd>\n</dl>\n<p></p><h3 id=\"onVisit()\">onVisit()</h3><p></p>\n<p>Called when a resource is visited. This is called the first time a resource (page, image, and so on.) is seen as well as every subsequent time.</p>\n<p>Normally, transition types of TRANSITION_EMBED (corresponding to images in a page, for example) are not displayed in history results (unless includeHidden is set). Many observers can ignore _EMBED notifications (which will comprise the majority of visit notifications) to save work.</p>\n<pre class=\"eval\">void onVisit(\n  in nsIURI aURI,\n  in long long aVisitID,\n  in PRTime aTime,\n  in long long aSessionID,\n  in long long aReferringID,\n  in unsigned long aTransitionType,\n  in ACString aGUID,\n  out unsigned long aAdded\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>aURI</code></dt>\n <dd>\n  The URI of the page being visited.</dd>\n <dt>\n  <code>aVisitID</code></dt>\n <dd>\n  ID of the visit that was just created.</dd>\n <dt>\n  <code>aTime</code></dt>\n <dd>\n  Time of the visit.</dd>\n <dt>\n  <code>aSessionID</code></dt>\n <dd>\n  The ID of one connected sequence of visits.</dd>\n <dt>\n  <code>aReferringID</code></dt>\n <dd>\n  The ID of the visit the user came from. 0 if empty.</dd>\n <dt>\n  <code>aTransitionType</code></dt>\n <dd>\n  The type of the item that is about to be removed; this is one of the <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsINavBookmarksService#Constants\">nsINavBookmarksService.Constants</a></code> defined in the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINavBookmarksService\" title=\"\">nsINavBookmarksService</a></code> interface.</dd>\n <dt>\n  <code>aGUID</code> </dt>\n <dd>\n  The unique ID associated with the page.</dd>\n <dt>\n  <code>aAdded</code></dt>\n <dd>\n  Incremented by query nodes when the visited uri belongs to them. If no such query exists, the history result creates a new query node dynamically. It is used in places views only and can be ignored.</dd>\n</dl>\n<h3 id=\"Using_onBeforeDeleteURI()_in_Gecko_1.9.1\" name=\"Using_onBeforeDeleteURI()_in_Gecko_1.9.1\">Using onBeforeDeleteURI() in Gecko 1.9.1</h3>\n<p>If you wish to support <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINavHistoryObserver#onBeforeDeleteURI()\">onBeforeDeleteURI()</a></code> in applications based on <span title=\"(Firefox 3.5 / Thunderbird 3.0 / SeaMonkey 2.0)\">Gecko 1.9.1</span>, you must implement your observer's <code>QueryInterface()</code> method to match on both <code>nsINavHistoryObserver</code> and <code>nsINavHistoryObserver_MOZILLA_1_9_1_ADDITIONS</code>, as shown below.</p>\n<pre class=\"brush: js\">QueryInterface: function(iid) {\n  if (iid.equals(Ci.nsINavHistoryObserver) ||\n      iid.equals(Ci.nsINavHistoryObserver_MOZILLA_1_9_1_ADDITIONS) ||\n      iid.equals(Ci.nsISupports)) {\n    return this;\n  }\n  throw Cr.NS_ERROR_NO_INTERFACE;\n}\n</pre>\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINavHistoryResult\" title=\"\">nsINavHistoryResult</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Editmonkey\">Editmonkey</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/philikon\">philikon</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/One\">One</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Swiney\">Swiney</a>",
    "title": "nsINavHistoryObserver"
}