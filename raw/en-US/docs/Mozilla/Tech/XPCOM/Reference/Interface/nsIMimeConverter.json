{
    "content": "<p>The <code>nsIMimeConverter</code> service allows you to convert headers into and out of MIME format.</p>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code></p>\n\n<p>Implemented by: <code>@mozilla.org/messenger/mimeconverter;1<span style=\"font-family: Verdana,Tahoma,sans-serif;\">.</span></code></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<p> </p>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>string <a href=\"/#encodeMIMEPartIIStr.28.29\" title=\"#encodeMIMEPartIIStr.28.29\">encodeMIMEPartIIStr</a>(in string header, in boolean structured, in string mailCharset, in long fieldnamelen, in long encodedwordsize);</code></td>\n  </tr>\n  <tr>\n   <td><code>string <a href=\"/#encodeMIMEPartIIStr_UTF8.28.29\" title=\"#encodeMIMEPartIIStr UTF8.28.29\">encodeMIMEPartIIStr_UTF8</a>(in AUTF8String header, in boolean structured, in string mailCharset, in long fieldnamelen, in long encodedwordsize);</code></td>\n  </tr>\n  <tr>\n   <td><code>string <a href=\"/#decodeMimeHeaderToCharPtr.28.29\" title=\"#decodeMimeHeaderToCharPtr.28.29\">decodeMimeHeaderToCharPtr</a>(in string header, in string default_charset, in boolean override_charset, in boolean eatContinuations);</code></td>\n  </tr>\n  <tr>\n   <td><code>AString <a href=\"/#decodeMimeHeader.28.29\" title=\"#decodeMimeHeader.28.29\">decodeMimeHeader</a>(</code><code>in string header, in string default_charset, in boolean override_charset, in boolean eatContinuations);</code></td>\n  </tr>\n  <tr>\n   <td><code>MimeEncoderData *<a href=\"/#B64EncoderInit.28.29\" title=\"#B64EncoderInit.28.29\">B64EncoderInit</a>(in MimeConverterOutputCallback output_fn, in void *closure);</code></td>\n  </tr>\n  <tr>\n   <td><code>MimeEncoderData *<a href=\"/#QPEncoderInit.28.29\" title=\"#QPEncoderInit.28.29\">QPEncoderInit</a></code><code>(in MimeConverterOutputCallback output_fn, in void *closure);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"/#EncoderDestroy.28.29\" title=\"#EncoderDestroy.28.29\">EncoderDestroy</a>(in MimeEncoderData *data, in boolean abort_p);</code></td>\n  </tr>\n  <tr>\n   <td><code>long <a href=\"/#EncoderWrite.28.29\" title=\"#EncoderWrite.28.29\">EncoderWrite</a>(in MimeEncoderData *data, in string buffer, in long size);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<p> </p>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"getProperty.28.29\" name=\"getProperty.28.29\">encodeMimePartIIStr()</h3>\n\n<p>An variant of <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMimeConverter#encodeMimePartIIStr_UTF8()\">encodeMimePartIIStr_UTF8()</a></code> which treats the header as written in the given charset. This should only be used by native code, as xpconnect translation causes it to not work properly.</p>\n\n<pre class=\"eval\">string encodeMimePartIIStr(in string  header,\n                           in boolean structured,\n                           in string  mailCharset,\n                           in long    fieldnamelen,\n                           in long    encodedWordSize);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>propertyName</code></dt>\n <dd>The name of the property to retrieve.</dd>\n</dl>\n\n<h6 id=\"Return_Value\" name=\"Return_Value\">Return Value</h6>\n\n<p>The value of the property.</p>\n\n<h3 id=\"setProperty.28.29\" name=\"setProperty.28.29\">encodeMimePartIIStr_UTF8()</h3>\n\n<p>Encodes a string into a MIME-encoded form according to RFC 2047.</p>\n\n<pre class=\"eval\">string encodeMimePartIIStr_UTF8(in AUTF8String header,\n                                in boolean     structured,\n                                in string      mailCharset,\n                                in long        fieldnamelen,\n                                in long        encodedWordSize);\n</pre>\n\n<h6 id=\"Parameters_2\" name=\"Parameters_2\">Parameters</h6>\n\n<dl>\n <dt><code>header</code></dt>\n <dd>The string to encode into the MIME-encoded form.</dd>\n <dt><code>structured</code></dt>\n <dd>Whether or not this string may contain &lt;&gt; blocks which should not be encoded (e.g., the From and To headers).</dd>\n <dt><code>mailCharset</code></dt>\n <dd>The charset to encode into.</dd>\n <dt><code>fieldnamelen</code></dt>\n <dd>The length of the header field including the colon and space (\": \").</dd>\n <dt><code>encodedWordSize</code></dt>\n <dd>The maximum line length of the encoded string.</dd>\n</dl>\n\n<h3 id=\"setStringProperty.28.29\" name=\"setStringProperty.28.29\">decodeMimeHeaderToCharPtr()</h3>\n\n<pre class=\"eval\"> void setStringProperty(in string propertyName,\n                        in string propertyValue);\n</pre>\n\n<h6 id=\"Parameters_3\" name=\"Parameters_3\">Parameters</h6>\n\n<dl>\n <dt><code>propertyName</code></dt>\n <dd>The name of the property to set.</dd>\n <dt><code>propertyValue</code></dt>\n <dd>The value of the property.</dd>\n</dl>\n\n<h3 id=\"getStringProperty.28.29\" name=\"getStringProperty.28.29\">decodeMimeHeader()</h3>\n\n<pre class=\"eval\"> string getStringProperty(in string propertyName);\n</pre>\n\n<h6 id=\"Parameters_4\" name=\"Parameters_4\">Parameters</h6>\n\n<dl>\n <dt><code>propertyName</code></dt>\n <dd>The name of the property to retrieve.</dd>\n</dl>\n\n<h6 id=\"Return_Value_2\" name=\"Return_Value_2\">Return Value</h6>\n\n<p>The value of the property.</p>\n\n<h3 id=\"getUint32Property.28.29\" name=\"getUint32Property.28.29\">B64EncoderInit()</h3>\n\n<p>Get an integer property. Usually you would use this to store you own properties.</p>\n\n<pre class=\"eval\"> unsigned long getUint32Property(in string propertyName);\n</pre>\n\n<h6 id=\"Parameters_5\" name=\"Parameters_5\">Parameters</h6>\n\n<dl>\n <dt><code>propertyName</code></dt>\n <dd>The name of the property to retrieve. <a href=\"/en/Thunderbird\" title=\"en/Thunderbird\">Thunderbird</a> stored Uint32 properties (not a complete list):\n <dl>\n  <dt><code>indexed</code></dt>\n  <dd>Used for Spotlight integration on <a href=\"/en/OSX\" title=\"en/OSX\">OSX</a>.</dd>\n  <dt><code>notAPhishMessage</code></dt>\n  <dd>Indicates whether phisihing filters have been run on a message yet.</dd>\n </dl>\n </dd>\n</dl>\n\n<p> </p>\n\n<h6 id=\"Return_Value_3\" name=\"Return_Value_3\">Return Value</h6>\n\n<p>The value of the property.</p>\n\n<h3 id=\"setUint32Property.28.29\" name=\"setUint32Property.28.29\">QPEncoderInit()</h3>\n\n<pre class=\"eval\"> void setUint32Property(in string propertyName,\n                        in unsigned long propertyVal);\n</pre>\n\n<h6 id=\"Parameters_6\" name=\"Parameters_6\">Parameters</h6>\n\n<dl>\n <dt><code>propertyName</code></dt>\n <dd>The name of the property to set.</dd>\n <dt><code>propertyVal</code></dt>\n <dd>The value of the property.</dd>\n</dl>\n\n<h3 id=\"markRead.28.29\" name=\"markRead.28.29\">EncoderDestroy()</h3>\n\n<p>Marks this header as read. <a href=\"/en/Thunderbird\" title=\"en/Thunderbird\">Thunderbird</a> provides a utility function which performs this for the currently selected message: <a class=\"external\" href=\"http://mxr.mozilla.org/mozilla/source/mail/base/content/mailWindowOverlay.js#2629\">MarkCurrentMessageAsRead()</a>.</p>\n\n<pre class=\"eval\"> void markRead(in boolean read);\n</pre>\n\n<h6 id=\"Parameters_7\" name=\"Parameters_7\">Parameters</h6>\n\n<dl>\n <dt><code>read</code></dt>\n <dd>If <code>true</code>, mark as read. If <code>false</code> mark as undread.</dd>\n</dl>\n\n<h3 id=\"markFlagged.28.29\" name=\"markFlagged.28.29\">EncoderWrite()</h3>\n\n<pre class=\"eval\"> void markFlagged(in boolean flagged);\n</pre>\n\n<h6 id=\"Parameters_8\" name=\"Parameters_8\">Parameters</h6>\n\n<dl>\n <dt><code>flagged</code></dt>\n <dd>If <code>true</code>, mark as flagged. If <code>false</code> remove flag.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>",
    "title": "nsIMimeConverter"
}