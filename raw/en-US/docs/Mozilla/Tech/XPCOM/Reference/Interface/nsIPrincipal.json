{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/caps/nsIPrincipal.idl\" rel=\"custom\">caps/nsIPrincipal.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nProvides the interface to a principal, which represents a security context. On the web, for example, a typical principal is comprised of an URL scheme, host, and port.\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISerializable\" title=\"\">nsISerializable</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span></div>\n</div><p></p>\n<p>For details on principals, how they work, and how to get the appropriate one, see <a href=\"/en/Security_check_basics\" title=\"en/Security check basics\">Security check basics</a>.</p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>short <a href=\"#canEnableCapability()\">canEnableCapability</a>(in string capability);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#checkMayLoad()\">checkMayLoad</a>(in nsIURI uri, in boolean report);</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#disableCapability()\">disableCapability</a>(in string capability, inout voidPtr annotation);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#enableCapability()\">enableCapability</a>(in string capability, inout voidPtr annotation);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#equals()\">equals</a>(in nsIPrincipal other);</code></td>\n  </tr>\n  <tr>\n   <td><code>JSPrincipals <a href=\"#getJSPrincipals()\">getJSPrincipals</a>(in JSContext cx);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#getPreferences()\">getPreferences</a>(out string prefBranch, out string id, out string subjectName, out string grantedList, out string deniedList, out boolean isTrusted);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#isCapabilityEnabled()\">isCapabilityEnabled</a>(in string capability, in voidPtr annotation);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#revertCapability()\">revertCapability</a>(in string capability, inout voidPtr annotation);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#setCanEnableCapability()\">setCanEnableCapability</a>(in string capability, in short canEnable);</code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#subsumes()\">subsumes</a>(in nsIPrincipal other);</code> </td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>certificate</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code></code></td>\n   <td>The <code>certificate</code> associated with this principal, if any. If there isn't one, this will return <code>null</code>. Getting this attribute never throws. <strong>Read only.</strong> </td>\n  </tr>\n  <tr>\n   <td><code>certificateID</code></td>\n   <td><code><a href=\"/en/string\" title=\"en/string\">string</a></code></td>\n   <td>The <code>fingerprint</code> ID of this principal's <code>certificate</code>. Throws if there is no <code>certificate</code> associated with this principal. <strong>Read only.</strong> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\">Obsolete since Gecko 1.8</span></td>\n  </tr>\n  <tr>\n   <td><code>commonName</code></td>\n   <td><code><a href=\"/en/string\" title=\"en/string\">string</a></code></td>\n   <td>The common name for the <code>certificate</code>. This pertains to the <code>certificate</code> authority organization. Throws if there is no <code>certificate</code> associated with this principal. <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\">Obsolete since Gecko 1.8</span></td>\n  </tr>\n  <tr>\n   <td><code>csp</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIContentSecurityPolicy\" title=\"\">nsIContentSecurityPolicy</a></code></code></td>\n   <td>A Content Security Policy associated with this principal. <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>domain</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code></code></td>\n   <td>The <code>domain</code> <code>URI</code> to which this principal pertains. This is congruent with HTMLDocument.<code>domain</code>, and may be <code>null</code>. Setting this has no effect on the <code>URI</code>. <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>fingerprint</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>The <code>fingerprint</code> ID of this principal's <code>certificate</code>. Throws if there is no <code>certificate</code> associated with this principal. <strong>Read only.</strong> </td>\n  </tr>\n  <tr>\n   <td><code>hasCertificate</code></td>\n   <td><code><a href=\"/en/boolean\" title=\"en/boolean\">boolean</a></code></td>\n   <td>Whether this principal is associated with a <code>certificate</code>. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>hashValue</code></td>\n   <td><code><a href=\"/en/unsigned_long\" title=\"en/unsigned long\">unsigned long</a></code></td>\n   <td>Returns a hash value for the principal. <strong>Read only.</strong> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>origin</code></td>\n   <td><code><a href=\"/en/string\" title=\"en/string\">string</a></code></td>\n   <td>The <code>origin</code> of this principal's codebase <code>URI</code>. An <code>origin</code> is defined as: scheme + host + port. <strong>Read only.</strong></td>\n  </tr>\n  <tr>\n   <td><code>prettyName</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The pretty name for the <code>certificate</code>. This sort of (but not really) identifies the subject of the <code>certificate</code> (the entity that stands behind the <code>certificate</code>). Note that this may be empty; prefer to get the <code>certificate</code> itself and get this information from it, since that may provide more information.</p>\n    Throws if there is no <code>certificate</code> associated with this principal. <strong>Read only.</strong> </td>\n  </tr>\n  <tr>\n   <td><code>securityPolicy</code></td>\n   <td><code><a href=\"/en/voidPtr\" title=\"en/voidPtr\">voidPtr</a></code></td>\n   <td>The <code>domain</code> security policy of the principal. <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></td>\n  </tr>\n  <tr>\n   <td><code>subjectName</code></td>\n   <td><code><a href=\"/en/AUTF8String\" title=\"en/AUTF8String\">AUTF8String</a></code></td>\n   <td>\n    <p>The subject name for the <code>certificate</code>. This actually identifies the subject of the <code>certificate</code>. This may well not be a string that would mean much to a typical user on its own (e.g. it may have a number of different names all concatenated together with some information on what they mean in between).</p>\n    Throws if there is no <code>certificate</code> associated with this principal. <strong>Read only.</strong> </td>\n  </tr>\n  <tr>\n   <td><code>URI</code></td>\n   <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code></code></td>\n   <td>\n    <p>The codebase <code>URI</code> to which this principal pertains. This is generally the document <code>URI</code>. <strong>Read only.</strong></p>\n    <div class=\"note\">\n     <strong>Note:</strong> This wasn't accessible by scripts prior to Gecko 2.0.</div>\n   </td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n<h3 id=\"Principal_capability_constants\">Principal capability constants</h3>\n<p>These values indicate the capabilities of a principal. The order is significant; if an operation is performed on a set of capabilities, the minimum is computed.</p>\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Constant</td>\n   <td class=\"header\">Value</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>ENABLE_DENIED</code></td>\n   <td><code>1</code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code>ENABLE_UNKNOWN</code></td>\n   <td><code>2</code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code>ENABLE_WITH_USER_PERMISSION</code></td>\n   <td><code>3</code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code>ENABLE_GRANTED</code></td>\n   <td><code>4</code></td>\n   <td> </td>\n  </tr>\n </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"canEnableCapability\">canEnableCapability</h3></div><p></p>\n<pre class=\"eval\">short canEnableCapability(\n  in string capability\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>capability</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>Missing Description</p>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n <dt>\n  <code>Missing Exception</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<p></p><h3 id=\"checkMayLoad()\">checkMayLoad()</h3><p></p>\n<p>Checks whether this principal is allowed to load the network resource located at the given <code>URI</code> under the same-<code>origin</code> policy. This means that codebase principals are only allowed to load resources from the same <code>domain</code>, the system principal is allowed to load anything, and <code>null</code> principals are not allowed to load anything.</p>\n<div class=\"note\">\n <strong>Note:</strong> Prior to Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1), this was not available to scripts.</div>\n<p>If the load is allowed this function does nothing. If the load is not allowed the function throws <code>NS_ERROR_DOM_BAD_URI</code>.</p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> Other policies might override this, such as the Access-Control specification.</div><p></p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> The '<code>domain</code>' attribute has no effect on the behaviour of this function.</div><p></p>\n<pre class=\"eval\">void checkMayLoad(\n  in nsIURI uri,\n  in boolean report\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>uri</code></dt>\n <dd>\n  Missing Description</dd>\n <dt>\n  <code>report</code></dt>\n <dd>\n  If <code>true</code>, will report a warning to the console service if the load is not allowed.</dd>\n</dl>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n <dt>\n  <code>NS_ERROR_DOM_BAD_URI</code></dt>\n <dd>\n  The load is not permitted.</dd>\n</dl>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"disableCapability\">disableCapability</h3></div><p></p>\n<pre class=\"eval\">void disableCapability(\n  in string capability,\n  inout voidPtr annotation\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>capability</code></dt>\n <dd>\n  Missing Description</dd>\n <dt>\n  <code>annotation</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"enableCapability\">enableCapability</h3></div><p></p>\n<pre class=\"eval\">void enableCapability(\n  in string capability,\n  inout voidPtr annotation\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>capability</code></dt>\n <dd>\n  Missing Description</dd>\n <dt>\n  <code>annotation</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h3 id=\"equals()\" name=\"equals()\">equals()</h3>\n<p>Returns whether the other principal is equivalent to this principal. Principals are considered equal if they are the same principal, they have the same <code>origin</code>, or have the same <code>certificate</code> <code>fingerprint</code> ID.</p>\n<pre class=\"eval\">boolean equals(\n  in nsIPrincipal other\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>other</code></dt>\n <dd>\n  The other principal to compare against.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if the two principals are equivalent; otherwise <code>false</code>.</p>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"getJSPrincipals\">getJSPrincipals</h3></div><p></p>\n<p>Returns the JS equivalent of the principal.</p>\n<pre class=\"eval\">JSPrincipals getJSPrincipals(\n  in JSContext cx\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n</dl>\n<dl>\n <dt>\n  <code>cx</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>Missing Description</p>\n<h3 id=\"getPreferences()\" name=\"getPreferences()\">getPreferences()</h3>\n<p>Returns the security preferences associated with this principal.</p>\n<pre class=\"eval\">void getPreferences(\n  out string prefBranch,\n  out string id,\n  out string subjectName,\n  out string grantedList,\n  out string deniedList,\n  out boolean isTrusted\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>prefBranch</code></dt>\n <dd>\n  On return, contains the preference branch to which the preferences pertain.</dd>\n <dt>\n  <code>id</code></dt>\n <dd>\n  A semi-unique ID relating to either the fingerprint or the origin.</dd>\n <dt>\n  <code>subjectName</code></dt>\n <dd>\n  A name identifying the entity the principal represents; this may be an empty string.</dd>\n <dt>\n  <code>grantedList</code></dt>\n <dd>\n  Space-delineated list of capabilities which are explicitly granted by a preference.</dd>\n <dt>\n  <code>deniedList</code></dt>\n <dd>\n  Space-delineated list of capabilities which are explicitly denied by a preference.</dd>\n <dt>\n  <code>isTrusted</code></dt>\n <dd>\n  <code>true</code> if the certificate is a codebase trusted one.</dd>\n</dl>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"isCapabilityEnabled\">isCapabilityEnabled</h3></div><p></p>\n<pre class=\"eval\">boolean isCapabilityEnabled(\n  in string capability,\n  in voidPtr annotation\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>capability</code></dt>\n <dd>\n  Missing Description</dd>\n <dt>\n  <code>annotation</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>Missing Description</p>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n <dt>\n  <code>Missing Exception</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"revertCapability\">revertCapability</h3></div><p></p>\n<pre class=\"eval\">void revertCapability(\n  in string capability,\n  inout voidPtr annotation\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>capability</code></dt>\n <dd>\n  Missing Description</dd>\n <dt>\n  <code>annotation</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n <dt>\n  <code>Missing Exception</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<p></p><div><span class=\"indicatorInHeadline noscript noscriptMethod\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span><h3 id=\"setCanEnableCapability\">setCanEnableCapability</h3></div><p></p>\n<pre class=\"eval\">void setCanEnableCapability(\n  in string capability,\n  in short canEnable\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>capability</code></dt>\n <dd>\n  Missing Description</dd>\n <dt>\n  <code>canEnable</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n <dt>\n  <code>Missing Exception</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<p></p><h3 id=\"subsumes()\">subsumes()</h3><p></p>\n<p>Returns whether the other principal is equal to or weaker than this principal. Principals are equal if they are the same object, they have the same <code>origin</code>, or they have the same <code>certificate</code> ID. A principal always subsumes itself.</p>\n<div class=\"note\">\n <strong>Note:</strong> Prior to Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1), this was not available to scripts.</div>\n<p>The system principal subsumes itself and all other principals.</p>\n<p>A <code>null</code> principal (corresponding to an unknown, hence assumed minimally privileged, security context) is not equal to any other principal (including other <code>null</code> principals), and therefore does not subsume anything but itself.</p>\n<p>Both codebase and <code>certificate</code> principals are subsumed by the system principal, but no codebase or <code>certificate</code> principal yet <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrincipal#subsumes()\">subsumes()</a></code> any other codebase or <code>certificate</code> principal. This may change in a future release; note that <code>nsIPrincipal</code> is unfrozen, not slated to be frozen.</p>\n<p>XXXbz except see bug 147145!</p>\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> For the future: Perhaps we should consider a <code>certificate</code> principal for a given <code>URI</code> subsuming a codebase principal for the same <code>URI</code>? Not sure what the immediate benefit would be, but I think the setup could make some code (e.g. MaybeDowngradeToCodebase) clearer.</div><p></p>\n<pre class=\"eval\">boolean subsumes(\n  in nsIPrincipal other\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n <dt>\n  <code>other</code></dt>\n <dd>\n  Missing Description</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p><code>true</code> if this principal subsumes the specified principal; otherwise <code>false</code>.</p>\n<h2 id=\"See_also\">See also</h2>\n<ul>\n <li><a href=\"/en/Security_check_basics\" title=\"en/Security check basics\">Security check basics</a></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>",
    "title": "nsIPrincipal"
}