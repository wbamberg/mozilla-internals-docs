{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/netwerk/base/public/nsIBrowserSearchService.idl\" rel=\"custom\">netwerk/base/public/nsIBrowserSearchService.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 5.714285714285714%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 5.714285714285714%; background: #00dd00; position: absolute; width: 94.28571428571429%;\" title=\"Introduced in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Gecko 1.8</div>\n\n    <div style=\"height: 8px; top: 16px; left: 10.928571428571429%; background: #eeee00; position: absolute; width: 1%; border-radius: 4px; -webkit-border-radius: 4px;\" title=\"Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\"></div>\n    \n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)</span></div>\n</div><p></p>\n<p>Implemented by: <code>@mozilla.org/browser/search-service;1</code>. To access this service, use:</p>\n<pre class=\"eval\">var browserSearchService = Components.classes[\"@mozilla.org/browser/search-service;1\"]\n                           .getService(Components.interfaces.nsIBrowserSearchService);\n</pre>\n<div class=\"warning\">\n  <p><a name=\"async_warning\"></a>Attempting to use any method or attribute of this interface before <code>init()</code> has completed will force the service to fall back to a slower, synchronous, initialization. This is not an issue if your code is executed in reaction to a user interaction, as initialization is complete by then, but this is an issue if your code is executed during startup.</p>\n  <p>If you need to write code that is executed during startup and makes use of nsIBrowserSearchService, you should make sure that this code is executed from the callback to <code>init()</code>.</p>\n</div>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <td><code>void <a href=\"#addEngine()\">addEngine</a>(in AString engineURL, in long dataType, in AString iconURL, in boolean confirm, [optional] in nsISearchInstallCallback callback);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#addEngineWithDetails()\">addEngineWithDetails</a>(in AString name, in AString iconURL, in AString alias, in AString description, in AString method, in AString url);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#getDefaultEngines()\">getDefaultEngines</a>([optional] out unsigned long engineCount, [retval, array, size_is(engineCount)] out nsISearchEngine engines);</code></td>\n    </tr>\n    <tr>\n      <td><code>nsISearchEngine <a href=\"#getEngineByAlias()\">getEngineByAlias</a>(in AString alias);</code></td>\n    </tr>\n    <tr>\n      <td><code>nsISearchEngine <a href=\"#getEngineByName()\">getEngineByName</a>(in AString aEngineName);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#getEngines()\">getEngines</a>([optional] out unsigned long engineCount, [retval, array, size_is(engineCount)] out nsISearchEngine engines);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#getVisibleEngines()\">getVisibleEngines</a>([optional] out unsigned long engineCount, [retval, array, size_is(engineCount)] out nsISearchEngine engines);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#init\" title=\"#init\">init</a>([optional] in nsIBrowserSearchInitObserver observer</code><code>);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#moveEngine()\">moveEngine</a>(in nsISearchEngine engine, in long newIndex);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#removeEngine()\">removeEngine</a>(in nsISearchEngine engine);</code></td>\n    </tr>\n    <tr>\n      <td><code>void <a href=\"#restoreDefaultEngines()\">restoreDefaultEngines</a>();</code></td>\n    </tr>\n  </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\">\n  <tbody>\n    <tr>\n      <td class=\"header\">Attribute</td>\n      <td class=\"header\">Type</td>\n      <td class=\"header\">Description</td>\n    </tr>\n    <tr>\n      <td><code>currentEngine</code></td>\n      <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISearchEngine\" title=\"\">nsISearchEngine</a></code></code></td>\n      <td>The currently active search engine. May be <code>null</code> if there are no visible search engines.</td>\n    </tr>\n    <tr>\n      <td><code>defaultEngine</code></td>\n      <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISearchEngine\" title=\"\">nsISearchEngine</a></code></code></td>\n      <td>The default search engine. Returns the first visible engine if the default engine is hidden. May be <code>null</code> if there are no visible search engines. <strong>Read only.</strong></td>\n    </tr>\n    <tr>\n      <td><code>originalDefaultEngine</code></td>\n      <td><code><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISearchEngine\" title=\"\">nsISearchEngine</a></code></code></td>\n      <td>The original default engine. This differs from the \"<code>defaultEngine</code>\" attribute in that it always returns a given build's default engine, regardless of whether it is hidden. <strong>Read only.</strong> </td>\n    </tr>\n  </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"addEngine()\" name=\"addEngine()\">addEngine()</h3>\n<p>Adds a new search engine from the file at the supplied URI, optionally asking the user for confirmation first. If a confirmation dialog is shown, it will offer the option to begin using the newly added engine right away; if no confirmation dialog is shown, the new engine will be used right away automatically.</p>\n<pre class=\"eval\">void addEngine(\n  in AString engineURL,\n  in long dataType,\n  in AString iconURL,\n  in boolean confirm,\n  [optional] in nsISearchInstallCallback callback\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>engineURL</code></dt>\n  <dd>\n    The URL to the search engine's description file.</dd>\n  <dt>\n    <code>dataType</code></dt>\n  <dd>\n    An integer representing the plugin file format. Must be one of the supported search engine data types defined above.</dd>\n  <dt>\n    <code>iconURL</code></dt>\n  <dd>\n    A URL string to an icon file to be used as the search engine's icon. This value may be overridden by an icon specified in the engine description file.</dd>\n  <dt>\n    <code>confirm</code></dt>\n  <dd>\n    A boolean value indicating whether the user should be asked for confirmation before this engine is added to the list. If this value is <code>false</code>, the engine will be added to the list upon successful load, but it will not be selected as the current engine.</dd>\n  <dt>\n    <code>callback</code></dt>\n  <dd>\n    A nsISearchInstallCallback that will be notified when the addition is complete, or if the addition fails. It will not be called if <code>addEngine</code> throws an exception.</dd>\n</dl>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n  <dt>\n    <code>NS_ERROR_FAILURE</code></dt>\n  <dd>\n    If the type is invalid, or if the description file cannot be successfully loaded.</dd>\n</dl>\n<h3 id=\"addEngineWithDetails()\" name=\"addEngineWithDetails()\">addEngineWithDetails()</h3>\n<p>Adds a new search engine, without asking the user for confirmation and without starting to use it right away.</p>\n<pre class=\"eval\">void addEngineWithDetails(\n  in AString name,\n  in AString iconURL,\n  in AString alias,\n  in AString description,\n  in AString method,\n  in AString url\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>name</code></dt>\n  <dd>\n    The search engine's name. Must be unique. Must not be <code>null</code>.</dd>\n  <dt>\n    <code>iconURL</code></dt>\n  <dd>\n    Optional: A URL string pointing to the icon to be used to represent the engine.</dd>\n  <dt>\n    <code>alias</code></dt>\n  <dd>\n    Optional: A unique shortcut that can be used to retrieve the search engine.</dd>\n  <dt>\n    <code>description</code></dt>\n  <dd>\n    Optional: a description of the search engine.</dd>\n  <dt>\n    <code>method</code></dt>\n  <dd>\n    The HTTP request method used when submitting a search query. Must be a case insensitive value of either \"get\" or \"post\".</dd>\n  <dt>\n    <code>url</code></dt>\n  <dd>\n    The URL to which search queries should be sent. Must not be <code>null</code>.</dd>\n</dl>\n<h3 id=\"getDefaultEngines()\" name=\"getDefaultEngines()\">getDefaultEngines()</h3>\n<p>Returns an array of all default search engines. This includes all loaded engines that aren't in the user's profile directory (NS_APP_USER_SEARCH_DIR).</p>\n<pre class=\"eval\">void getDefaultEngines(\n  [optional] out unsigned long engineCount,\n  [retval, array, size_is(engineCount)] out nsISearchEngine engines\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>engineCount</code></dt>\n  <dd>\n    The number of default search engines.</dd>\n  <dt>\n    <code>engines</code></dt>\n  <dd>\n    An array of the default <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISearchEngine\" title=\"\">nsISearchEngine</a></code>s.</dd>\n</dl>\n<h3 id=\"getEngineByAlias()\" name=\"getEngineByAlias()\">getEngineByAlias()</h3>\n<p>Returns an engine with the specified alias.</p>\n<pre class=\"eval\">nsISearchEngine getEngineByAlias(\n  in AString alias\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>alias</code></dt>\n  <dd>\n    The search engine's alias.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISearchEngine\" title=\"\">nsISearchEngine</a></code></p>\n<h3 id=\"getEngineByName()\" name=\"getEngineByName()\">getEngineByName()</h3>\n<p>Returns an engine with the specified name.</p>\n<pre class=\"eval\">nsISearchEngine getEngineByName(\n  in AString aEngineName\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>aEngineName</code></dt>\n  <dd>\n    The name of the engine.</dd>\n</dl>\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n<p>The specified <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISearchEngine\" title=\"\">nsISearchEngine</a></code>.</p>\n<h3 id=\"getEngines()\" name=\"getEngines()\">getEngines()</h3>\n<p>Returns an array of all installed search engines.</p>\n<pre class=\"eval\">void getEngines(\n  [optional] out unsigned long engineCount,\n  [retval, array, size_is(engineCount)] out nsISearchEngine engines\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>engineCount</code></dt>\n  <dd>\n    The number of all installed search engines.</dd>\n  <dt>\n    <code>engines</code></dt>\n  <dd>\n    An array of the all installed <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISearchEngine\" title=\"\">nsISearchEngine</a></code>s.</dd>\n</dl>\n<h3 id=\"getVisibleEngines()\" name=\"getVisibleEngines()\">getVisibleEngines()</h3>\n<p>Returns an array of all installed search engines whose hidden attribute is <code>false</code>.</p>\n<pre class=\"eval\">void getVisibleEngines(\n  [optional] out unsigned long engineCount,\n  [retval, array, size_is(engineCount)] out nsISearchEngine engines\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>engineCount</code></dt>\n  <dd>\n    The number of hidden installed search engines.</dd>\n  <dt>\n    <code>engines</code></dt>\n  <dd>\n    An array of the hidden installed <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISearchEngine\" title=\"\">nsISearchEngine</a></code>s.</dd>\n</dl>\n<h3 id=\"moveEngine()\" name=\"moveEngine()\"><a name=\"init\">init</a>()</h3>\n<p>Initialize the service, or if the service is already initialized, do nothing.</p>\n<div class=\"warning\">\n  <p>This method was introduced in Firefox 16.</p>\n</div>\n<div class=\"warning\">\n  <p><span style=\"line-height: 1.572;\">Attempting to call any method of this interface before </span><code style=\"font-size: 14px;\">init()</code><span style=\"line-height: 1.572;\"> has completed will force the service to fall back to a slower, synchronous, initialization.</span></p>\n  <p>If your code requires nsIBrowserSearchService and is executed during startup, you should make sure that this code is executed from the callback to <code>init()</code>.</p>\n</div>\n<pre>void init(\n  [optional] in nsIBrowserSearchInitObserver observer\n);\n</pre>\n<h6 id=\"Parameters_2\">Parameters</h6>\n<dl>\n  <dt>\n    observer</dt>\n  <dd>\n    If specified, a callback called once initialization is complete, or immediately, if the service has already been initialized. In JavaScript, this observer can be a regular function.</dd>\n</dl>\n<h3 id=\"moveEngine()\" name=\"moveEngine()\">moveEngine()</h3>\n<p>Moves a visible search engine.</p>\n<pre class=\"eval\">void moveEngine(\n  in nsISearchEngine engine,\n  in long newIndex\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>engine</code></dt>\n  <dd>\n    The engine to move.</dd>\n  <dt>\n    <code>newIndex</code></dt>\n  <dd>\n    The engine's new index in the set of visible engines.</dd>\n</dl>\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n<dl>\n  <dt>\n    <code>NS_ERROR_FAILURE</code></dt>\n  <dd>\n    If newIndex is out of bounds, or if engine is hidden.</dd>\n</dl>\n<h3 id=\"removeEngine()\" name=\"removeEngine()\">removeEngine()</h3>\n<p>Removes the search engine. If the search engine is installed in a global location, this will just hide the engine. If the engine is in the user's profile directory, it will be removed from disk.</p>\n<pre class=\"eval\">void removeEngine(\n  in nsISearchEngine engine\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl>\n  <dt>\n    <code>engine</code></dt>\n  <dd>\n    The engine to remove.</dd>\n</dl>\n<h3 id=\"restoreDefaultEngines()\" name=\"restoreDefaultEngines()\">restoreDefaultEngines()</h3>\n<p>Un-hides all engines installed in the directory corresponding to the directory service's NS_APP_SEARCH_DIR key. (that is the set of engines returned by <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIBrowserSearchService#getDefaultEngines()\">getDefaultEngines()</a></code>)</p>\n<pre class=\"eval\">void restoreDefaultEngines();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/liuche\">liuche</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ajcrews\">ajcrews</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Yoric\">Yoric</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "nsIBrowserSearchService"
}