{
    "content": "<p> </p><div class=\"blockIndicator obsolete obsoleteHeader\"><p><strong><span class=\"icon-only-inline\" title=\"This is an obsolete API and is no longer guaranteed to work.\"><i class=\"icon-trash\"> </i></span> Obsolete</strong><br>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p></div><p></p>\n<div class=\"warning\"><strong>Warning:</strong> This interface was removed from Firefox 3 and is no longer available.</div>\n<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/extensions/xml-rpc/idl/nsIXmlRpcClient.idl\" rel=\"custom\">extensions/xml-rpc/idl/nsIXmlRpcClient.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\n<span> </span>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)</span></div>\n</div><p></p>\n<p>Inherits from: <a href=\"/en/nsISupports\" title=\"en/nsISupports\">nsISupports</a></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#init.28.29\">init</a>(in string serverURL);</code></td> </tr> <tr> <td><code>void <a href=\"#setAuthentication.28.29\">setAuthentication</a>(in string username, in string password);</code></td> </tr> <tr> <td><code>void <a href=\"#clearAuthentication.28.29\">clearAuthentication</a>(in string username, in string password);</code></td> </tr> <tr> <td><code>void <a href=\"#setEncoding.28.29\">setEncoding</a>(in string encoding);</code></td> </tr> <tr> <td><code>void <a href=\"#createType.28.29\">setEncoding</a>(in unsigned long type, out nsIIDRef uuid, out nsQIResult result);</code></td> </tr> <tr> <td><code>void <a href=\"#asyncCall.28.29\">asyncCall</a> (in nsIXmlRpcClientListener listener, in nsISupports ctxt, in string methodName, in nsISupports arguments, in PRUInt32 count);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Attribute</td> <td class=\"header\">Type</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>serverURL</code></td> <td><code>readonly nsIURL</code></td> <td>The URL of the XML-RPC server</td> </tr> <tr> <td><code>inProgress</code></td> <td><code>readonly boolean</code></td> <td>Whether or not a call is in progress</td> </tr> <tr> <td><code>fault</code></td> <td><code>readonly nsIXmlRpcFault</code></td> <td>The most recent XML-RPC fault from returned from this server. null if the last call didn't return an XML-RPC fault.</td> </tr> <tr> <td><code>result</code></td> <td><code>readonly nsISupports</code></td> <td>The most recent XML-RPC call result returned from this server. null if the last call didn't return a valid result.</td> </tr> <tr> <td><code>responseStatus</code></td> <td><code>readonly unsigned long</code></td> <td>The most recent HTTP status code returned from this server. null if the server was unreachable or not yet contacted.</td> </tr> <tr> <td><code>responseString</code></td> <td><code>readonly unsigned long</code></td> <td>The most recent HTTP status code returned from this server. null if the server was unreachable or not yet contacted.</td> </tr> </tbody>\n</table>\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Constant</td> <td class=\"header\">Type</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>INT</code></td> <td><code>unsigned long</code></td> <td>nsISupportsPRInt32</td> </tr> <tr> <td><code>BOOLEAN</code></td> <td><code>unsigned long</code></td> <td>nsISupportsPRBool</td> </tr> <tr> <td><code>STRING</code></td> <td><code>unsigned long</code></td> <td>nsISupportsCString</td> </tr> <tr> <td><code>DOUBLE</code></td> <td><code>unsigned long</code></td> <td>nsISupportsDouble</td> </tr> <tr> <td><code>DATETIME</code></td> <td><code>unsigned long</code></td> <td>nsISupportsPRTime</td> </tr> <tr> <td><code>ARRAY</code></td> <td><code>readonly unsigned long</code></td> <td>nsISupportsArray</td> </tr> <tr> <td><code>STRUCT</code></td> <td><code>readonly unsigned long</code></td> <td>nsISupportsDictionary</td> </tr> </tbody>\n</table>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"init.28.29\" name=\"init.28.29\">init()</h3>\n<p>Set server URL. Call this before using this object</p>\n<pre class=\"eval\">  void getData ( \n     in string serverURL\n  ) ;\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl><dt><code>serverURL</code> </dt><dd>URL of server side object on which methods should be called </dd></dl>\n<h3 id=\"setAuthentication.28.29\" name=\"setAuthentication.28.29\">setAuthentication()</h3>\n<p>Set authentication info if needed. Both parameters must be specified for authentication to be enabled</p>\n<pre class=\"eval\">  void setAuthentication ( \n     in string username,\n     in string password \n  ) ;\n</pre>\n<h6 id=\"Parameters_2\" name=\"Parameters_2\">Parameters</h6>\n<dl><dt><code>username</code> </dt><dd>username to be used if asked to authenticate </dd></dl> <dl><dt><code>password</code> </dt><dd>password to be used if asked to authenticate </dd></dl>\n<h3 id=\"clearAuthentication.28.29\" name=\"clearAuthentication.28.29\">clearAuthentication()</h3>\n<p>Clear authentication info</p>\n<pre class=\"eval\">  void setAuthentication ( \n     in string username,\n     in string password \n  ) ;\n</pre>\n<h6 id=\"Parameters_3\" name=\"Parameters_3\">Parameters</h6>\n<dl><dt><code>username</code> </dt><dd> <br>\n</dd></dl> <dl><dt><code>password</code> </dt><dd> <br>\n</dd></dl>\n<h3 id=\"setEncoding.28.29\" name=\"setEncoding.28.29\">setEncoding()</h3>\n<p>Set character encoding. The default charset if this function is not called is \"UTF-8\"</p>\n<pre class=\"eval\">  void setAuthentication ( \n     in string encoding\n  ) ;\n</pre>\n<h6 id=\"Parameters_4\" name=\"Parameters_4\">Parameters</h6>\n<dl><dt><code>encoding</code> </dt><dd>encoding charset to be used </dd></dl>\n<h3 id=\"asyncCall.28.29\" name=\"asyncCall.28.29\">asyncCall()</h3>\n<p>Call remote method methodName asynchronously with given arguments.</p>\n<p>Supported arguments are: nsISupportsPRUint8, nsISupportsPRUint16, nsISupportsPRInt16, nsISupportsPRInt32: i4, nsISupportsPRBool: boolean, nsISupportsChar, nsISupportsCString: string, nsISupportsFloat, nsISupportsDouble: double, nsISupportsPRTime: dateTime.iso8601, nsIInputStream: base64, nsISupportsArray: array, nsIDictionary: struct</p>\n<p>Note that both nsISupportsArray and nsIDictionary can only hold any of the supported input types.</p>\n<p>Return value will be converted as follows: i4 or int: nsISupportsPRInt32 boolean: nsISupportsPRBool string: nsISupportsCString double: nsISupportsDouble dateTime.iso8601: nsISupportsPRTime base64: nsISupportsCString array: nsISupportsArray struct: nsIDictionary</p>\n<p>Faults (server side errors) are indicated by returning NS_ERROR_FAILURE. Via <code>nsIXPConnect::GetPendingException()-&gt;data</code> a nsIXmlRpcFault object can be retreieved with more information on the fault.</p>\n<h6 id=\"Parameters_5\" name=\"Parameters_5\">Parameters</h6>\n<dl><dt><code>listener</code> </dt><dd>A nsIXmlRpcClientListener that will get notified of XML-RPC events </dd></dl> <dl><dt><code>ctxt</code> </dt><dd>A context to be passed on to the listener </dd></dl> <dl><dt><code>methodName</code> </dt><dd>Remote method to call </dd></dl> <dl><dt><code>arguments</code> </dt><dd>Array of arguments to pass to the remote method </dd></dl> <dl><dt><code>count</code> </dt><dd> <br>\n</dd></dl>\n<pre class=\"eval\">  void asyncCall (\n     in nsIXmlRpcClientListener listener,\n     in nsISupports ctxt,\n     in string methodName,\n     [array, size_is(count)] in nsISupports arguments,\n     in PRUint32 count\n  );\n</pre>\n<h3 id=\"createType.28.29\" name=\"createType.28.29\">createType()</h3>\n<p>Convenience: return the correct nsISupportsPrimitive for a given XML-RPC type, or nsISupportsArray or nsIDictionary. 'base64' isn't supported. No QueryInterface call is needed, the object has been QueryInterfaced to the correct interface.</p>\n<pre class=\"eval\">  void createType ( \n     in unsigned long type, \n     out nsIIDRef uuid, \n     [iid_is(uuid),retval] out nsQIResult result\n  ) ;\n</pre>\n<h6 id=\"Parameters_6\" name=\"Parameters_6\">Parameters</h6>\n<dl><dt><code>type</code> </dt><dd>One of the listed constants. </dd></dl> <dl><dt><code>uuid</code> </dt><dd>The uuid of the returned object. No QI call needed. </dd></dl> <dl><dt><code>result</code> </dt><dd>The appropriate XPCOM object. </dd></dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Graememcc\">Graememcc</a>",
    "title": "nsIXmlRpcClient"
}