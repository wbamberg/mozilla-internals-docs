{
    "content": "<p>The <code>nsIMsgDatabase</code> interface is an abstract interface used to access the mail database backend.</p>\n<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/mailnews/db/msgdb/public/nsIMsgDatabase.idl\" rel=\"custom\">mailnews/db/msgdb/public/nsIMsgDatabase.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n<div style=\"background: #eee; padding: 2px;\">\n<span>Â </span>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9 (Firefox 3)</span></div>\n</div><p></p>\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDBChangeAnnouncer\" title=\"\">nsIDBChangeAnnouncer</a></code></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#Open.28.29\">Open</a>(in <a href=\"/en/nsILocalFile\" title=\"en/nsILocalFile\">nsILocalFile</a> aFolderName, in boolean aCreate, in boolean aLeaveInvalidDB);</code></td> </tr> <tr> <td><code>void <a href=\"#forceFolderDBClosed.28.29\">forceFolderDBClosed</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgFolder\" title=\"en/XPCOM_Interface_Reference/nsIMsgFolder\">nsIMsgFolder</a> aFolder);</code></td> </tr> <tr> <td><code>void <a href=\"#Close.28.29\">Close</a>(in boolean aForceCommit);</code></td> </tr> <tr> <td><code>void <a href=\"#Commit.28.29\">Commit</a>(in <a href=\"/en/NsMsgDBCommit\" title=\"en/NsMsgDBCommit\">nsMsgDBCommit</a> commitType);</code></td> </tr> <tr> <td><code>void <a href=\"/en/nsIMsgDatabase#ForceClosed()\" title=\"en/nsIMsgDatabase#ForceClosed()\">ForceClosed</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#clearCachedHdrs.28.29\">clearCachedHdrs</a>;</code></td> </tr> <tr> <td><code>void <a href=\"#resetHdrCacheSize.28.29\">resetHdrCacheSize</a>(in unsigned long size);</code></td> </tr> <tr> <td><code><a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> <a href=\"#GetMsgHdrForKey.28.29\">GetMsgHdrForKey</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code><a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> <a href=\"#getMsgHdrForMessageID.28.29\">getMsgHdrForMessageID</a>(in string messageID);</code></td> </tr> <tr> <td><code>boolean <a href=\"#ContainsKey.28.29\">ContainsKey</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code><a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> <a href=\"#CreateNewHdr.28.29\">CreateNewHdr</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code>void <a href=\"#AddNewHdrToDB.28.29\">AddNewHdrToDB</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> newHdr, in boolean notify);</code></td> </tr> <tr> <td><code><a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> <a href=\"#CopyHdrFromExistingHdr.28.29\">CopyHdrFromExistingHdr</a>(in nsMsgKey key, in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> existingHdr, in boolean addHdrToDB);</code></td> </tr> <tr> <td><code>void <a href=\"#ListAllKeys.28.29\">ListAllKeys</a>(in nsMsgKeyArrayRef outputKeys); <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code><a href=\"/en/nsISimpleEnumerator\" title=\"en/nsISimpleEnumerator\">nsISimpleEnumerator</a> <a href=\"#EnumerateMessages.28.29\">EnumerateMessages</a>();</code></td> </tr> <tr> <td><code><a href=\"/en/nsISimpleEnumerator\" title=\"en/nsISimpleEnumerator\">nsISimpleEnumerator</a> <a href=\"#EnumerateThreads.28.29\">EnumerateThreads</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#syncCounts.28.29\">syncCounts</a>;</code></td> </tr> <tr> <td><code><a href=\"/en/XPCOM_Interface_Reference/nsIMsgThread\" title=\"en/XPCOM_Interface_Reference/nsIMsgThread\">nsIMsgThread</a> <a href=\"#GetThreadContainingMsgHdr.28.29\">GetThreadContainingMsgHdr</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> msgHdr);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkHdrRead.28.29\">MarkHdrRead</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> msgHdr, in boolean bRead, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkHdrReplied.28.29\">MarkHdrReplied</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> msgHdr, in boolean bReplied, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkHdrMarked.28.29\">MarkHdrMarked</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> msgHdr, in boolean mark,in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkMDNNeeded.28.29\">MarkMDNNeeded</a>(in nsMsgKey key, in boolean bNeeded,in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>boolean <a href=\"#IsMDNNeeded.28.29\">IsMDNNeeded</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkMDNSent.28.29\">MarkMDNSent</a>(in nsMsgKey key, in boolean bNeeded, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>boolean <a href=\"#IsMDNSent.28.29\">IsMDNSent</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkRead.28.29\">MarkRead</a>(in nsMsgKey key, in boolean bRead, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkReplied.28.29\">MarkReplied</a>(in nsMsgKey key, in boolean bReplied, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkForwarded.28.29\">MarkForwarded</a>(in nsMsgKey key, in boolean bForwarded, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkHasAttachments.28.29\">MarkHasAttachments</a>(in nsMsgKey key, in boolean bHasAttachments, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkThreadRead.28.29\">MarkThreadRead</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgThread\" title=\"en/XPCOM_Interface_Reference/nsIMsgThread\">nsIMsgThread</a> thread, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator, in <a href=\"/en/NsMsgKeyArrayPtr\" title=\"en/NsMsgKeyArrayPtr\">nsMsgKeyArrayPtr</a> thoseMarked); <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>void <a href=\"#MarkThreadIgnored.28.29\">MarkThreadIgnored</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgThread\" title=\"en/XPCOM_Interface_Reference/nsIMsgThread\">nsIMsgThread</a> thread, in nsMsgKey threadKey, in boolean bIgnored, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkThreadWatched.28.29\">MarkThreadWatched</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgThread\" title=\"en/XPCOM_Interface_Reference/nsIMsgThread\">nsIMsgThread</a> thread, in nsMsgKey threadKey, in boolean bWatched, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkHeaderKilled.28.29\">MarkHeaderKilled</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> msg, in boolean bIgnored, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>boolean <a href=\"#IsRead.28.29\">IsRead</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code>boolean <a href=\"#IsIgnored.28.29\">IsIgnored</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code>boolean <a href=\"#IsMarked.28.29\">IsMarked</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code>boolean <a href=\"#HasAttachments.28.29\">HasAttachments</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkAllRead.28.29\">MarkAllRead</a>(in <a href=\"/en/NsMsgKeyArrayPtr\" title=\"en/NsMsgKeyArrayPtr\">nsMsgKeyArrayPtr</a> thoseMarked);</code><code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>void <a href=\"#MarkReadByDate.28.29\">MarkReadByDate</a>(in <a href=\"/en/PRTime\" title=\"en/PRTime\">PRTime</a> startDate, in <a href=\"/en/PRTime\" title=\"en/PRTime\">PRTime</a> endDate, in <a href=\"/en/NsMsgKeyArrayPtr\" title=\"en/NsMsgKeyArrayPtr\">nsMsgKeyArrayPtr</a> markedIds);</code><code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>void <a href=\"#DeleteMessages.28.29\">DeleteMessages</a>(in <a href=\"/en/NsMsgKeyArrayPtr\" title=\"en/NsMsgKeyArrayPtr\">nsMsgKeyArrayPtr</a> nsMsgKeys, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code><code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>void <a href=\"#DeleteMessage.28.29\">DeleteMessage</a>(in nsMsgKey key, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator, in boolean commit);</code></td> </tr> <tr> <td><code>void <a href=\"#DeleteHeader.28.29\">DeleteHeader</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> msgHdr, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator,in boolean commit, in boolean notify);</code></td> </tr> <tr> <td><code>void <a href=\"#RemoveHeaderMdbRow.28.29\">RemoveHeaderMdbRow</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> msgHdr);</code></td> </tr> <tr> <td><code>void <a href=\"#UndoDelete.28.29\">UndoDelete</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> msgHdr);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkMarked.28.29\">MarkMarked</a>(in nsMsgKey key, in boolean mark, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkOffline.28.29\">MarkOffline</a>(in nsMsgKey key, in boolean offline, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#SetLabel.28.29\">SetLabel</a>(in nsMsgKey key, in <a href=\"/en/NsMsgLabel\" title=\"en/NsMsgLabel\">nsMsgLabelValue</a> label);</code></td> </tr> <tr> <td><code>void <a href=\"#setStringProperty.28.29\">setStringProperty</a>(in nsMsgKey aKey, in string aProperty, in string aValue);</code></td> </tr> <tr> <td><code>void <a href=\"#MarkImapDeleted.28.29\">MarkImapDeleted</a>(in nsMsgKey key, in boolean deleted, in <a href=\"/en/XPCOM_Interface_Reference/nsIDBChangeListener\" title=\"en/XPCOM_Interface_Reference/nsIDBChangeListener\">nsIDBChangeListener</a> instigator);</code></td> </tr> <tr> <td><code>void <a href=\"#applyRetentionSettings.28.29\">applyRetentionSettings</a>(in <a href=\"/en/NsIMsgRetentionSettings\" title=\"en/NsIMsgRetentionSettings\">nsIMsgRetentionSettings</a> aMsgRetentionSettings, in boolean aDeleteViaFolder);</code></td> </tr> <tr> <td><code>boolean <a href=\"#HasNew.28.29\">HasNew</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#ClearNewList.28.29\">ClearNewList</a>(in boolean notify);</code></td> </tr> <tr> <td><code>void <a href=\"#AddToNewList.28.29\">AddToNewList</a>(in nsMsgKey key);</code></td> </tr> <tr> <td><code>void <a href=\"#StartBatch\">StartBatch</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#EndBatch\">EndBatch</a>();</code></td> </tr> <tr> <td><code><a href=\"/en/NsIMsgOfflineImapOperation\" title=\"en/NsIMsgOfflineImapOperation\">nsIMsgOfflineImapOperation</a> <a href=\"#GetOfflineOpForKey.28.29\">GetOfflineOpForKey</a>(in nsMsgKey messageKey, in boolean create);</code></td> </tr> <tr> <td><code>void <a href=\"#RemoveOfflineOp.28.29\">RemoveOfflineOp</a>(in <a href=\"/en/NsIMsgOfflineImapOperation\" title=\"en/NsIMsgOfflineImapOperation\">nsIMsgOfflineImapOperation</a> op);</code></td> </tr> <tr> <td><code><a href=\"/en/nsISimpleEnumerator\" title=\"en/nsISimpleEnumerator\">nsISimpleEnumerator</a> <a href=\"#EnumerateOfflineOps.28.29\">EnumerateOfflineOps</a>();</code></td> </tr> <tr> <td><code>void <a href=\"#ListAllOfflineOpIds.28.29\">ListAllOfflineOpIds</a>(in <a href=\"/en/NsMsgKeyArrayPtr\" title=\"en/NsMsgKeyArrayPtr\">nsMsgKeyArrayPtr</a> offlineOpIds);</code><code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>void <a href=\"#ListAllOfflineDeletes.28.29\">ListAllOfflineDeletes</a>(in <a href=\"/en/NsMsgKeyArrayPtr\" title=\"en/NsMsgKeyArrayPtr\">nsMsgKeyArrayPtr</a> offlineDeletes);</code><code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>void <a href=\"#ListAllOfflineMsgs.28.29\">ListAllOfflineMsgs</a>(in <a href=\"/en/NsMsgKeyArrayPtr\" title=\"en/NsMsgKeyArrayPtr\">nsMsgKeyArrayPtr</a> offlineMsgs);</code><code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>void <a href=\"#setAttributesOnPendingHdr.28.29\">setAttributesOnPendingHdr</a>(in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> pendingHdr, in string property, in string propertyVal, in long flags);</code></td> </tr> <tr> <td><code>void <a href=\"#createCollationKey.28.29\">createCollationKey</a>(in AString sourceString, out octetPtr key, out unsigned long len);</code><code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>long <a href=\"#compareCollationKeys.28.29\">compareCollationKeys</a>(in octetPtr key1, in unsigned long len1, in octetPtr key2, in unsigned long len2);</code><code> <span class=\"inlineIndicator noscript noscriptInline\" title=\"This method may only be called from C++; don't use it from JavaScript.\">Native code only!</span></code></td> </tr> <tr> <td><code>void <a href=\"#getNewList.28.29\">getNewList</a>(out unsigned long count, array, size_is(count) out nsMsgKey newKeys);</code></td> </tr> <tr> <td><code><a href=\"/en/nsISimpleEnumerator\" title=\"en/nsISimpleEnumerator\">nsISimpleEnumerator</a> <a href=\"#getCachedHits.28.29\">getCachedHits</a>(in string aSearchFolderUri);</code></td> </tr> <tr> <td><code>void <a href=\"#refreshCache.28.29\">refreshCache</a>(in string aSearchFolderUri, in unsigned long aNumKeys, array, size_is (aNumKeys) in nsMsgKey aNewHits, out unsigned long aNumBadHits, array, size_is(aNumBadHits) out nsMsgKey aStaleHits);</code></td> </tr> <tr> <td><code>void <a href=\"#updateHdrInCache.28.29\">updateHdrInCache</a>(in string aSearchFolderUri, in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> aHdr, in boolean aAdd);</code></td> </tr> <tr> <td><code>boolean <a href=\"#hdrIsInCache.28.29\">hdrIsInCache</a>(in string aSearchFolderUri, in <a href=\"/en/XPCOM_Interface_Reference/nsIMsgDBHdr\" title=\"en/XPCOM_Interface_Reference/nsIMsgDBHdr\">nsIMsgDBHdr</a> aHdr);</code></td> </tr> </tbody>\n</table>\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Attribute</td> <td class=\"header\">Type</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>dBFolderInfo</code></td> <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIDBFolderInfo\" title=\"\">nsIDBFolderInfo</a></code></td> <td><strong>Readonly:</strong></td> </tr> <tr> <td><code>FirstNew</code></td> <td>nsMsgKey</td> <td><strong>Readonly:</strong></td> </tr> <tr> <td><code>msgRetentionSettings</code></td> <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgRetentionSettings\" title=\"\">nsIMsgRetentionSettings</a></code></td> <td>Â </td> </tr> <tr> <td><code>msgDownloadSettings</code></td> <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMsgDownloadSettings\" title=\"\">nsIMsgDownloadSettings</a></code></td> <td>Â </td> </tr> <tr> <td><code>lowWaterArticleNum</code></td> <td>nsMsgKey</td> <td><strong>Readonly:</strong></td> </tr> <tr> <td><code>highWaterArticleNum</code></td> <td>nsMsgKey</td> <td><strong>Readonly:</strong></td> </tr> <tr> <td><code>nextPseudoMsgKey</code></td> <td>nsMsgKey</td> <td>For undo-redo of move pop-&gt;imap.</td> </tr> <tr> <td><code>nextFakeOfflineMsgKey</code></td> <td>nsMsgKey</td> <td><strong>Readonly:</strong> For saving \"fake\" offline msg hdrs.</td> </tr> <tr> <td><code>defaultViewFlags</code></td> <td><a href=\"/en/nsMsgViewFlagsType\" title=\"en/nsMsgViewFlagsType\">nsMsgViewFlagsTypeValue</a></td> <td><strong>Readonly:</strong></td> </tr> <tr> <td><code>defaultSortType</code></td> <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsMsgViewSortTypeValue\" title=\"\">nsMsgViewSortTypeValue</a></code></td> <td><strong>Readonly:</strong></td> </tr> <tr> <td><code>defaultSortOrder</code></td> <td><a href=\"/en/nsMsgViewSortOrder\" title=\"en/nsMsgViewSortOrder\">nsMsgViewSortOrderValue</a></td> <td><strong>Readonly:</strong></td> </tr> <tr> <td><code>msgHdrCacheSize</code></td> <td>unsigned long</td> <td>Â </td> </tr> <tr> <td><code>folderStream</code></td> <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIOutputStream\" title=\"\">nsIOutputStream</a></code></td> <td>Â </td> </tr> <tr> <td><code>summaryValid</code></td> <td>boolean</td> <td>Â </td> </tr> </tbody>\n</table>\n<p>Â </p>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<h3 id=\"Open.28.29\" name=\"Open.28.29\">Open()</h3>\n<p>Opens a database folder.</p>\n<pre class=\"eval\"> void Open(in nsILocalFile aFolderName,\n           in boolean aCreate,\n           in boolean aLeaveInvalidDB);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aFolderName</code></dt> <dd>The name of the folder to create.</dd> <dt><code>aCreate</code></dt> <dd>Whether or not the file should be created.</dd> <dt><code>aLeaveInvalidDB</code></dt> <dd>Set to true if you do not want the database to bedeleted if it is invalid.</dd>\n</dl>\n<h6 id=\"Exceptions_Thrown\" name=\"Exceptions_Thrown\">Exceptions Thrown</h6>\n<dl> <dt><code>NS_ERROR_FILE_TARGET_DOES_NOT_EXIST</code></dt> <dd><code>aFolderName</code> doesn't exist and aCreate was false.</dd> <dt><code>NS_MSG_ERROR_FOLDER_SUMMARY_OUT_OF_DATE</code></dt> <dd>The database is present (and was opened), but the summary file is out of date.</dd> <dt><code>NS_MSG_ERROR_FOLDER_SUMMARY_MISSING</code></dt> <dd>The database is present (and was opened), but the summary file is missing.</dd>\n</dl>\n<h3 id=\"forceFolderDBClosed.28.29\" name=\"forceFolderDBClosed.28.29\">forceFolderDBClosed()</h3>\n<pre class=\"eval\"> void forceFolderDBClosed(in nsIMsgFolder aFolder);\n</pre>\n<h6 id=\"Parameters_2\" name=\"Parameters_2\">Parameters</h6>\n<dl> <dt><code>aFolder</code></dt>\n</dl>\n<h3 id=\"Close.28.29\" name=\"Close.28.29\">Close()</h3>\n<pre class=\"eval\"> void Close(in boolean aForceCommit);\n</pre>\n<h6 id=\"Parameters_3\" name=\"Parameters_3\">Parameters</h6>\n<dl> <dt><code>aForceCommit</code></dt>\n</dl>\n<h3 id=\"Commit.28.29\" name=\"Commit.28.29\">Commit()</h3>\n<pre class=\"eval\"> void Commit(in nsMsgDBCommit commitType);\n</pre>\n<h6 id=\"Parameters_4\" name=\"Parameters_4\">Parameters</h6>\n<dl> <dt><code>commitType</code></dt>\n</dl>\n<h3 id=\"ForceClosed.28.29\" name=\"ForceClosed.28.29\">ForceClosed()</h3>\n<p>Force closed is evil, and we should see if we can do without it. In 4.x, it was mainly used to remove corrupted databases.</p>\n<pre class=\"eval\"> void ForceClosed();\n</pre>\n<h3 id=\"clearCachedHdrs.28.29\" name=\"clearCachedHdrs.28.29\">clearCachedHdrs()</h3>\n<pre class=\"eval\"> void clearCachedHdrs();\n</pre>\n<h3 id=\"resetHdrCacheSize.28.29\" name=\"resetHdrCacheSize.28.29\">resetHdrCacheSize()</h3>\n<pre class=\"eval\"> void resetHdrCacheSize(in unsigned long size);\n</pre>\n<h3 id=\"GetMsgHdrForKey.28.29\" name=\"GetMsgHdrForKey.28.29\">GetMsgHdrForKey()</h3>\n<pre class=\"eval\"> nsIMsgDBHdr GetMsgHdrForKey(in nsMsgKey key);\n</pre>\n<h6 id=\"Parameters_5\" name=\"Parameters_5\">Parameters</h6>\n<dl> <dt><code>key</code></dt>\n</dl>\n<h3 id=\"getMsgHdrForMessageID.28.29\" name=\"getMsgHdrForMessageID.28.29\">getMsgHdrForMessageID()</h3>\n<pre class=\"eval\"> nsIMsgDBHdr getMsgHdrForMessageID(in string messageID);\n</pre>\n<h6 id=\"Parameters_6\" name=\"Parameters_6\">Parameters</h6>\n<dl> <dt><code>messageID</code></dt>\n</dl>\n<h3 id=\"ContainsKey.28.29\" name=\"ContainsKey.28.29\">ContainsKey()</h3>\n<p>Returns whether or not this database contains the given key.</p>\n<pre class=\"eval\"> boolean ContainsKey(in nsMsgKey key);\n</pre>\n<h6 id=\"Parameters_7\" name=\"Parameters_7\">Parameters</h6>\n<dl> <dt><code>key</code></dt>\n</dl>\n<h3 id=\"CreateNewHdr.28.29\" name=\"CreateNewHdr.28.29\">CreateNewHdr()</h3>\n<p>Must call <code><a href=\"#AddNewHdrToDB.28.29\">AddNewHdrToDB</a></code> after creating. The idea is that you create a new header, fill in its properties, and then call <code><a href=\"#AddNewHdrToDB.28.29\">AddNewHdrToDB</a></code>. <code><a href=\"#AddNewHdrToDB.28.29\">AddNewHdrToDB</a></code> will send notifications to any listeners.</p>\n<pre class=\"eval\"> nsIMsgDBHdr CreateNewHdr(in nsMsgKey key);\n</pre>\n<h3 id=\"AddNewHdrToDB.28.29\" name=\"AddNewHdrToDB.28.29\">AddNewHdrToDB()</h3>\n<pre class=\"eval\"> void AddNewHdrToDB(in nsIMsgDBHdr newHdr, in boolean notify);\n</pre>\n<h3 id=\"CopyHdrFromExistingHdr.28.29\" name=\"CopyHdrFromExistingHdr.28.29\">CopyHdrFromExistingHdr()</h3>\n<pre class=\"eval\"> nsIMsgDBHdr CopyHdrFromExistingHdr(in nsMsgKey key, in nsIMsgDBHdr existingHdr, in boolean addHdrToDB);\n</pre>\n<h3 id=\"ListAllKeys.28.29\" name=\"ListAllKeys.28.29\">ListAllKeys()</h3>\n<pre class=\"eval\"> [noscript] void ListAllKeys(in nsMsgKeyArrayRef outputKeys);\n</pre>\n<h3 id=\"EnumerateMessages.28.29\" name=\"EnumerateMessages.28.29\">EnumerateMessages()</h3>\n<pre class=\"eval\"> nsISimpleEnumerator EnumerateMessages();\n</pre>\n<h3 id=\"EnumerateThreads.28.29\" name=\"EnumerateThreads.28.29\">EnumerateThreads()</h3>\n<pre class=\"eval\"> nsISimpleEnumerator EnumerateThreads();\n</pre>\n<h3 id=\"syncCounts.28.29\" name=\"syncCounts.28.29\">syncCounts()</h3>\n<p>Count the total and unread msgs, and adjust global count if needed.</p>\n<pre class=\"eval\"> void syncCounts();\n</pre>\n<h3 id=\"GetThreadContainingMsgHdr.28.29\" name=\"GetThreadContainingMsgHdr.28.29\">GetThreadContainingMsgHdr()</h3>\n<pre class=\"eval\"> nsIMsgThread GetThreadContainingMsgHdr(in nsIMsgDBHdr msgHdr)Â ;\n</pre>\n<h3 id=\"MarkHdrRead.28.29\" name=\"MarkHdrRead.28.29\">MarkHdrRead()</h3>\n<p>Helpers for user command functions like delete, mark read, etc.</p>\n<pre class=\"eval\"> void MarkHdrRead(in nsIMsgDBHdr msgHdr,\n                  in boolean bRead,\n                  in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkHdrReplied.28.29\" name=\"MarkHdrReplied.28.29\">MarkHdrReplied()</h3>\n<pre class=\"eval\"> void MarkHdrReplied(in nsIMsgDBHdr msgHdr,\n                     in boolean bReplied,\n                     in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkHdrMarked.28.29\" name=\"MarkHdrMarked.28.29\">MarkHdrMarked()</h3>\n<pre class=\"eval\"> void MarkHdrMarked(in nsIMsgDBHdr msgHdr,\n                    in boolean mark,\n                    in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkMDNNeeded.28.29\" name=\"MarkMDNNeeded.28.29\">MarkMDNNeeded()</h3>\n<p>MDN (Message Disposition Notification) support.</p>\n<pre class=\"eval\"> void MarkMDNNeeded(in nsMsgKey key,\n                    in boolean bNeeded,\n                    in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"IsMDNNeeded.28.29\" name=\"IsMDNNeeded.28.29\">IsMDNNeeded()</h3>\n<p><code><a href=\"#MarkMDNNeeded.28.29\">MarkMDNneeded</a></code> only used when mail server is a <a href=\"/en/POP3\" title=\"en/POP3\">POP3</a> server, or when the <a href=\"/en/IMAP\" title=\"en/IMAP\">IMAP</a> server does not support user defined <code>PERMANENTFLAGS</code>.</p>\n<pre class=\"eval\"> boolean IsMDNNeeded(in nsMsgKey key);\n</pre>\n<h3 id=\"MarkMDNSent.28.29\" name=\"MarkMDNSent.28.29\">MarkMDNSent()</h3>\n<pre class=\"eval\"> void MarkMDNSent(in nsMsgKey key,\n                  in boolean bNeeded,\n                  in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"IsMDNSent.28.29\" name=\"IsMDNSent.28.29\">IsMDNSent()</h3>\n<pre class=\"eval\"> boolean IsMDNSent(in nsMsgKey key);\n</pre>\n<h3 id=\"MarkRead.28.29\" name=\"MarkRead.28.29\">MarkRead()</h3>\n<p>Methods to get and set docsets for ids.</p>\n<pre class=\"eval\"> void MarkRead(in nsMsgKey key,\n               in boolean bRead, \n               in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkReplied.28.29\" name=\"MarkReplied.28.29\">MarkReplied()</h3>\n<pre class=\"eval\"> void MarkReplied(in nsMsgKey key,\n                  in boolean bReplied, \n                  in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkForwarded.28.29\" name=\"MarkForwarded.28.29\">MarkForwarded()</h3>\n<pre class=\"eval\"> void MarkForwarded(in nsMsgKey key,\n                    in boolean bForwarded, \n                    in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkHasAttachments.28.29\" name=\"MarkHasAttachments.28.29\">MarkHasAttachments()</h3>\n<pre class=\"eval\"> void MarkHasAttachments(in nsMsgKey key,\n                         in boolean bHasAttachments, \n                         in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkThreadRead.28.29\" name=\"MarkThreadRead.28.29\">MarkThreadRead()</h3>\n<pre class=\"eval\"> [noscript] void MarkThreadRead(in nsIMsgThread thread, \n                                in nsIDBChangeListener instigator,\n                                in nsMsgKeyArrayPtr thoseMarked);\n</pre>\n<h3 id=\"MarkThreadIgnored.28.29\" name=\"MarkThreadIgnored.28.29\">MarkThreadIgnored()</h3>\n<pre class=\"eval\"> void MarkThreadIgnored(in nsIMsgThread thread,\n                        in nsMsgKey threadKey,\n                        in boolean bIgnored,\n                        in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkThreadWatched.28.29\" name=\"MarkThreadWatched.28.29\">MarkThreadWatched()</h3>\n<pre class=\"eval\"> void MarkThreadWatched(in nsIMsgThread thread,\n                        in nsMsgKey threadKey,\n                        in boolean bWatched,\n                        in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkHeaderKilled.28.29\" name=\"MarkHeaderKilled.28.29\">MarkHeaderKilled()</h3>\n<pre class=\"eval\"> void MarkHeaderKilled(in nsIMsgDBHdr msg,\n                       in boolean bIgnored,\n                       in nsIDBChangeListener instigator);\n\n</pre>\n<h3 id=\"IsRead.28.29\" name=\"IsRead.28.29\">IsRead()</h3>\n<pre class=\"eval\"> boolean IsRead(in nsMsgKey key);\n</pre>\n<h3 id=\"IsIgnored.28.29\" name=\"IsIgnored.28.29\">IsIgnored()</h3>\n<pre class=\"eval\"> boolean IsIgnored(in nsMsgKey key);\n</pre>\n<h3 id=\"IsMarked.28.29\" name=\"IsMarked.28.29\">IsMarked()</h3>\n<pre class=\"eval\"> boolean IsMarked(in nsMsgKey key);\n</pre>\n<h3 id=\"HasAttachments.28.29\" name=\"HasAttachments.28.29\">HasAttachments()</h3>\n<pre class=\"eval\"> boolean HasAttachments(in nsMsgKey key);\n</pre>\n<h3 id=\"MarkAllRead.28.29\" name=\"MarkAllRead.28.29\">MarkAllRead()</h3>\n<pre class=\"eval\"> [noscript] void MarkAllRead(in nsMsgKeyArrayPtr thoseMarked);\n</pre>\n<h3 id=\"MarkReadByDate.28.29\" name=\"MarkReadByDate.28.29\">MarkReadByDate()</h3>\n<pre class=\"eval\"> [noscript] void MarkReadByDate (in PRTime startDate,\n                                 in PRTime endDate,\n                                 in nsMsgKeyArrayPtr markedIds);\n</pre>\n<h3 id=\"DeleteMessages.28.29\" name=\"DeleteMessages.28.29\">DeleteMessages()</h3>\n<pre class=\"eval\"> [noscript] void DeleteMessages(in nsMsgKeyArrayPtr nsMsgKeys,\n                                in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"DeleteMessage.28.29\" name=\"DeleteMessage.28.29\">DeleteMessage()</h3>\n<pre class=\"eval\"> void DeleteMessage(in nsMsgKey key, \n                    in nsIDBChangeListener instigator,\n                    in boolean commit);\n</pre>\n<h3 id=\"DeleteHeader.28.29\" name=\"DeleteHeader.28.29\">DeleteHeader()</h3>\n<pre class=\"eval\"> void DeleteHeader(in nsIMsgDBHdr msgHdr,\n                   in nsIDBChangeListener instigator,\n                   in boolean commit,\n                   in boolean notify);\n</pre>\n<h3 id=\"RemoveHeaderMdbRow.28.29\" name=\"RemoveHeaderMdbRow.28.29\">RemoveHeaderMdbRow()</h3>\n<p>This is a lower level routine that doesn't remove the header from its thread or adjust message counts.</p>\n<pre class=\"eval\"> void RemoveHeaderMdbRow(in nsIMsgDBHdr msgHdr);\n</pre>\n<h3 id=\"UndoDelete.28.29\" name=\"UndoDelete.28.29\">UndoDelete()</h3>\n<pre class=\"eval\"> void UndoDelete(in nsIMsgDBHdr msgHdr);\n</pre>\n<h3 id=\"MarkMarked.28.29\" name=\"MarkMarked.28.29\">MarkMarked()</h3>\n<pre class=\"eval\"> void MarkMarked(in nsMsgKey key,\n                 in boolean mark,\n                 in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"MarkOffline.28.29\" name=\"MarkOffline.28.29\">MarkOffline()</h3>\n<pre class=\"eval\"> void MarkOffline(in nsMsgKey key,\n                  in boolean offline,\n                  in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"SetLabel.28.29\" name=\"SetLabel.28.29\">SetLabel()</h3>\n<pre class=\"eval\"> void SetLabel(in nsMsgKey key,\n               in nsMsgLabelValue label);\n</pre>\n<h3 id=\"setStringProperty.28.29\" name=\"setStringProperty.28.29\">setStringProperty()</h3>\n<pre class=\"eval\"> void setStringProperty(in nsMsgKey aKey,\n                        in string aProperty,\n                        in string aValue);\n</pre>\n<h3 id=\"MarkImapDeleted.28.29\" name=\"MarkImapDeleted.28.29\">MarkImapDeleted()</h3>\n<pre class=\"eval\"> void MarkImapDeleted(in nsMsgKey key,\n                      in boolean deleted,\n                      in nsIDBChangeListener instigator);\n</pre>\n<h3 id=\"applyRetentionSettings.28.29\" name=\"applyRetentionSettings.28.29\">applyRetentionSettings()</h3>\n<p>Purge unwanted message headers and/or bodies. If <code>deleteViaFolder</code> is true, we'll call <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIMsgFolder#DeleteMessages()\">nsIMsgFolder.DeleteMessages()</a></code> to delete the messages. Otherwise, we'll just delete them from the db.</p>\n<pre class=\"eval\"> void applyRetentionSettings(in nsIMsgRetentionSettings aMsgRetentionSettings,\n                             in boolean aDeleteViaFolder);\n</pre>\n<h3 id=\"HasNew.28.29\" name=\"HasNew.28.29\">HasNew()</h3>\n<pre class=\"eval\"> boolean HasNew();  \n</pre>\n<h3 id=\"ClearNewList.28.29\" name=\"ClearNewList.28.29\">ClearNewList()</h3>\n<pre class=\"eval\"> void ClearNewList(in boolean notify);\n</pre>\n<h3 id=\"AddToNewList.28.29\" name=\"AddToNewList.28.29\">AddToNewList()</h3>\n<pre class=\"eval\"> void AddToNewList(in nsMsgKey key);\n</pre>\n<h3 id=\"StartBatch.28.29\" name=\"StartBatch.28.29\">StartBatch()</h3>\n<p>Batching - can be used to cache file stream for local mail, and perhaps to use the mdb batching mechanism as well.</p>\n<pre class=\"eval\"> void StartBatch();\n</pre>\n<h3 id=\"EndBatch.28.29\" name=\"EndBatch.28.29\">EndBatch()</h3>\n<pre class=\"eval\"> void EndBatch();\n</pre>\n<h3 id=\"GetOfflineOpForKey.28.29\" name=\"GetOfflineOpForKey.28.29\">GetOfflineOpForKey()</h3>\n<p>Offline operations - we could move these into an offline operation interface but it would have to be in <a href=\"/en/NsMailDatabase\" title=\"en/NsMailDatabase\">nsMailDatabase</a>, since local folders can be move destinations.</p>\n<pre class=\"eval\"> nsIMsgOfflineImapOperation GetOfflineOpForKey(in nsMsgKey messageKey,\n                                               in boolean create);\n</pre>\n<h3 id=\"RemoveOfflineOp.28.29\" name=\"RemoveOfflineOp.28.29\">RemoveOfflineOp()</h3>\n<pre class=\"eval\"> void  RemoveOfflineOp(in nsIMsgOfflineImapOperation op);\n</pre>\n<h3 id=\"EnumerateOfflineOps.28.29\" name=\"EnumerateOfflineOps.28.29\">EnumerateOfflineOps()</h3>\n<pre class=\"eval\"> nsISimpleEnumerator EnumerateOfflineOps();\n</pre>\n<h3 id=\"ListAllOfflineOpIds.28.29\" name=\"ListAllOfflineOpIds.28.29\">ListAllOfflineOpIds()</h3>\n<pre class=\"eval\"> [noscript] void ListAllOfflineOpIds(in nsMsgKeyArrayPtr offlineOpIds);\n</pre>\n<h3 id=\"ListAllOfflineDeletes.28.29\" name=\"ListAllOfflineDeletes.28.29\">ListAllOfflineDeletes()</h3>\n<pre class=\"eval\"> [noscript] void ListAllOfflineDeletes(in nsMsgKeyArrayPtr offlineDeletes);\n</pre>\n<h3 id=\"ListAllOfflineMsgs.28.29\" name=\"ListAllOfflineMsgs.28.29\">ListAllOfflineMsgs()</h3>\n<pre class=\"eval\"> [noscript] void ListAllOfflineMsgs(in nsMsgKeyArrayPtr offlineMsgs);\n</pre>\n<h3 id=\"setAttributesOnPendingHdr.28.29\" name=\"setAttributesOnPendingHdr.28.29\">setAttributesOnPendingHdr()</h3>\n<pre class=\"eval\"> void setAttributesOnPendingHdr(in nsIMsgDBHdr pendingHdr,\n                                in string property, \n                                in string propertyVal,\n                                in long flags);\n</pre>\n<h3 id=\"createCollationKey.28.29\" name=\"createCollationKey.28.29\">createCollationKey()</h3>\n<pre class=\"eval\"> [noscript] void createCollationKey(in AString sourceString,\n                                    out octetPtr key,\n                                    out unsigned long len);\n</pre>\n<h3 id=\"compareCollationKeys.28.29\" name=\"compareCollationKeys.28.29\">compareCollationKeys()</h3>\n<pre class=\"eval\"> [noscript] long compareCollationKeys(in octetPtr key1,\n                                      in unsigned long len1,\n                                      in octetPtr key2,\n                                      in unsigned long len2);\n</pre>\n<h3 id=\"getNewList.28.29\" name=\"getNewList.28.29\">getNewList()</h3>\n<p>The list of messages currently in the <code>NEW</code> state. If there are no such messages, <code>null</code> may be returned. The caller should free when done using <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsMemory#Free()\">nsMemory.Free()</a></code>.</p>\n<pre class=\"eval\"> void getNewList(out unsigned long count,\n                 [array, size_is(count)] out nsMsgKey newKeys);\n</pre>\n<h3 id=\"getCachedHits.28.29\" name=\"getCachedHits.28.29\">getCachedHits()</h3>\n<p>These are used for caching search hits in a database, to speed up saved search folders.</p>\n<pre class=\"eval\"> nsISimpleEnumerator getCachedHits(in string aSearchFolderUri);\n</pre>\n<h3 id=\"refreshCache.28.29\" name=\"refreshCache.28.29\">refreshCache()</h3>\n<pre class=\"eval\"> void refreshCache(in string aSearchFolderUri,\n                   in unsigned long aNumKeys,\n                   [array, size_is (aNumKeys)] in nsMsgKey aNewHits,\n                   out unsigned long aNumBadHits,\n                   [array, size_is(aNumBadHits)] out nsMsgKey aStaleHits);\n</pre>\n<h3 id=\"updateHdrInCache.28.29\" name=\"updateHdrInCache.28.29\">updateHdrInCache()</h3>\n<pre class=\"eval\"> void updateHdrInCache(in string aSearchFolderUri,\n                       in nsIMsgDBHdr aHdr,\n                       in boolean aAdd);\n</pre>\n<h3 id=\"hdrIsInCache.28.29\" name=\"hdrIsInCache.28.29\">hdrIsInCache()</h3>\n<pre class=\"eval\"> boolean hdrIsInCache(in string aSearchFolderUri,\n                      in nsIMsgDBHdr aHdr);\n</pre>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Wjjohnst\">Wjjohnst</a>",
    "title": "nsIMsgDatabase"
}