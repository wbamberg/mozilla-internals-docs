{
    "content": "<div class=\"summary\">\n <p>IDL file: <a href=\"http://dxr.mozilla.org/mozilla-central/source/dom/base/nsIMessageManager.idl\">mozilla-central/source/dom/base/nsIMessageManager.idl</a></p>\n <p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListenerManager\" title=\"\">nsIMessageListenerManager</a></code></p>\n</div>\n<p>Message \"senders\" have a single \"other side\" to which messages are sent.  For example, a child-process message manager will send messages that are only delivered to its one parent-process message manager.</p>\n<p>See <a href=\"/en-US/Firefox/Multiprocess_Firefox/Message_Manager_Interfaces\">Message Manager interfaces</a> for more details on the distinction between message senders and message broadcasters.</p>\n<p>Both <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISyncMessageSender#sendSyncMessage()\">sendSyncMessage()</a></code> and <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISyncMessageSender#sendRpcMessage()\">sendRpcMessage()</a></code> will block until a reply is received, but they may be temporarily interrupted to process an urgent incoming message (such as a <a href=\"/en-US/Firefox/Multiprocess_Firefox/Cross_Process_Object_Wrappers\">CPOW</a> request).</p>\n<h2 id=\"Methods\">Methods</h2>\n<table class=\"standard-table fullwidth-table\">\n <tbody>\n  <tr>\n   <td><code>jsval sendSyncMessage([optional] in AString messageName,<br>\n                          [optional] in jsval obj,<br>\n                          [optional] in jsval objects,<br>\n                          [optional] in nsIPrincipal principal);</code></td>\n  </tr>\n  <tr>\n   <td><code>jsval sendRpcMessage([optional] in AString messageName,<br>\n                          [optional] in jsval obj,<br>\n                          [optional] in jsval objects,<br>\n                          [optional] in nsIPrincipal principal);</code></td>\n  </tr>\n </tbody>\n</table>\n<h3 id=\"sendSyncMessage()\">sendSyncMessage()</h3>\n<p>Like <a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageSender#sendAsyncMessage()\"><code>sendAsyncMessage()</code></a>, except blocks the sender until all listeners of the message have been invoked.  Returns an array containing return values from each listener invoked.</p>\n<p>Send <code>messageName</code> and <code>obj</code> to the \"other side\" of this message manager. This invokes listeners who registered for <code>messageName</code> using a <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListenerManager\" title=\"\">nsIMessageListenerManager</a></code>.<br>\n <br>\n See <a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListener#receiveMessage()\"><code>nsIMessageListener::receiveMessage()</code></a> for the format of the data delivered to listeners.<br>\n <br>\n Throws <code>NS_ERROR_NOT_INITIALIZED</code> if the sender is not initialized.  For example, we will throw <code>NS_ERROR_NOT_INITIALIZED</code> if we try to send a message to a cross-process frame but the other process has not yet been set up.</p>\n<p>Throws <code>NS_ERROR_FAILURE</code> when the message receiver cannot be found.  For example, we will throw <code>NS_ERROR_FAILURE</code> if we try to send a message to a cross-process frame whose process has crashed.</p>\n<h4 id=\"Parameters\">Parameters</h4>\n<table class=\"standard-table fullwidth-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Name</th>\n   <th scope=\"col\">Type</th>\n   <th scope=\"col\">Description</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>messageName</code></td>\n   <td>String</td>\n   <td>\n    <p>The name of the message. Optional.</p>\n    <p>This becomes the <code>name</code> property of the<a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListener#receiveMessage%28%29\"> received message</a>.</p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>obj</code></td>\n   <td>Object.</td>\n   <td>\n    <p>The message payload.</p>\n    <p>A structured clone of this becomes the <code>data</code> property of the <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListener#receiveMessage%28%29\">received message</a>.</p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>objects</code></td>\n   <td>Object.</td>\n   <td>\n    <p>An object each of whose properties is an object.</p>\n    <p>This becomes the <code>objects</code> property of the<a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListener#receiveMessage%28%29\"> received message</a>, with each original object replaced with a <a href=\"/en-US/Firefox/Multiprocess_Firefox/Cross_Process_Object_Wrappers\">cross process object wrapper</a> for it.</p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>principal</code></td>\n   <td><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrincipal\"><code>nsIPrincipal</code></a></td>\n   <td> </td>\n  </tr>\n </tbody>\n</table>\n<h4 id=\"Returns\">Returns</h4>\n<p><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>: an array of <a href=\"/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm\">structured clones</a> of the objects returned by all the listeners to this message, one element for each listener. If there was only one listener, it is an array with a single element.</p>\n<h3 id=\"sendRpcMessage()\">sendRpcMessage()</h3>\n<p>Like <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISyncMessageSender#sendSyncMessage()\">sendSyncMessage()</a></code>, except re-entrant. New RPC messages may be issued even if, earlier on the call stack, we are waiting for a reply to an earlier <code>sendRpcMessage()</code> call.</p>\n<h4 id=\"Parameters_2\">Parameters</h4>\n<table class=\"standard-table fullwidth-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">Name</th>\n   <th scope=\"col\">Type</th>\n   <th scope=\"col\">Description</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code>messageName</code></td>\n   <td>String</td>\n   <td>\n    <p>The name of the message. Optional.</p>\n    <p>This becomes the <code>name</code> property of the<a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListener#receiveMessage%28%29\"> received message</a>.</p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>obj</code></td>\n   <td>JSONable object.</td>\n   <td>\n    <p>The message payload.</p>\n    <p>A structured clone of this becomes the <code>data</code> property of the <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListener#receiveMessage%28%29\">received message</a>.</p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>objects</code></td>\n   <td>Object.</td>\n   <td>\n    <p>An object each of whose properties is an object.</p>\n    <p>This becomes the <code>objects</code> property of the<a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIMessageListener#receiveMessage%28%29\"> received message</a>, with each original object replaced with a <a href=\"/en-US/Firefox/Multiprocess_Firefox/Cross_Process_Object_Wrappers\">cross process object wrapper</a> for it.</p>\n   </td>\n  </tr>\n  <tr>\n   <td><code>principal</code></td>\n   <td><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIPrincipal\"><code>nsIPrincipal</code></a></td>\n   <td> </td>\n  </tr>\n </tbody>\n</table>\n<h4 id=\"Returns_2\">Returns</h4>\n<p><a href=\"/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"><code>Array</code></a>: an array of <a href=\"/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm\">structured clones</a> of the objects returned by all the listeners to this message, one element for each listener. If there was only one listener, it is an array with a single element.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>",
    "title": "nsISyncMessageSender"
}