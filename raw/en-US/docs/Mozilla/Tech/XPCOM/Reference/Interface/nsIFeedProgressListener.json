{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/toolkit/components/feeds/public/nsIFeedListener.idl\" rel=\"custom\">toolkit/components/feeds/public/nsIFeedListener.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface defines callbacks used during the processing of an RSS or Atom feed. Programs using the feed content access API do not have to implement any of these callbacks; they are optional, but allow you to provide feedback during the parsing process.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 5.714285714285714%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 5.714285714285714%; background: #00dd00; position: absolute; width: 94.28571428571429%;\" title=\"Introduced in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Gecko 1.8</div>\n\n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedResultListener\" title=\"\">nsIFeedResultListener</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)</span></div>\n</div><p></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>void <a href=\"#handleEntry()\">handleEntry</a>(in nsIFeedEntry entry, in nsIFeedResult result);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#handleFeedAtFirstEntry()\">handleFeedAtFirstEntry</a>(in nsIFeedResult result);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#handleStartFeed()\">handleStartFeed</a>(in nsIFeedResult result);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#reportError()\">reportError</a>(in AString errorText, in long lineNumber, in boolean bozo);</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"handleEntry()\" name=\"handleEntry()\">handleEntry()</h3>\n\n<p>Called after each entry or item is processed. If the document is a standalone item or entry, the <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedProgressListener#HandleFeedAtFirstEntry()\">HandleFeedAtFirstEntry()</a></code> method will not already have been called, and the received <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedEntry\" title=\"\">nsIFeedEntry</a></code> will have a <code>null</code> <code>parent</code> value.</p>\n\n<pre class=\"eval\">void handleEntry(\n  in nsIFeedEntry entry,\n  in nsIFeedResult result\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>entry</code></dt>\n <dd>Pointer to an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedEntry\" title=\"\">nsIFeedEntry</a></code> containing information about the entry that was just processed.</dd>\n <dt><code>result</code></dt>\n <dd>Pointer to an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedResult\" title=\"\">nsIFeedResult</a></code> containing the current information about the feed being processed.</dd>\n</dl>\n\n<h3 id=\"handleFeedAtFirstEntry()\" name=\"handleFeedAtFirstEntry()\">handleFeedAtFirstEntry()</h3>\n\n<p>Called when the first entry or item in the feed is encountered. In Atom, all feed data is required to precede the entries; in RSS, this isn't required but is typically the case. In other words, by the time this method is called, it is most likely that most or all of the feed-level metadata has been processed and is available in the received <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedResult\" title=\"\">nsIFeedResult</a></code> object.</p>\n\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong>Â If the feed type is one of the entry or item-only types, this event will never be called.</div><p></p>\n\n<pre class=\"eval\">void handleFeedAtFirstEntry(\n  in nsIFeedResult result\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>result</code></dt>\n <dd>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedResult\" title=\"\">nsIFeedResult</a></code> describing the feed at the point at which the first entry is found, but before processing it.</dd>\n</dl>\n\n<h3 id=\"handleStartFeed()\" name=\"handleStartFeed()\">handleStartFeed()</h3>\n\n<p>Called as soon as a reasonable start to a feed is detected; this lets your code know that the feed does appear to be an actual feed rather than some other sort of document.</p>\n\n<pre class=\"eval\">void handleStartFeed(\n  in nsIFeedResult result\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>result</code></dt>\n <dd>An <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedResult\" title=\"\">nsIFeedResult</a></code> describing the current state of the feed at the moment parsing begins.</dd>\n</dl>\n\n<h3 id=\"reportError()\" name=\"reportError()\">reportError()</h3>\n\n<p>Called by the feed processor when a fatal XML parsing error occurs, or if the document isn't a feed.</p>\n\n<pre class=\"eval\">void reportError(\n  in AString errorText,\n  in long lineNumber,\n  in boolean bozo\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>errorText</code></dt>\n <dd>A short description of the error.</dd>\n <dt><code>lineNumber</code></dt>\n <dd>The line on which the error occurred.</dd>\n <dt><code>bozo</code></dt>\n <dd>The bozo bit will be set if the error was due to a fatal error.</dd>\n</dl>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIFeedResultListener\" title=\"\">nsIFeedResultListener</a></code></li>\n</ul>\n\n<p><span class=\"comment\">Interwiki lin</span></p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SphinxKnight\">SphinxKnight</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Fredchat\">Fredchat</a>",
    "title": "nsIFeedProgressListener"
}