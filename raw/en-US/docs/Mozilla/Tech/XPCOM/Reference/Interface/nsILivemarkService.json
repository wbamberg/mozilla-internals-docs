{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/toolkit/components/places/public/nsILivemarkService.idl\" rel=\"custom\">toolkit/components/places/public/nsILivemarkService.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\nThis interface is used to create and reload livemarks. You can also use this check whether something is a livemark or not.\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 5.714285714285714%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 5.714285714285714%; background: #00dd00; position: absolute; width: 31.42857142857143%;\" title=\"Introduced in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Gecko 1.8</div>\n\n    <div style=\"height: 8px; top: 16px; left: 37.142857142857146%; background: #000000; position: absolute; width: 62.857142857142854%;\" title=\"Obsolete in Gecko 22.0 (Firefox 22.0 / Thunderbird 22.0 / SeaMonkey 2.19)\"></div>\n    \n  <div style=\"top: 0px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 37.142857142857146%;\">Obsolete</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 37.142857142857146%;\">Gecko 22.0</div>\n  \n    <div style=\"height: 8px; top: 16px; left: 9.976190285714287%; background: #eeee00; position: absolute; width: 1%; border-radius: 4px; -webkit-border-radius: 4px;\" title=\"Last changed in Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)\"></div>\n    \n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISupports\" title=\"\">nsISupports</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9.2 (Firefox 3.6 / Thunderbird 3.1 / Fennec 1.0)</span></div>\n</div><p></p>\n\n<p></p><div class=\"warning\">This interface is obsolete.</div><p></p>\n\n<p>Implemented by: <code>@mozilla.org/browser/livemark-service;2</code>. To use this service, use:</p>\n\n<pre class=\"eval\">var livemarkService = Components.classes[\"@mozilla.org/browser/livemark-service;2\"]\n                      .getService(Components.interfaces.nsILivemarkService);\n</pre>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code>long long <a href=\"#createLivemark()\">createLivemark</a>(in long long folder, in AString name, in nsIURI siteURI, in nsIURI feedURI, in long index);</code></td>\n  </tr>\n  <tr>\n   <td><code>long long <a href=\"#createLivemarkFolderOnly()\">createLivemarkFolderOnly</a>(in long long folder, in AString name, in nsIURI siteURI, in nsIURI feedURI, in long index);</code> </td>\n  </tr>\n  <tr>\n   <td><code>nsIURI <a href=\"#getFeedURI()\">getFeedURI</a>(in long long container);</code></td>\n  </tr>\n  <tr>\n   <td><code>long long <a href=\"#getLivemarkIdForFeedURI()\">getLivemarkIdForFeedURI</a>(in nsIURI aFeedURI);</code> </td>\n  </tr>\n  <tr>\n   <td><code>nsIURI <a href=\"#getSiteURI()\">getSiteURI</a>(in long long container);</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#isLivemark()\">isLivemark</a>(in long long folder);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#reloadAllLivemarks()\">reloadAllLivemarks</a>();</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#reloadLivemarkFolder()\">reloadLivemarkFolder</a>(in long long folderID);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#setFeedURI()\">setFeedURI</a>(in long long container, in nsIURI feedURI);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#setSiteURI()\">setSiteURI</a>(in long long container, in nsIURI siteURI);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#start()\">start</a>();</code> </td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#stopUpdateLivemarks()\">stopUpdateLivemarks</a>();</code> </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"createLivemark()\" name=\"createLivemark()\">createLivemark()</h3>\n\n<p>Creates a new livemark.</p>\n\n<pre class=\"eval\">long long createLivemark(\n  in long long folder,\n  in AString name,\n  in nsIURI siteURI,\n  in nsIURI feedURI,\n  in long index\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>folder</code></dt>\n <dd>The id of the parent folder.</dd>\n <dt><code>name</code></dt>\n <dd>The name to show when displaying the livemark.</dd>\n <dt><code>siteURI</code></dt>\n <dd>The URI of the site from which the livemark was created.</dd>\n <dt><code>feedURI</code></dt>\n <dd>The URI of the actual RSS feed.</dd>\n <dt><code>index</code></dt>\n <dd>The index to insert at, or <code>-1</code> to append to the end of the list.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The ID of the folder for the livemark.</p>\n\n<p></p><h3 id=\"createLivemarkFolderOnly()\">createLivemarkFolderOnly()</h3><p></p>\n\n<p>This method also creates a new livemark but use this method during startup to avoid HTTP traffic.</p>\n\n<pre class=\"eval\">long long createLivemarkFolderOnly(\n  in long long folder,\n  in AString name,\n  in nsIURI siteURI,\n  in nsIURI feedURI,\n  in long index\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>folder</code></dt>\n <dd>The id of the parent folder.</dd>\n <dt><code>name</code></dt>\n <dd>The name to show when displaying the livemark.</dd>\n <dt><code>siteURI</code></dt>\n <dd>The URI of the site from which the livemark was created.</dd>\n <dt><code>feedURI</code></dt>\n <dd>The URI of the actual RSS feed.</dd>\n <dt><code>index</code></dt>\n <dd>The index to insert at, or <code>-1</code> to append to the end of the list.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>Returns the ID of the folder for the livemark.</p>\n\n<h3 id=\"getFeedURI()\" name=\"getFeedURI()\">getFeedURI()</h3>\n\n<p>This method retrieves the URI of the syndication feed associated with a livemark container.</p>\n\n<pre class=\"eval\">nsIURI getFeedURI(\n  in long long container\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>container</code></dt>\n <dd>The folder ID of a livemark container.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>A <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code> representing the URI of the feed; if the livemark container doesn't have a valid feed URI, <code>null</code> will be returned or the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code> object returned will be the empty string.</p>\n\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n\n<dl>\n <dt><code>NS_ERROR_INVALID_ARG</code></dt>\n <dd>If the folder ID isn't known or identifies a folder that isn't a livemark container.</dd>\n <dt><code>NS_ERROR_MALFORMED_URI</code></dt>\n <dd>If the site URI annotation has somehow been corrupted (and can't be turned into an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code>)</dd>\n</dl>\n\n<p></p><h3 id=\"getLivemarkIdForFeedURI()\">getLivemarkIdForFeedURI()</h3><p></p>\n\n<p>Determines whether the feed URI is a currently registered livemark.</p>\n\n<pre class=\"eval\">long long getLivemarkIdForFeedURI(\n  in nsIURI aFeedURI\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>aFeedURI</code></dt>\n <dd>Feed URI to look for.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>The ID of the livemark.</p>\n\n<h3 id=\"getSiteURI()\" name=\"getSiteURI()\">getSiteURI()</h3>\n\n<p>This method retrieves the URI of the website associated with a livemark container.</p>\n\n<pre class=\"eval\">nsIURI getSiteURI(\n  in long long container\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>container</code></dt>\n <dd>The folder ID of a livemark container.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p>A <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code> representing the URI of the website; if the livemark container doesn't have a valid site URI, <code>null</code> will be returned.</p>\n\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n\n<dl>\n <dt><code>NS_ERROR_INVALID_ARG</code></dt>\n <dd>If the folder ID isn't known or identifies a folder that isn't a livemark container.</dd>\n <dt><code>NS_ERROR_MALFORMED_URI</code></dt>\n <dd>If the site URI annotation has somehow been corrupted (and can't be turned into an <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code>)</dd>\n</dl>\n\n<h3 id=\"isLivemark()\" name=\"isLivemark()\">isLivemark()</h3>\n\n<p>This method determines whether the folder with the given folder ID identifies a livemark container.</p>\n\n<pre class=\"eval\">boolean isLivemark(\n  in long long folder\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>folder</code></dt>\n <dd>A folder ID.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<p><code>true</code> if the given folder is a livemark folder, otherwise it returns <code>false</code>.</p>\n\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n\n<dl>\n <dt><code>NS_ERROR_INVALID_ARG</code></dt>\n <dd>If the folder ID isn't known.</dd>\n</dl>\n\n<h3 id=\"reloadAllLivemarks()\" name=\"reloadAllLivemarks()\">reloadAllLivemarks()</h3>\n\n<p>This method reloads all livemark subscriptions, whether or not they have expired.</p>\n\n<pre class=\"eval\">void reloadAllLivemarks();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h3 id=\"reloadLivemarkFolder()\" name=\"reloadLivemarkFolder()\">reloadLivemarkFolder()</h3>\n\n<p>This method reloads the livemark with this folder ID, whether or not it's expired.</p>\n\n<pre class=\"eval\">void reloadLivemarkFolder(\n  in long long folderID\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>folderID</code></dt>\n <dd>The ID of the folder to be reloaded.</dd>\n</dl>\n\n<h3 id=\"setFeedURI()\" name=\"setFeedURI()\">setFeedURI()</h3>\n\n<p>This method sets the URI of the feed associated with a livemark container.</p>\n\n<p></p><div class=\"blockIndicator note\"><strong>Note:</strong> The caller is responsible for reloading the livemark after changing its feed URI (since the contents are likely to be different given a different feed).</div><p></p>\n\n<pre class=\"eval\">void setFeedURI(\n  in long long container,\n  in nsIURI feedURI\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>container</code></dt>\n <dd>The folder ID of a livemark container.</dd>\n <dt><code>feedURI</code></dt>\n <dd><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code> object representing the syndication feed URI.</dd>\n</dl>\n\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n\n<dl>\n <dt><code>NS_ERROR_INVALID_ARG</code></dt>\n <dd>If the folder ID isn't known or identifies a folder that isn't a livemark container; also if the <code>feedURI</code> parameter isn't a valid <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code> object.</dd>\n</dl>\n\n<h3 id=\"setSiteURI()\" name=\"setSiteURI()\">setSiteURI()</h3>\n\n<p>This method sets the URI of the website associated with a livemark container.</p>\n\n<pre class=\"eval\">void setSiteURI(\n  in long long container,\n  in nsIURI siteURI\n);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt><code>container</code></dt>\n <dd>The folder ID of a livemark container.</dd>\n <dt><code>siteURI</code></dt>\n <dd><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code> object representing the site URI, or <code>null</code> to clear the site URI for this livemark container.</dd>\n</dl>\n\n<h6 id=\"Exceptions_thrown\" name=\"Exceptions_thrown\">Exceptions thrown</h6>\n\n<dl>\n <dt><code>NS_ERROR_INVALID_ARG</code></dt>\n <dd>If the folder ID isn't known or identifies a folder that isn't a livemark container; also if the siteURI argument isn't a valid <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIURI\" title=\"\">nsIURI</a></code> object (or <code>null</code>)</dd>\n</dl>\n\n<p></p><h3 id=\"start()\">start()</h3><p></p>\n\n<p>This method starts the livemark refresh timer. Being able to manually control this allows activity such as bookmarks import to occur without kicking off HTTP traffic.</p>\n\n<pre class=\"eval\">void start();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<p></p><h3 id=\"stopUpdateLivemarks()\">stopUpdateLivemarks()</h3><p></p>\n\n<p>Stop the livemark refresh timer.</p>\n\n<pre class=\"eval\">void stopUpdateLivemarks();\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<p>None.</p>\n\n<h2 id=\"See_also\" name=\"See_also\">See also</h2>\n\n<ul>\n <li><a href=\"/en/Places\" title=\"en/Places\">Places</a></li>\n <li><a href=\"/en/Using_the_Places_livemark_service\" title=\"en/Using_the_Places_livemark_service\">Livemark Service</a></li>\n <li><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsINavBookmarksService\" title=\"\">nsINavBookmarksService</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Editmonkey\">Editmonkey</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/jgriffin\">jgriffin</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/J%C3%BCrgen%20Jeka\">Jürgen Jeka</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Arehman4\">Arehman4</a>",
    "title": "nsILivemarkService"
}