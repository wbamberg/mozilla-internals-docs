{
    "content": "<p></p><div style=\"border: solid #ddd 2px; margin-bottom: 12px;\">\n<div style=\"background: #eee; padding: 2px;\"><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/modules/libpr0n/public/imgIEncoder.idl\" rel=\"custom\">modules/libpr0n/public/imgIEncoder.idl</a></code><span style=\"text-align: right; float: right;\"><a href=\"/en-US/docs/Interfaces/About_Scriptable_Interfaces\" style=\"color: #00cc00; font-weight: 700;\">Scriptable</a></span></div>\n<span style=\"padding: 4px 2px;\">\n\n<i>Please add a summary to this article.</i>\n</span>\n\n  <div style=\"height: 42px; position: relative; padding: 2px; width: auto;\">\n\n  <div style=\"top: 22px; font-size: 11px; position: absolute;\">1.0</div>\n  \n  <div style=\"top: 22px; font-size: 11px; position: absolute; left: 0px; text-align: right; float: right; width: 100%;\">66</div>\n  \n  <div style=\"height: 8px; top: 16px; background: #dd0000; left: 0px; position: absolute; width: 5.714285714285714%;\"></div>\n  \n<div style=\"height: 8px; top: 16px; left: 5.714285714285714%; background: #00dd00; position: absolute; width: 94.28571428571429%;\" title=\"Introduced in Gecko 1.8 (Firefox 1.5 / Thunderbird 1.5 / SeaMonkey 1.0)\"></div>\n\n<div style=\"top: 0px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Introduced</div>\n<div style=\"top: 22px; font-size: 11px; position: absolute; left: 5.714285714285714%;\">Gecko 1.8</div>\n\n    <div style=\"height: 8px; top: 16px; left: 8.071428571428571%; background: #eeee00; position: absolute; width: 1%; border-radius: 4px; -webkit-border-radius: 4px;\" title=\"Last changed in Gecko 1.9 (Firefox 3)\"></div>\n    \n</div>\n\n<div style=\"background: #eee; padding: 2px;\">\nInherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIAsyncInputStream\" title=\"\">nsIAsyncInputStream</a></code>\n<span style=\"text-align: right; float: right;\">Last changed in Gecko 1.9 (Firefox 3)</span></div>\n</div><p></p>\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n<table class=\"standard-table\"> <tbody> <tr> <td><code>void <a href=\"#addImageFrame()\">addImageFrame</a>( [array, size_is(length), const] in PRUint8 data, in unsigned long length, in PRUint32 width, in PRUint32 height, in PRUint32 stride, in PRUint32 frameFormat, in AString frameOptions);</code> </td> </tr> <tr> <td><code>void <a href=\"#encodeClipboardImage()\">encodeClipboardImage</a>(in nsIClipboardImage aClipboardImage, out nsIFile aImageFile);</code> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 3)\">Obsolete since Gecko 1.9</span></td> </tr> <tr> <td><code>void <a href=\"#endImageEncode()\">endImageEncode</a>();</code> </td> </tr> <tr> <td><code>void <a href=\"#initFromData()\">initFromData</a>([array, size_is(length), const] in PRUint8 data, in unsigned long length, in PRUint32 width, in PRUint32 height, in PRUint32 stride, in PRUint32 inputFormat, in AString outputOptions);</code> </td> </tr> <tr> <td><code>void <a href=\"#startImageEncode()\">startImageEncode</a>(in PRUint32 width, in PRUint32 height, in PRUint32 inputFormat, in AString outputOptions);</code> </td> </tr> </tbody>\n</table>\n<h2 id=\"Constants\" name=\"Constants\">Constants</h2>\n<p>Possible values for input format (note that not all image formats support saving alpha channels):</p>\n<table class=\"standard-table\"> <tbody> <tr> <td class=\"header\">Constant</td> <td class=\"header\">Value</td> <td class=\"header\">Description</td> </tr> <tr> <td><code>INPUT_FORMAT_RGB</code></td> <td><code>0</code></td> <td>Input is RGB each pixel is represented by three bytes: R, G, and B (in that order, regardless of host endianness) </td> </tr> <tr> <td><code>INPUT_FORMAT_RGBA</code></td> <td><code>1</code></td> <td> <p>Input is RGB each pixel is represented by four bytes: R, G, and B (in that order, regardless of host endianness).</p> POST-MULTIPLIED alpha us used (For example 50% transparent red is 0xff000080) </td> </tr> <tr> <td><code>INPUT_FORMAT_HOSTARGB</code></td> <td><code>2</code></td> <td> <p>Input is host-endian ARGB: On big-endian machines each pixel is therefore ARGB, and for little-endian machiens (Intel) each pixel is BGRA (This is used by canvas to match it's internal representation)</p> PRE-MULTIPLIED alpha is used (That is, 50% transparent red is 0x80800000, not 0x80ff0000) </td> </tr> </tbody>\n</table>\n<pre class=\"eval\">Possible values for outputOptions. Multiple values are semicolon-separated.\n\nPNG:\n----\ntransparency=[yes|no|none]  --  default: \"yes\"\n    Overrides default from input format. \"no\" and \"none\" are equivalent.\n\nAPNG:\n-----\nThe following options can be used with startImageEncode():\n\ntransparency=[yes|no|none]  --  default: \"yes\"\n    Overrides default from input format. \"no\" and \"none\" are equivalent.\nskipfirstframe=[yes|no]  --  default: \"no\"\n    Controls display of the first frame in animations. PNG-only clients always display the first frame (and only that frame).\nframes=#  --  default: \"1\"\n    Total number of frames in the image. The first frame, even if skipped, is always included in the count.\nplays=#  --  default: \"0\"\n    Number of times to play the animation sequence. \"0\" will repeat forever.\n\nThe following options can be used for each frame, with addImageFrame():\n\ntransparency=[yes|no|none]  --  default: \"yes\"\n    Overrides default from input format. \"no\" and \"none\" are equivalent.\ndelay=#  --  default: \"500\"\n    Number of milliseconds to display the frame, before moving to the next frame.\ndispose=[none|background|previous]  --  default: \"none\"\n    What to do with the image's canvas before rendering the next frame. See APNG spec.\nblend=[source|over]  --  default: \"source\"\n    How to render the new frame on the canvas. See APNG spec.\nxoffset=#  --  default: \"0\"\nyoffset=#  --  default: \"0\"\n    Where to draw the frame, relative to the canvas.\n\nJPEG:\n-----\nquality=#  --  default: \"92\"\n   Quality of compression, 0-100 (worst-best). \n   Quality &gt;= 90 prevents down-sampling of the color channels.\n</pre>\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n<p></p><h3 id=\"addImageFrame()\">addImageFrame()</h3><p></p>\n<pre class=\"eval\">void addImageFrame(\n  [array, size_is(length), const] in PRUint8 data,\n  in unsigned long length,\n  in PRUint32 width,\n  in PRUint32 height,\n  in PRUint32 stride,\n  in PRUint32 frameFormat,\n  in AString frameOptions\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>data</code></dt> <dd>List of bytes in the format specified by <code>inputFormat</code>.</dd> <dt><code>length</code></dt> <dd>Missing Description</dd> <dt><code>width</code></dt> <dd>Width in pixels.</dd> <dt><code>height</code></dt> <dd>Height in pixels.</dd> <dt><code>stride</code></dt> <dd>The number of bytes per row in the image. Normally (width*3) or (width*4), depending on your input format, but some data uses padding at the end of each row, which would be extra.</dd> <dt><code>frameFormat</code></dt> <dd>Missing Description</dd> <dt><code>frameOptions</code></dt> <dd>Missing Description</dd>\n</dl>\n<p></p><div class=\"headingWithIndicator\">\n        <h3 id=\"encodeClipboardImage()\">encodeClipboardImage()</h3>\n        <span class=\"indicatorInHeadline obsolete obsoleteMethod\">Obsolete since Gecko 1.9 (Firefox 3)</span>\n        </div><p></p>\n<pre class=\"eval\">void encodeClipboardImage(\n  in nsIClipboardImage aClipboardImage,\n  out nsIFile aImageFile\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>aClipboardImage</code></dt> <dd>Missing Description</dd> <dt><code>aImageFile</code></dt> <dd>Missing Description</dd>\n</dl>\n<p></p><h3 id=\"endImageEncode()\">endImageEncode()</h3><p></p>\n<pre class=\"eval\">void endImageEncode();\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<p>None.</p>\n<p></p><h3 id=\"initFromData()\">initFromData()</h3><p></p>\n<pre class=\"eval\">void initFromData(\n  [array, size_is(length), const] in PRUint8 data,\n  in unsigned long length,\n  in PRUint32 width,\n  in PRUint32 height,\n  in PRUint32 stride,\n  in PRUint32 inputFormat,\n  in AString outputOptions\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>data</code></dt> <dd>List of bytes in the format specified by <code>inputFormat</code>.</dd> <dt><code>length</code></dt> <dd>Missing Description</dd> <dt><code>width</code></dt> <dd>Width in pixels.</dd> <dt><code>height</code></dt> <dd>Height in pixels.</dd> <dt><code>stride</code></dt> <dd>The number of bytes per row in the image. Normally (width*3) or (width*4), depending on your input format, but some data uses padding at the end of each row, which would be extra.</dd> <dt><code>inputFormat</code></dt> <dd>One of INPUT_FORMAT_* <a href=\"#constants\">constants</a> specifying the format of data.</dd> <dt><code>outputOptions</code></dt> <dd>Semicolon-delimited list of name=value pairs that can give options to the output encoder. Options are encoder-specific. Just give an empty string for default behavior.</dd>\n</dl>\n<p></p><h3 id=\"startImageEncode()\">startImageEncode()</h3><p></p>\n<pre class=\"eval\">void startImageEncode(\n  in PRUint32 width,\n  in PRUint32 height,\n  in PRUint32 inputFormat,\n  in AString outputOptions\n);\n</pre>\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n<dl> <dt><code>width</code></dt> <dd>Width in pixels.</dd> <dt><code>height</code></dt> <dd>Height in pixels.</dd> <dt><code>inputFormat</code></dt> <dd>One of INPUT_FORMAT_* <a href=\"#constants\">constants</a> specifying the format of data.</dd> <dt><code>outputOptions</code></dt> <dd>Semicolon-delimited list of name=value pairs that can give options to the output encoder. Options are encoder-specific. Just give an empty string for default behavior.</dd>\n</dl>\n<h2 id=\"Remarks\" name=\"Remarks\">Remarks</h2>\n<p>For encoding images which may contain multiple frames, the 1-shot <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIEncoder#initFromData()\">initFromData()</a></code> interface is too simplistic. The alternative is to use <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIEncoder#startImageEncode()\">startImageEncode()</a></code>, call <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIEncoder#addImageFrame()\">addImageFrame()</a></code> one or more times, and then finish initialization with <code><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/imgIEncoder#endImageEncode()\">endImageEncode()</a></code>.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "imgIEncoder"
}