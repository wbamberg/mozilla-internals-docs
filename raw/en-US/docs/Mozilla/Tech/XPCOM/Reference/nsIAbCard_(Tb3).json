{
    "content": "<div class=\"note\"><strong>Note:</strong> This interface has been overhauled completely for Thunderbird 3. Documentation for the <strong>old</strong> nsIAbCard interface is currently at <a href=\"en/NsIAbCard\">nsIAbCard</a>.</div>\n\n<p>The <code>nsIAbCard</code> interface is used to represent and manipulate cards in the address book. In a big change from the original <code>nsIAbCard</code>, properties are now stored in a hash table instead of as attributes on the interface, allowing it to be more flexible.</p>\n\n<p>Properties currently supported on the card:</p>\n\n<ul>\n <li>Names:\n  <ul>\n   <li>FirstName, LastName</li>\n   <li>PhoneticFirstName, PhoneticLastName</li>\n   <li>DisplayName, NickName</li>\n   <li>SpouseName, FamilyName</li>\n   <li>PrimaryEmail, SecondEmail</li>\n  </ul>\n </li>\n <li>Home Contact:\n  <ul>\n   <li>HomeAddress, HomeAddress2, HomeCity, HomeState, HomeZipCode, HomeCountry</li>\n   <li>HomePhone, HomePhoneType</li>\n  </ul>\n </li>\n <li>Work contact. Same as home, but with `Work' instead of `Home'</li>\n <li>Other Contact:\n  <ul>\n   <li>FaxNumber, FaxNumberType</li>\n   <li>PagerNumber, PagerNumberType</li>\n   <li>CellularNumber, CellularNumberType</li>\n   <li>JobTitle, Department, Company</li>\n   <li>_AimScreenName</li>\n  </ul>\n </li>\n <li>Dates:\n  <ul>\n   <li>AnniversaryYear, AnniversaryMonth, AnniversaryDay</li>\n   <li>BirthYear, BirthMonth, BirthDay</li>\n  </ul>\n </li>\n <li>WebPage1 (work), WebPage2 (home)</li>\n <li>Custom1, Custom2, Custom3, Custom4</li>\n <li>Notes</li>\n</ul>\n\n<ul>\n <li>Integral properties:\n  <ul>\n   <li>LastModifiedDate</li>\n   <li>PopularityIndex</li>\n   <li>PreferMailFormat (see <a href=\"en/NsIAbPreferMailFormat\">nsIAbPreferMailFormat</a>)</li>\n  </ul>\n </li>\n <li>Boolean properties:\n  <ul>\n   <li>AllowRemoteContent</li>\n  </ul>\n </li>\n</ul>\n\n<p>Inherits from: <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIAbItem\" title=\"\">nsIAbItem</a></code></p>\n\n<h2 id=\"Method_overview\" name=\"Method_overview\">Method overview</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td><code><a href=\"en/NsIVariant\">nsIVariant</a> <a href=\"#getProperty.28.29\">getProperty</a>(in AUTF8String name, in <a href=\"en/NsIVariant\">nsIVariant</a> defaultValue);</code></td>\n  </tr>\n  <tr>\n   <td><code>[noscript] AString <a href=\"#getPropertyAsAString.28.29\">getPropertyAsAString</a>(in string name);</code></td>\n  </tr>\n  <tr>\n   <td><code>[noscript] AUTF8String <a href=\"#getPropertyAsAUTF8String.28.29\">getPropertyAsAUTF8String</a>(in string name);</code></td>\n  </tr>\n  <tr>\n   <td><code>[noscript] PRUint32 <a href=\"#getPropertyAsUint32.28.29\">getPropertyAsUint32</a>(in string name);</code></td>\n  </tr>\n  <tr>\n   <td><code>[noscript] boolean <a href=\"#getPropertyAsBool.28.29\">getPropertyAsBool</a>(in string name);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#setProperty.28.29\">setProperty</a>(in AUTF8String name, in <a href=\"en/NsIVariant\">nsIVariant</a> value);</code></td>\n  </tr>\n  <tr>\n   <td><code>[noscript] void <a href=\"#setPropertyAsAString.28.29\">setPropertyAsAString</a>(in string name, in AString value);</code></td>\n  </tr>\n  <tr>\n   <td><code>[noscript] void <a href=\"#setPropertyAsAUTF8String.28.29\">setPropertyAsAUTF8String</a>(in string name, in AUTF8String value);</code></td>\n  </tr>\n  <tr>\n   <td><code>[noscript] void <a href=\"#setPropertyAsUint32.28.29\">setPropertyAsUint32</a>(in string name, in PRUint32 value);</code></td>\n  </tr>\n  <tr>\n   <td><code>[noscript] void <a href=\"#setPropertyAsBool.28.29\">setPropertyAsBool</a>(in string name, in boolean value);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#deleteProperty.28.29\">deleteProperty</a>(in AUTF8String name);</code></td>\n  </tr>\n  <tr>\n   <td><code>AUTF8String <a href=\"#translateTo.28.29\">translateTo</a>(in AUTF8String aType);</code></td>\n  </tr>\n  <tr>\n   <td><code>void <a href=\"#copy.28.29\">copy</a>(in <a href=\"en/NsIAbCard\">nsIAbCard</a> srcCard)</code></td>\n  </tr>\n  <tr>\n   <td><code>boolean <a href=\"#equals.28.29\">equals</a>(in <a href=\"en/NsIAbCard\">nsIAbCard</a> card)</code></td>\n  </tr>\n  <tr>\n   <td><code>AString <a href=\"#generatePhoneticName.28.29\">generatePhoneticName</a>(in boolean aLastNameFirst)</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Attributes\" name=\"Attributes\">Attributes</h2>\n\n<table class=\"standard-table\">\n <tbody>\n  <tr>\n   <td class=\"header\">Attribute</td>\n   <td class=\"header\">Type</td>\n   <td class=\"header\">Description</td>\n  </tr>\n  <tr>\n   <td><code>properties</code></td>\n   <td><code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsISimpleEnumerator\" title=\"\">nsISimpleEnumerator</a></code></td>\n   <td><strong>Readonly:</strong> A list of all the properties that this card has as an enumerator, whose members are all <a href=\"en/NsIProperty\">nsIProperty</a> objects.</td>\n  </tr>\n  <tr>\n   <td><code>firstName</code></td>\n   <td><code>AString</code></td>\n   <td>Shorthand for getProperty and setProperty.</td>\n  </tr>\n  <tr>\n   <td><code>lastName</code></td>\n   <td><code>AString</code></td>\n   <td>Shorthand for getProperty and setProperty.</td>\n  </tr>\n  <tr>\n   <td><code>displayName</code></td>\n   <td><code>AString</code></td>\n   <td>Shorthand for getProperty and setProperty.</td>\n  </tr>\n  <tr>\n   <td><code>primaryEmail</code></td>\n   <td><code>AString</code></td>\n   <td>Shorthand for getProperty and setProperty.</td>\n  </tr>\n  <tr>\n   <td>isMailList</td>\n   <td><code>boolean</code></td>\n   <td>If <code>isMailList</code> is true then <code>mailListURI</code> will contain the <a href=\"en/URI\">URI</a> of the associated mail list.\n    <div class=\"warning\">This will be removed from the interface at a later date.</div>\n   </td>\n  </tr>\n  <tr>\n   <td>mailListURI</td>\n   <td><code>string</code></td>\n   <td>If <code>isMailList</code> is true then <code>mailListURI</code> will contain the <a href=\"en/URI\">URI</a> of the associated mail list.\n    <div class=\"warning\">This will be removed from the interface at a later date.</div>\n   </td>\n  </tr>\n </tbody>\n</table>\n\n<h2 id=\"Methods\" name=\"Methods\">Methods</h2>\n\n<h3 id=\"getProperty.28.29\" name=\"getProperty.28.29\">getProperty()</h3>\n\n<p>Returns a property for the given name.</p>\n\n<pre class=\"eval\"> nsIVariant getProperty(in AUTF8String name, in nsIVariant defaultValue);\n</pre>\n\n<h6 id=\"Parameters\" name=\"Parameters\">Parameters</h6>\n\n<dl>\n <dt>name</dt>\n <dd>The case-sensitive name of the property to get.</dd>\n <dt>defaultValue</dt>\n <dd>The value to return if the property does not exist.</dd>\n</dl>\n\n<h6 id=\"Return_value\" name=\"Return_value\">Return value</h6>\n\n<dl>\n <dd>The value of the attribute asked for.</dd>\n</dl>\n\n<h6 id=\"Exceptions_Thrown\" name=\"Exceptions_Thrown\">Exceptions Thrown</h6>\n\n<dl>\n <dt>NS_ERROR_NOT_AVAILABLE&lt;tt&gt;</dt>\n <dd>If the named property does not exist.</dd>\n <dt>&lt;tt&gt;NS_ERROR_CANNOT_CONVERT_DATA</dt>\n <dd>If the property cannot be converted to the desired type.</dd>\n</dl>\n\n<h3 id=\"getPropertyAsAString.28.29\" name=\"getPropertyAsAString.28.29\">getPropertyAsAString()</h3>\n\n<h3 id=\"getPropertyAsAUTF8String.28.29\" name=\"getPropertyAsAUTF8String.28.29\">getPropertyAsAUTF8String()</h3>\n\n<h3 id=\"getPropertyAsUint32.28.29\" name=\"getPropertyAsUint32.28.29\">getPropertyAsUint32()</h3>\n\n<h3 id=\"getPropertyAsBool.28.29\" name=\"getPropertyAsBool.28.29\">getPropertyAsBool()</h3>\n\n<pre class=\"eval\"> [noscript] AString getPropertyAsAString(in string name);\n [noscript] AUTF8String getPropertyAsAUTF8String(in string name);\n [noscript] PRUint32 getPropertyAsUint32(in string name);\n [noscript] boolean getPropertyAsBool(in string name);\n</pre>\n\n<p>Returns a property for the given name. These functions convert values in the same manner as the default implementation of <a href=\"en/NsIVariant\">nsIVariant</a>. Of particular note is that boolean variables are converted to integers as in C/C++ (true is a non-zero value), so that <code>false</code> will be converted to a string of <code>0</code> and not <code>false&lt;code&gt;. </code></p>\n\n<p>These functions are marked &lt;code&gt;[noscript] since <a href=\"en/XPCconnect\">XPCconnect</a> performs automatic type conversion on <a href=\"en/NsIVariant\">nsIVariant</a> such that they are not needed for scripts, only for C++ callers.</p>\n\n<h6 id=\"Parameters_2\" name=\"Parameters_2\">Parameters</h6>\n\n<dl>\n <dt>name</dt>\n <dd>The case-sensitive name of the property to get.</dd>\n</dl>\n\n<h6 id=\"Return_value_2\" name=\"Return_value_2\">Return value</h6>\n\n<dl>\n <dd>The value of the attribute asked for.</dd>\n</dl>\n\n<h6 id=\"Exceptions_Thrown_2\" name=\"Exceptions_Thrown_2\">Exceptions Thrown</h6>\n\n<dl>\n <dt>NS_ERROR_NOT_AVAILABLE&lt;tt&gt;</dt>\n <dd>If the named property does not exist.</dd>\n <dt>&lt;tt&gt;NS_ERROR_CANNOT_CONVERT_DATA</dt>\n <dd>If the property cannot be converted to the desired type.</dd>\n</dl>\n\n<pre class=\"eval\"> [noscript] AString getPropertyAsAString(in string name);\n [noscript] AUTF8String getPropertyAsAUTF8String(in string name);\n [noscript] PRUint32 getPropertyAsUint32(in string name);\n [noscript] boolean getPropertyAsBool(in string name);\n</pre>\n\n<h3 id=\"setProperty.28.29\" name=\"setProperty.28.29\">setProperty()</h3>\n\n<h3 id=\"setPropertyAsAString.28.29\" name=\"setPropertyAsAString.28.29\">setPropertyAsAString()</h3>\n\n<h3 id=\"setPropertyAsAUTF8String.28.29\" name=\"setPropertyAsAUTF8String.28.29\">setPropertyAsAUTF8String()</h3>\n\n<h3 id=\"setPropertyAsUint32.28.29\" name=\"setPropertyAsUint32.28.29\">setPropertyAsUint32()</h3>\n\n<h3 id=\"setPropertyAsBool.28.29\" name=\"setPropertyAsBool.28.29\">setPropertyAsBool()</h3>\n\n<p>Assigns the given to value to the property of the given name. Should the property exist, its value will be overwritten. An implementation may impose additional semantic constraints for certain properties. However, such constraints might not be checked by this method.</p>\n\n<p>These functions convert values in the same manner as the default implementation of <a href=\"en/NsIVariant\">nsIVariant</a>.</p>\n\n<div class=\"warning\">A value MUST be convertible to a string; if this convention is not followed, consumers of cards may fail unpredictably or return incorrect results.</div>\n\n<p>The non-variant functions are marked <code>[noscript]</code> since <a href=\"en/XPConnect\">XPConnect</a> uses magic with <a href=\"en/NsIVariant\">nsIVariant</a> such that the other functions are not needed, although C++ does need them.</p>\n\n<pre class=\"eval\"> void setProperty(in AUTF8String name, in nsIVariant value);\n [noscript] void setPropertyAsAString(in string name, in AString value);\n [noscript] void setPropertyAsAUTF8String(in string name, in AUTF8String value);\n [noscript] void setPropertyAsUint32(in string name, in PRUint32 value);\n [noscript] void setPropertyAsBool(in string name, in boolean value);\n</pre>\n\n<h6 id=\"Parameters_3\" name=\"Parameters_3\">Parameters</h6>\n\n<dl>\n <dt>name</dt>\n <dd>The case-sensitive name of the property to set.</dd>\n <dt>value</dt>\n <dd>The new value of the property.</dd>\n</dl>\n\n<h3 id=\"deleteProperty.28.29\" name=\"deleteProperty.28.29\">deleteProperty()</h3>\n\n<p>Deletes the property with the given name. Some properties may not be deleted. However, the implementation will not check this constraint at this method. If such a property is deleted, an error may be thrown when the card is modified at the database level.</p>\n\n<pre class=\"eval\"> void deleteProperty(in AUTF8String name);\n</pre>\n\n<h6 id=\"Parameters_4\" name=\"Parameters_4\">Parameters</h6>\n\n<dl>\n <dt>name</dt>\n <dd>The case-sensitive name of the property to set.</dd>\n</dl>\n\n<h3 id=\"translateTo.28.29\" name=\"translateTo.28.29\">translateTo()</h3>\n\n<p>Translates a card into a specific format. The following types are supported:</p>\n\n<ul>\n <li><code>base64xml</code></li>\n <li><code>xml</code></li>\n <li><code>vcard</code></li>\n</ul>\n\n<pre class=\"eval\"> AUTF8String translateTo(in AUTF8String aType);\n</pre>\n\n<h6 id=\"Parameters_5\" name=\"Parameters_5\">Parameters</h6>\n\n<dl>\n <dt>aType</dt>\n <dd>The type of item to translate the card into.</dd>\n</dl>\n\n<h6 id=\"Return_value_3\" name=\"Return_value_3\">Return value</h6>\n\n<p>A string containing the translated card.</p>\n\n<h6 id=\"Exceptions_Thrown_3\" name=\"Exceptions_Thrown_3\">Exceptions Thrown</h6>\n\n<dl>\n <dt>NS_ERROR_ILLEGAL_VALUE</dt>\n <dd>Type not recognized.</dd>\n</dl>\n\n<h3 id=\"copy.28.29\" name=\"copy.28.29\">copy()</h3>\n\n<p>This function will copy all values from one card to another.</p>\n\n<pre class=\"eval\">void copy(in nsIAbCard srcCard)\n</pre>\n\n<h6 id=\"Parameters_6\" name=\"Parameters_6\">Parameters</h6>\n\n<dl>\n <dt>srcCard</dt>\n <dd>The source card to copy values from.</dd>\n</dl>\n\n<h3 id=\"equals.28.29\" name=\"equals.28.29\">equals()</h3>\n\n<p>Returns <code>true</code> if this card is equal to the other card. The default implementation defines equal as this card pointing to the same object as <code>aCard</code>. Another implementation defines it as equality of properties and values.</p>\n\n<div class=\"warning\">The exact nature of equality is still undefined, and actual results may not match theoretical results. Most notably, the code a.equals(b) == b.equals(a) might not return <code>true</code>. In particular, calling equals on cards from different address books may return inaccurate results.</div>\n\n<pre class=\"eval\">boolean equals(in nsIAbCard card)\n</pre>\n\n<h6 id=\"Parameters_7\" name=\"Parameters_7\">Parameters</h6>\n\n<dl>\n <dt>card</dt>\n <dd>The card you are comparing with.</dd>\n</dl>\n\n<h6 id=\"Return_value_4\" name=\"Return_value_4\">Return value</h6>\n\n<dl>\n <dd><code>true</code> if the cards are the same.</dd>\n</dl>\n\n<h3 id=\"generatePhoneticName.28.29\" name=\"generatePhoneticName.28.29\">generatePhoneticName()</h3>\n\n<p>Generate a phonetic name from the card, using the firstName and lastName values.</p>\n\n<pre class=\"eval\">AString generatePhoneticName(in boolean aLastNameFirst)\n</pre>\n\n<h6 id=\"Parameters_8\" name=\"Parameters_8\">Parameters</h6>\n\n<dl>\n <dt>aLastNameFirst</dt>\n <dd>Set to <code>true</code> to put the last name before the first.</dd>\n</dl>\n\n<h6 id=\"Return_value_5\" name=\"Return_value_5\">Return value</h6>\n\n<dl>\n <dd>A string containing the generated phonetic name.</dd>\n</dl>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Wjjohnst\">Wjjohnst</a>",
    "title": "nsIAbCard/Thunderbird3"
}