{
    "content": "<p> « <a href=\"/en-US/docs/XPCOM_API_Reference\">XPCOM API Reference</a>\n</p>\n<h3 id=\"Summary\" name=\"Summary\"> Summary </h3>\n<p>The <code>NS_CStringContainerInit2</code> function initializes a <code><a href=\"en/NsCStringContainer\">nsCStringContainer</a></code> instance for use as a <code><a href=\"en/NsACString\">nsACString</a></code>.\n</p>\n<pre class=\"eval\">#include \"nsStringAPI.h\"\n \nnsresult NS_CStringContainerInit2(\n  nsCStringContainer&amp; <var>aContainer</var>,\n  const char* <var>aData</var> = nsnull,\n  PRUint32 <var>aDataLength</var> = PR_UINT32_MAX,\n  PRUint32 <var>aFlags</var> = 0\n);\n</pre>\n<h3 id=\"Parameters\" name=\"Parameters\"> Parameters </h3>\n<dl><dt> aContainer\n</dt><dd> [in] The <code><a href=\"en/NsCStringContainer\">nsCStringContainer</a></code> instance to initialize.\n</dd></dl>\n<dl><dt> aData\n</dt><dd> [in] An array of characters used to initialize the string object. This parameter may be null.\n</dd></dl>\n<dl><dt> aDataLength\n</dt><dd> [in] An optional parameter that specifies the length of the array pointed to by <var>aData</var>. Pass <code>PR_UINT32_MAX</code> to indicate that <var>aData</var>'s length may be determined by scanning the string for a terminating null. If <var>aData</var> is null, then this parameter is ignored.\n</dd></dl>\n<dl><dt> aFlags\n</dt><dd> [in] A bit-field that modifies how the string object is initialized. If this value is zero, then the array referenced by <var>aData</var> (if any) will be copied. <a href=\"#Flag_Values\">Flag values</a> are defined below.\n</dd></dl>\n<h3 id=\"Flag_Values\" name=\"Flag_Values\"> Flag Values </h3>\n<p>The <var>aFlags</var> parameter is a bit-wise combination of the following values:\n</p>\n<dl><dt> NS_CSTRING_CONTAINER_INIT_DEPEND\n</dt><dd> Data passed into <code>NS_CStringContainerInit2</code> is not copied. Instead, the string references the passed in data pointer directly. The caller must ensure that the data is valid for the lifetime of the string container. This flag should not be combined with <code>NS_CSTRING_CONTAINER_INIT_ADOPT</code>.\n</dd><dt> NS_CSTRING_CONTAINER_INIT_ADOPT\n</dt><dd> Data passed into NS_CStringContainerInit2 is not copied. Instead, the string takes ownership over the data pointer. The caller must have allocated the data array using the <a href=\"en/NS_GetMemoryManager\">XPCOM memory allocator</a>. This flag should not be combined with <code>NS_CSTRING_CONTAINER_INIT_DEPEND</code>.\n</dd><dt> NS_CSTRING_CONTAINER_INIT_SUBSTRING\n</dt><dd> Data passed into <code>NS_CStringContainerInit2</code> is a substring that is not null-terminated.\n</dd></dl>\n<h3 id=\"Return_Values\" name=\"Return_Values\"> Return Values </h3>\n<p>The <code>NS_CStringContainerInit</code> function returns <code>NS_OK</code> if successful. Otherwise, it returns an error code.\n</p>\n<h3 id=\"Remarks\" name=\"Remarks\"> Remarks </h3>\n<p>After a <code>nsCStringContainer</code> object has been initialized via <code>NS_CStringContainerInit2</code>, it may be used as an ordinary <code><a href=\"en/NsACString\">nsACString</a></code> object. When the string object is no longer needed, it should be passed to <code><a href=\"en/NS_CStringContainerFinish\">NS_CStringContainerFinish</a></code> to free any extra memory that the string object may have allocated.\n</p><p>It is generally better to use one of the helper classes, such as <code><a href=\"en/NsCString\">nsCString</a></code>, instead of coding directly to <code>NS_CStringContainerInit2</code> because those classes take care of cleaning up the string object when it goes out of scope.\n</p><p>When <code>NS_CStringContainerInit2</code> is told to copy <var>aData</var>, the copy it creates is null-terminated. This is significant as it allows the programmer to be certain that <code><a href=\"en/NS_CStringGetData\">NS_CStringGetData</a></code> will return a null-terminated character array.\n</p><p>The <code><a href=\"en/NS_CStringContainerInit\">NS_CStringContainerInit</a></code> function is equivalent to calling <code>NS_CStringContainerInit</code> with <var>aData=nsnull</var> and <var>aFlags=0</var>.\n</p>\n<h3 id=\"History\" name=\"History\"> History </h3>\n<p>This function was finalized for Mozilla 1.8. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=264274\" title=\"FIXED: support dependent strings in frozen string API\">bug 264274</a> for details.\n</p>\n<h3 id=\"See_Also\" name=\"See_Also\"> See Also </h3>\n<p><code><a href=\"en/NS_CStringContainerInit\">NS_CStringContainerInit</a></code>,\n<code><a href=\"en/NS_CStringContainerFinish\">NS_CStringContainerFinish</a></code>\n</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/DarinFisher\">DarinFisher</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>",
    "title": "NS_CStringContainerInit2"
}