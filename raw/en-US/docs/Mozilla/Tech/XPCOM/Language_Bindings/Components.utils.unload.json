{
    "content": "<p></p>\n<p><code><a href=\"/en-US/docs/Components.utils\">Components.utils</a>.unload</code> was introduced in <a href=\"/en/Firefox_7_for_developers\" title=\"en/Firefox_7_for_developers\">Firefox 7</a> and is used to unload <a href=\"/en/JavaScript_code_modules\" title=\"en/JavaScript code modules\">JavaScript code modules</a>. This can be particularly handy with <a href=\"/en/Extensions/Bootstrapped_extensions\" title=\"en/Extensions/Bootstrapped_extensions\">restartless (boostrapped) extensions</a>, so that you can unload an old version of a code module when a new version of your add-on is installed.</p>\n<p>Once this method has been called, references to the module will continue to work but any subsequent import of the module will reload it and give a new reference. If the JavaScript code module has not yet been imported then this method will do nothing.</p>\n<p>You should not unload modules that are part of the application (anything under <code><a class=\"external\" rel=\"freelink\">resource://gre/</a></code> or <code>resource:///</code> or <code><a class=\"external\" rel=\"freelink\">resource://app/</a></code>) as these may be in use by other extensions and the application. Only unload modules you include as part of your extension.</p>\n<h3 id=\"Syntax\" name=\"Syntax\">Syntax</h3>\n<pre>Components.utils.unload( <em>url</em> );\n</pre>\n<h3 id=\"Parameters\" name=\"Parameters\">Parameters</h3>\n<dl>\n <dt>\n  <code>url</code></dt>\n <dd>\n  The \"resource://\" URL of the script to unload. This must be the same URL that was used to load the script.</dd>\n</dl>\n<h3 id=\"Example\" name=\"Example\">Example</h3>\n<p>You can unload a module called MyModule.jsm using the following line of code:</p>\n<pre class=\"eval\">Components.utils.unload(\"<span class=\"nowiki\">resource://myaddon/modules/MyModule.jsm</span>\");\n</pre>\n<div class=\"note\">\n <strong>Note:</strong> Currently Components.utils.unload clears the global object of an unloaded module. This may cause modules to misbehave after unloading even if you have a reference to them. See <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=769253\" title=\"JSM global variables are collected on Cu.unload()\">bug 769253</a></div>\n<h3 id=\"See_also\">See also</h3>\n<ul>\n <li><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=481603\" title=\"FIXED: Add a way to unload JS modules loaded with Components.utils.import\">bug 481603</a></li>\n <li>The documentation in <a href=\"https://dxr.mozilla.org/mozilla-central/source/js/xpconnect/idl/xpccomponents.idl\" rel=\"custom\">xpccomponents.idl</a></li>\n <li>The tests in <code><a href=\"https://dxr.mozilla.org/mozilla-central/source/js/xpconnect/tests/unit/\" rel=\"custom\">js/xpconnect/tests/unit/</a></code></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/miket\">miket</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kevincox\">kevincox</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Delapouite\">Delapouite</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mnoorenberghe\">mnoorenberghe</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/MKaply\">MKaply</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mossop\">Mossop</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>",
    "title": "Components.utils.unload"
}