{
    "content": "<p>Imports various objects into a system scope.</p>\n\n<p>System scopes such as <a href=\"/en-US/docs/Mozilla/JavaScript_code_modules\">JSMs</a> and <a href=\"/en-US/Firefox/Multiprocess_Firefox/The_message_manager\">frame scripts</a> don't have certain objects, such as <a href=\"/en-US/docs/Web/API/IndexedDB_API\"><code>indexedDB</code></a> and <a href=\"/en-US/docs/Web/API/XMLHttpRequest\"><code>XMLHttpRequest</code></a>, that are available to DOM window globals. Using this API you can import these objects into such a system scope.</p>\n\n<p>This function is not intended for sandboxes but for system-privileged scopes. To import these objects into a sandbox, use the <code>wantGlobalProperties</code> option in the <a href=\"/en-US/docs/Components.utils.Sandbox\"><code>Sandbox</code></a> constructor.</p>\n\n<p>This function is passed an array of strings. Each string is the name of an object to import, and will be defined on the importing scope's global. The following strings are supported:</p>\n\n<table class=\"standard-table\">\n <thead>\n  <tr>\n   <th scope=\"col\">String/Object</th>\n   <th scope=\"col\">XPCOM Component</th>\n  </tr>\n </thead>\n <tbody>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64.atob\">atob</a></code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Blob\">Blob </a></code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64.btoa\">btoa</a></code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/API/Crypto\" title=\"The Crypto interface represents basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives.\"><code>crypto</code></a> </td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/CSS\">CSS </a></code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><a href=\"/en-US/docs/Web/API/GlobalFetch/fetch\">fetch</a> </td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/File\">File </a></code></td>\n   <td><a href=\"/en-US/docs/nsIDOMFile\">nsIDOMFile</a></td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IDBEnvironment.indexedDB\">indexedDB</a></code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/NodeFilter\">NodeFilter</a></code> <span class=\"inlineIndicator firefoxVersionBadge\" title=\"New in Firefox 60\"><span class=\"badgeText\"><a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/60\">Firefox 60</a></span></span></td>\n   <td><a href=\"/en-US/docs/nsIDOMNodeFilter\">nsIDOMNodeFilter</a> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 60 / Thunderbird 60 / SeaMonkey 2.57)\">Obsolete since Gecko 60</span></td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://dxr.mozilla.org/mozilla-central/source/dom/webidl/RTCIdentityProvider.webidl\">rtcIdentityProvider</a></code> </td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder\">TextDecoder</a></code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\">TextEncoder</a></code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URL\">URL</a></code></td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\">URLSearchParams</a></code> </td>\n   <td> </td>\n  </tr>\n  <tr>\n   <td><code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\">XMLHttpRequest</a></code></td>\n   <td><a href=\"/en-US/docs/nsIXMLHttpRequest\">nsIXMLHttpRequest</a> <span class=\"inlineIndicator obsolete obsoleteInline\" title=\"(Firefox 60 / Thunderbird 60 / SeaMonkey 2.57)\">Obsolete since Gecko 60</span></td>\n  </tr>\n </tbody>\n</table>\n\n<div class=\"note\">\n<p>For string/object in table without a minimum firefox version, it is not exactly known since when it was available, however it is guranteed available from Firefox 28 and up.</p>\n</div>\n\n<h2 id=\"Syntax\" name=\"Syntax\">Syntax</h2>\n\n<pre class=\"eval\">void Components.utils.importGlobalProperties([string1, string2, ...]);\n</pre>\n\n<h3 id=\"Parameters\" name=\"Parameters\">Parameters</h3>\n\n<dl>\n <dt><code>[string1, string2, ...]</code></dt>\n <dd>An array of strings. Each string is the name of an object to import.</dd>\n</dl>\n\n<h2 id=\"Example\" name=\"Example\">Example</h2>\n\n<pre class=\"brush: js\">Components.utils.import(\"resource://gre/modules/devtools/Console.jsm\");\n\nComponents.utils.importGlobalProperties([\"atob\", \"btoa\"]);\nvar encoded = btoa(\"Hello\");\nconsole.log(encoded);               // \"SGVsbG8=\"\nconsole.log(atob(encoded));         // \"Hello\"</pre>\n\n<h2 id=\"Example\" name=\"Example\">Alternative Methods</h2>\n\n<p>If <code>importGlobalProperties </code>does not support the targeted Firefox version, here are some alternative methods to import these objects.</p>\n\n<h3 id=\"Import_from_JSM\">Import from JSM</h3>\n\n<p>This method worked until <a href=\"/en-US/docs/Web/API/Blob\"><code>Blob</code></a> and <a href=\"/en-US/docs/Web/API/File\"><code>File</code></a> were no longer apart of JSM modules. It is suspected this works up till Firefox 35.</p>\n\n<p>This imports <a href=\"/en-US/docs/Web/API/Blob\">Blob</a>, <code><a href=\"/en-US/docs/Web/API/File\">File</a></code>, along with the regular <code>Services</code>. The reason this works is because <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules\">JS Code Modules</a> actually have <a href=\"/en-US/docs/Web/API/Blob\">Blob</a> and <code><a href=\"/en-US/docs/Web/API/File\">File</a></code>. <code>Cu.import()</code> will return the full global of a code module. Knowing that, we can just get a valid <a href=\"/en-US/docs/Web/API/Blob\">Blob</a> by importing a known module that has the objects, such as <code>Services.jsm</code></p>\n\n<pre class=\"default prettyprint prettyprinted\"><code><span class=\"kwd\">const</span><span class=\"pln\"> </span><span class=\"pun\">{</span><span class=\"typ\">Blob</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"typ\">File, Services</span><span class=\"pun\">}</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Cu</span><span class=\"pun\">.</span><span class=\"kwd\">import</span><span class=\"pun\">(</span><span class=\"str\">\"resource://gre/modules/Services.jsm\"</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"pun\">{});</span></code></pre>\n\n<p><span class=\"pun\">Reference: </span><a href=\"http://stackoverflow.com/a/19780896/1828637\">Stackoverflow :: Use Blob on firefox add-on</a></p>\n\n<h3 id=\"hiddenDOMWindow\"><span class=\"pun\">hiddenDOMWindow</span></h3>\n\n<p>The hidden DOMWindow has all of these objects automatically imported. The downside of using hiddenDOMWindow is that on startup of Firefox, the hiddenDOMWindow objects cannot be accessed until it is fully loaded. Therefore readyState must be checked, if it is not complete, then a load listener must be attached. Once readyState is complete then the objects can be used.</p>\n\n<p>For example this is how to ues the <code><a href=\"/en-US/docs/Web/API/File\">File</a></code> object.</p>\n\n<pre class=\"default prettyprint prettyprinted\"><code><span class=\"kwd\">var</span><span class=\"pln\"> domfile </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Services</span><span class=\"pun\">.</span><span class=\"pln\">appShell</span><span class=\"pun\">.</span><span class=\"pln\">hiddenDOMWindow</span><span class=\"pun\">.</span><span class=\"typ\">File</span><span class=\"pun\">(</span><span class=\"pln\">'</span></code>/path/to/file'<code><span class=\"pun\">);</span></code></pre>\n\n<h3 id=\"XPCOM_Components\"><span class=\"pun\">XPCOM Components</span></h3>\n\n<p><span class=\"pun\">Some objects have an XPCOM alternative, which typically allows more flexibility then the DOM version</span></p>\n\n<p>Here is an example of how to use the <a href=\"/en-US/docs/Web/API/XMLHttpRequest\">DOM XMLHttpRequest</a> through XPCOM interface of <a href=\"/en-US/docs/nsIXMLHttpRequest\">nsIXMLHttpRequest</a>:</p>\n\n<pre class=\"default prettyprint prettyprinted\"><code><span class=\"kwd\">var</span><span class=\"pln\"> oReq </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">Cc</span><span class=\"pun\">[</span><span class=\"str\">\"@mozilla.org/xmlextras/xmlhttprequest;1\"</span><span class=\"pun\">].</span><span class=\"pln\">createInstance</span><span class=\"pun\">(</span><span class=\"typ\">Ci</span><span class=\"pun\">.</span><span class=\"pln\">nsIXMLHttpRequest</span><span class=\"pun\">);</span></code></pre>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>",
    "title": "Components.utils.importGlobalProperties"
}