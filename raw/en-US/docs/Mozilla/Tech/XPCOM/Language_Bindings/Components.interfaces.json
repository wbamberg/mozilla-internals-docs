{
    "content": "<p><code>Components.interfaces</code> is a read-only object whose properties are interfaces indexed by their names.</p>\n\n<h2 id=\"Introduction\" name=\"Introduction\">Introduction</h2>\n\n<p><code>Components.interfaces</code> is a read-only object whose properties implement the <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIJSIID\" title=\"\">nsIJSIID</a></code> interface. Each object represents one of the <a href=\"/en/XPCOM\" title=\"en/XPCOM\">XPCOM</a> interfaces -- that some component or another might or might not implement. It reflects only those interfaces which have been designated in their <code>.idl</code> description as <code>scriptable</code>, that is the interfaces which <a href=\"/en/XPConnect\" title=\"en/XPConnect\">XPConnect</a> is capable of reflecting into JavaScript.</p>\n\n<p>Properties of the <code>Components.interfaces</code> object are used where XPCOM methods expect a parameter of type <code>nsID</code>. This includes <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsISupports#QueryInterface()\">nsISupports.QueryInterface()</a></code>, the optional parameter accepted by <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIJSCID#getService()\">nsIJSCID.getService()</a></code>, <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIJSCID#createInstance()\">nsIJSCID.createInstance()</a></code> when called from JavaScript, and <code><a href=\"https://developer.mozilla.org/en-US/docs/XPCOM_Interface_Reference/nsIClassInfo#getInterfaces()\">nsIClassInfo.getInterfaces()</a></code>.</p>\n\n<p>The properties of the <code>Components.interfaces</code> object can be enumerated using a <a href=\"/en/JavaScript/Reference/Statements/for...in\" title=\"en/JavaScript/Reference/Statements/for...in\">for...in</a> loop.</p>\n\n<h2 id=\"Usage\" name=\"Usage\">Usage</h2>\n\n<h3 id=\"Accessing_an_interface_object\" name=\"Accessing_an_interface_object\">Accessing an interface object</h3>\n\n<p>Properties of the <code>Components.interfaces</code> object are indexed by interface name. You can retrieve an interface object using:</p>\n\n<pre class=\"eval\">var iface = Components.interfaces.nsISupportsArray;\n</pre>\n\n<p>This will return you the interface object for the <code>nsISupportsArray</code> interface.</p>\n\n<h3 id=\"Accessing_constants_defined_in_an_interface\" name=\"Accessing_constants_defined_in_an_interface\">Accessing constants defined in an interface</h3>\n\n<p>Interface descriptions (cf. <a href=\"/en/XPIDL\" title=\"en/XPIDL\">XPIDL</a>) may not only contain method declarations, but also constants. For example, assume we have the following interface declaration:</p>\n\n<pre class=\"eval\">interface nsIFoo : nsISupports {\n  const PRUint32 MYFLAG = 5;\n};\n</pre>\n\n<p>The constant <code>MYFLAG</code> can then be accessed using</p>\n\n<pre class=\"eval\">var myFlag = Components.interfaces.nsIFoo.MYFLAG;\n</pre>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SphinxKnight\">SphinxKnight</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mgjbot\">Mgjbot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Andreas%20Wuest\">Andreas Wuest</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Waldo\">Waldo</a>",
    "title": "Components.interfaces"
}