{
    "content": "<p></p>\n\n<p><code><a href=\"/en-US/docs/Components.utils\">Components.utils</a>.import</code> was introduced in <a href=\"/en/Firefox_3_for_developers\" title=\"en/Firefox_3_for_developers\">Firefox 3</a> and is used for sharing code between different scopes easily. For example, you can import <a href=\"/en/JavaScript_code_modules/XPCOMUtils.jsm\" title=\"en/XPCOMUtils.jsm\">XPCOMUtils.jsm</a> to avoid copy/pasting long XPCOM component registration boilerplate in your component files.</p>\n\n<p>See <a href=\"/en/JavaScript_code_modules/Using\" title=\"en/Using_JavaScript_code_modules\">Using JavaScript code modules</a> for more details.</p>\n\n<div class=\"note\">\n<p><strong>Note:</strong> Prior to <span title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Gecko 2.0</span>, JavaScript code modules could only be loaded using <strong>file:</strong> or <strong>resource:</strong> URLs. <span title=\"(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1)\">Gecko 2.0</span> adds support for loading modules from <strong>chrome:</strong> URLs, even those inside JAR archives.</p>\n</div>\n\n<h3 id=\"Syntax\" name=\"Syntax\">Syntax</h3>\n\n<pre class=\"syntaxbox\">Components.utils.import<em>(url</em> [, <em>scope</em>]);\n\n// Or, if you use a tool such as jslint which reports compiler errors for the above,\n\nComponents.utils[\"import\"](<em>url </em>[, <em>scope</em>]);</pre>\n\n<h3 id=\"Parameters\" name=\"Parameters\">Parameters</h3>\n\n<dl>\n <dt><code>url</code></dt>\n <dd>A string of the URL of the script to be loaded. The URL must point to a file on the disk, possibly in a JAR.</dd>\n <dt><code>scope</code></dt>\n <dd>An optional object to import onto; if omitted, the global object is used.</dd>\n</dl>\n\n<div class=\"warning\">\n<p>Under Boot2Gecko, the scope is not optional. If your code is meant to work on all platforms, you should always provide a scope.</p>\n\n<p>In case of doubt, <code>this</code> is generally a good scope.</p>\n</div>\n\n<dl>\n <dt>return value</dt>\n <dd>the module's global object.<br>\n use of the return value is discouraged since it grants access to the module's internal properties which are not part of its public API.</dd>\n</dl>\n\n<p>import throws if it encounters an error (like a syntax error) in the file it reads.</p>\n\n<h3 id=\"Example\" name=\"Example\">Example</h3>\n\n<pre class=\"brush: js\">Components.utils.import(\"<a class=\"external\" rel=\"freelink\">resource://gre/modules/XPCOMUtils.jsm</a>\", <strong>this</strong>);\n</pre>\n\n<h3 id=\"Difference_from_mozIJSSubScriptLoader\" name=\"Difference_from_mozIJSSubScriptLoader\">Difference from mozIJSSubScriptLoader</h3>\n\n<p>The differences from <code><a href=\"/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/mozIJSSubScriptLoader\" title=\"\">mozIJSSubScriptLoader</a></code>:</p>\n\n<p>The behavior when importing/loading the same code from different locations:</p>\n\n<ul>\n <li>the subscript loader evaluates the specified code each time it is invoked, with the caller's global object.</li>\n <li><code>Components.utils.import</code> evaluates the code of each module only once, in its own scope.</li>\n</ul>\n\n<p>For example:</p>\n\n<pre class=\"brush: js\">var scope1 = {}, scope2 = {};\nComponents.utils.import(\"<a class=\"external\" rel=\"freelink\">resource://gre/modules/JSON.jsm</a>\", scope1);\nComponents.utils.import(\"<a class=\"external\" rel=\"freelink\">resource://gre/modules/JSON.jsm</a>\", scope2);\nassert(scope2.XPCOMUtils === scope1.XPCOMUtils);\n</pre>\n\n<p>...returns <code>true</code>, whereas:</p>\n\n<pre class=\"brush: js\">var someURL = \"<a class=\"external\" rel=\"freelink\">resource://gre/modules/JSON.jsm</a>\"; \nvar obj1 = {}, obj2 = {}; \nvar loader = Components.classes[\"@mozilla.org/moz/jssubscript-loader;1\"]\n                       .getService(Components.interfaces.mozIJSSubScriptLoader); \nloader.loadSubScript(someURL, obj1); \nloader.loadSubScript(someURL, obj2);\nassert(obj2 === obj1);\n</pre>\n\n<p>...returns <code>false</code>.</p>\n\n<p>This means <code>Components.utils.import</code> is better suited for efficient sharing of code (and data?) between JS scripts running in different scope.</p>\n\n<h3 id=\"Additional_Resources\" name=\"Additional_Resources\">Additional Resources</h3>\n\n<ul>\n <li><a href=\"/en-US/docs/Components.utils\">Components.utils</a></li>\n <li><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=238324\" title=\"FIXED: Implement JavaScript code-sharing module system\">bug 238324</a></li>\n <li>The documentation in <a href=\"https://dxr.mozilla.org/mozilla-central/source/js/xpconnect/idl/xpccomponents.idl\" rel=\"custom\">xpccomponents.idl</a></li>\n <li>The tests in <code><a href=\"https://dxr.mozilla.org/mozilla-central/source/js/xpconnect/tests/unit/\" rel=\"custom\">js/xpconnect/tests/unit/</a></code></li>\n <li><a href=\"/en-US/docs/Mozilla/JavaScript_code_modules/Using#Importing_CommonJS_modules\">Importing SDK/CommonJS modules into other code</a></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mfluehr\">mfluehr</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/marco-c\">marco-c</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/The_8472\">The_8472</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Yoric\">Yoric</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Delapouite\">Delapouite</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/malmasry\">malmasry</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kmaglione\">kmaglione</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Hans.Hokke\">Hans.Hokke</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Wladimir_Palant\">Wladimir_Palant</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Blake_Binkley\">Blake_Binkley</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mnoorenberghe\">mnoorenberghe</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mhammond\">mhammond</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mook\">Mook</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/fscholz\">fscholz</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/DaveG\">DaveG</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mgjbot\">Mgjbot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/FireRabbit\">FireRabbit</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Waldo\">Waldo</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/SylvainPasche\">SylvainPasche</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Taken\">Taken</a>",
    "title": "Components.utils.import"
}