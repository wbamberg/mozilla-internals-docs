{
    "content": "<p></p><div class=\"blockIndicator obsolete obsoleteHeader\"><p><strong><span class=\"icon-only-inline\" title=\"This is an obsolete API and is no longer guaranteed to work.\"><i class=\"icon-trash\"> </i></span> Obsolete</strong><br>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</p></div><p></p>\n<p><a class=\"external\" href=\"http://mxr.mozilla.org/mozilla-central/source/xpcom/obsolete/nsIRegistry.idl#45\" title=\"http://mxr.mozilla.org/mozilla-central/source/xpcom/obsolete/nsIRegistry.idl#45\">nsIRegistry</a> on MXR</p>\n<p>Other documentation: <a class=\"external\" href=\"http://lxr.mozilla.org/mozilla/source/modules/libreg\">libreg source</a>, <a class=\"external\" href=\"http://lxr.mozilla.org/mozilla/source/modules/libreg/src/reg.h\">reg.h in particular</a></p>\n<p>Okay!</p>\n<p><a href=\"/en/Appreg\" title=\"en/Appreg\">appreg</a>.</p>\n<p>It works like this.</p>\n<pre class=\"eval\">var Cc = Components.classes;\nvar Ci = Components.interfaces;\nvar rc = Cc[\"@mozilla.org/registry;1\"];\nvar rs = rc.getService(Ci.nsIRegistry);\n</pre>\n<p>Now you have the registry service.</p>\n<pre class=\"eval\">rs.openWellKnownRegistry(2);  // 2 signifies the ApplicationRegistry, if I understand right\nvar st = rs.enumerateAllSubtrees(2);  // 2 signifies \"common\", see libreg source (reg.h) for info\n</pre>\n<p>Now you have an <a href=\"/en/XPCOM_Interface_Reference/nsIEnumerator\" title=\"en/nsIEnumerator\">nsIEnumerator</a> that can report the subtrees.</p>\n<pre class=\"eval\">try {\n  st.first();\n  do {\n    var data = st.currentItem();\n    if( data instanceof Ci.nsIRegistryNode )\n      print(\"nsIRegistryNode: \" + data.nameUTF8 + \" (\" + data.key + \")\");\n    st.next();\n  } while( Components.lastResult == 0 );\n} catch(e) {}\n</pre>\n<p>Now, the output is something like:</p>\n<pre class=\"eval\">Profiles (344)\nProfiles/default (530)\nProfiles/foo (1046)\nProfiles/bar (1518)\n</pre>\n<p>The number inside the parenthesis is the \"key.\" You can use this key with the rest of the nsIRegistry API (see <a class=\"external\" href=\"http://mxr.mozilla.org/mozilla-central/source/xpcom/obsolete/nsIRegistry.idl#45\" title=\"http://mxr.mozilla.org/mozilla-central/source/xpcom/obsolete/nsIRegistry.idl#45\">MXR</a>).</p>\n<p>Now, I know from visual inspection that there's a key called \"directory\" for each profile. I don't know how to get the other keys' names automatically, but I <em>do</em> know how to look up the directory for a particular profile.</p>\n<pre class=\"eval\">js&gt; rs.getStringUTF8(530, \"directory\")  // 530: key corresponding with Profiles/default\n</pre>\n<p>The output is something like:</p>\n<pre class=\"eval\">/home/lion/.mozilla/default/awp83kud.slt\n</pre>\n<p>Boo-yah!</p>\n<p>Can we change it?</p>\n<pre class=\"eval\">js&gt; rs.setStringUTF8(530, \"directory\", \"/home/lion/somewhere/else\")\njs&gt; rs.getStringUTF8(530, \"directory\")\n/home/lion/somewhere/else\n</pre>\n<p>Yes!</p>\n<p>Now, the only puzzle is: <em>how do you save it?</em></p>\n<pre class=\"eval\">js&gt; rs.flush()  // this is not enough...\n</pre>\n<p>Perhaps if we quit with the <a href=\"/en/XPConnect/appShellService\" title=\"en/XPConnect/appShellService\">XPConnect:appShellService</a>, it will work.</p>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/groovecoder\">groovecoder</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/PWeilbacher\">PWeilbacher</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/LionKimbro\">LionKimbro</a>",
    "title": "nsIRegistry"
}