{
    "content": "<p><a href=\"/en-US/docs/XPConnect\">XPConnect</a> works transparently in Mozilla and <a href=\"/en-US/docs/XPConnect/xpcshell\">xpcshell</a> to give you access to <a href=\"/en-US/docs/XPCOM\">XPCOM</a> components.</p>\n<p>Commonly, we start our scripts like so:</p>\n<pre class=\"eval\">var Cc = <a href=\"/en-US/docs/Components.classes\">Components.classes</a>;\nvar Ci = <a href=\"/en-US/docs/Components.interfaces\">Components.interfaces</a>;\n</pre>\n<p>If we want to get a hold of a component, we then do something like:</p>\n<pre class=\"eval\">var rc = Cc[\"@mozilla.org/registry;1\"];\nvar rs = rc.getService(Ci.nsIRegistry);\n</pre>\n<hr>\n<p>See also:</p>\n<ul>\n <li><a href=\"/en-US/docs/XPConnect/xpcshell\">xpcshell</a> -- how to get a command line interface to JavaScript</li>\n</ul>\n<h2 id=\"More_Info\">More Info</h2>\n<p>As was already stated, it is common to start addon scripts like:</p>\n<pre class=\"eval\">var Cc = <a href=\"/en-US/docs/Components.classes\">Components.classes</a>;\nvar Ci = <a href=\"/en-US/docs/Components.interfaces\">Components.interfaces</a>;\n</pre>\n<p>There is also another way to start, which is exactly equivalent to the above.</p>\n<pre class=\"eval\">var {Cc: classes, Ci: interfaces} = Components;\n</pre>\n<p>There are many more than just classes and interfaces.</p>\n<pre class=\"eval\">var {\n    Cu: utils,\n    Ci: interfaces,\n    Cc: classes,\n    Cr: results,\n    Cs: stack,\n    Cm: manager,\n    Ce: Exception,\n} = Components;\n</pre>\n<p>Here is a full breakdown of what is contained in Components. Any of the below can be accessed by Components.BLAH (IE: Components.isSuccessCode)</p>\n<pre class=\"eval\">utils=[object nsXPCComponents_Utils]\ninterfaces=[object nsXPCComponents_Interfaces]\nclasses=[object nsXPCComponents_Classes]\nresults=[object nsXPCComponents_Results]\nisSuccessCode=function isSuccessCode() {\n[native code]\n}\nConstructor=[object nsXPCComponents_Constructor]\nQueryInterface=function QueryInterface() {\n[native code]\n}\ninterfacesByID=[object nsXPCComponents_InterfacesByID]\nclassesByID=[object nsXPCComponents_ClassesByID]\nstack=JS frame :: Scratchpad/4 :: cDump :: line 8\nmanager=[xpconnect wrapped nsIComponentManager]\nID=[object nsXPCComponents_ID]\nException=[object nsXPCComponents_Exception]\nreportError=function reportError() {\n[native code]\n}\ncanCreateWrapper=function canCreateWrapper() {\n[native code]\n}\ncanCallMethod=function canCallMethod() {\n[native code]\n}\ncanGetProperty=function canGetProperty() {\n[native code]\n}\ncanSetProperty=function canSetProperty() {\n[native code]\n}\n</pre>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Noitidart\">Noitidart</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/groovecoder\">groovecoder</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/pictureaday\">pictureaday</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Jorend\">Jorend</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/LionKimbro\">LionKimbro</a>",
    "title": "Using components"
}