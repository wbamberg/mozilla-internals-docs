{
    "content": "<p></p>\n<p>This method is used to determine the global object with which an object is associated. This is the global object in place at the time the object was created, which is to say the global object used when executing the script that created the object.</p>\n<h3 id=\"Syntax\">Syntax</h3>\n<pre class=\"eval\">var global = Components.utils.getGlobalForObject(<em>obj</em>);\n</pre>\n<h3 id=\"Parameters\">Parameters</h3>\n<dl> <dt><code>obj</code></dt> <dd>an object whose corresponding global object is to be retrieved; non-optional, must be object-valued</dd>\n</dl>\n<h3 id=\"Example\">Example</h3>\n<pre class=\"eval\">var obj = {};\nfunction foo() { }\nvar global = this;\n\nvar g1 = Components.utils.getGlobalForObject(foo);\nvar g2 = Components.utils.getGlobalForObject(obj);\n// g1 === global, g2 === global, g1 === g2\n\n// In a script in another window\nvar global2 = this;\nfunction bar() { }\nvar obj2 = {};\n\n// Then, assuming bar refers to the function defined in that other window:\nvar o1 = Components.utils.getGlobalForObject(bar);\nvar o2 = Components.utils.getGlobalForObject(obj2);\n// o1 === global2, o2 === global2\n</pre>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/teoli\">teoli</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/trevorh\">trevorh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Waldo\">Waldo</a>",
    "title": "Components.utils.getGlobalForObject"
}