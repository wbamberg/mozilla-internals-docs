{
    "content": "<p>The XPCOM Glue is a static library which component developers and embedders can link against. It allows developers to link only against the frozen XPCOM method symbols and maintain compatibility with multiple versions of XPCOM.</p>\n\n<h3 id=\"Compiling_or_linking_against_XPCOM_headers\" name=\"Compiling_or_linking_against_XPCOM_headers\">Compiling or linking against XPCOM headers</h3>\n\n<p>There are three ways to compile/link against XPCOM headers/libraries:</p>\n\n<h4 id=\"Frozen_linkage:_dependent_glue_.28dependent_on_xpcom.dll.29\" name=\"Frozen_linkage:_dependent_glue_.28dependent_on_xpcom.dll.29\">Frozen linkage: dependent glue (dependent on xpcom.dll)</h4>\n\n<p>XPCOM modules, i.e. extension or XULRunner application components, should use the dependent glue.</p>\n\n<p>Code which wishes to use only frozen symbols but can tolerate a load-time dependency on xpcom.dll should link against xpcomglue_s.lib and xpcom.lib. It should not link against xpcom_core.lib. This is the case for XPCOM components, because they are loaded into Mozilla which already has full XPCOM loaded and initialized.</p>\n\n<h4 id=\"Frozen_linkage:_standalone_glue_.28no_DLL_dependencies.29\" name=\"Frozen_linkage:_standalone_glue_.28no_DLL_dependencies.29\">Frozen linkage: standalone glue (no DLL dependencies)</h4>\n\n<div class=\"note\">\n<p><strong>Note:</strong> Support for locating a standalone glue was removed in <span title=\"(Firefox 6.0 / Thunderbird 6.0 / SeaMonkey 2.3)\">Gecko 6.0</span>.</p>\n</div>\n\n<p>Use this when you have a custom application where you want to embed Gecko to show webpages in your own window. I.e. this linkage strategy is used when an embedder needs to bootstrap XPCOM by finding a compatible <a href=\"/en/GRE\" title=\"en/GRE\">GRE</a> on disk and loading it.</p>\n\n<p>In order to use XPCOM, the embedding application first needs to find where the XPCOM runtime is located. This is typically done using <a href=\"/en/GRE_GetGREPathWithProperties\" title=\"en/GRE_GetGREPathWithProperties\">GRE_GetGREPathWithProperties</a>. Then, the code must call XPCOMGlueStartup, which will dynamically link against the XPCOM runtime. Only then can the embedding application initialize and use XPCOM.</p>\n\n<p>Embedding code which wishes to use only frozen symbols and cannot tolerate a load-time dependency on <code>xpcom.dll</code> should <code>#define XPCOM_GLUE 1</code> while compiling, and link against <code>xpcomglue.lib</code>. It should <em>not</em> link against <code>xpcomglue_s.lib</code> or <code>xpcom.lib</code>.</p>\n\n<p>Embedders using the standalone glue typically also need to avoid linking against NSPR as well. However, when using <strong>threadsafe</strong> together with the glue libraries from Gecko 1.8 or later, a special step needs to be taken to use <code>NS_IMPL_THREADSAFE_ISUPPORTS<em>n</em></code>. This is because it forces a dependency on the NSPR library, which can otherwise be avoided. As described in <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=299664\" title=\"FIXED: add support for MOZ_USE_NSPR w/ XPCOM_GLUE\">bug 299664</a>, the preprocessor symbol <code>XPCOM_GLUE_USE_NSPR</code> needs to be defined.</p>\n\n<h4 id=\"Using_Mozilla_internal_linkage\" name=\"Using_Mozilla_internal_linkage\">Using Mozilla internal linkage</h4>\n\n<p>Mozilla internal code defines MOZILLA_INTERNAL_API while compiling and links against xpcom.lib and xpcom_core.lib. In almost all cases embedders should *not* use internal linkage. Components using internal linkage will have shared-library dependencies against non-frozen symbols in the XPCOM libraries, and will not work with any other versions of XPCOM other than the one it was compiled against.</p>\n\n<p>Internal linkage will be unavailable to extension authors in XULRunner 1.9 (Firefox 3) because the nonfrozen symbols will not be exported from libxul. Extension and application authors currently using internal linkage should read the guide on <a href=\"/en/Migrating_from_Internal_Linkage_to_Frozen_Linkage\" title=\"en/Migrating_from_Internal_Linkage_to_Frozen_Linkage\">Migrating from Internal Linkage to Frozen Linkage</a>.</p>\n\n<h3 id=\"Sample_Compiler.2FLinker_Flags\" name=\"Sample_Compiler.2FLinker_Flags\">Sample Compiler/Linker Flags</h3>\n\n<p>Code compiled using XPCOM headers should always <code>#include \"xpcom-config.h\"</code> from the SDK, to ensure that XPCOM #defines are correct.</p>\n\n<table class=\"fullwidth-table\">\n <tbody>\n  <tr>\n   <th>Linking Strategy:</th>\n   <th style=\"text-align: center;\">Dependent Glue</th>\n   <th style=\"text-align: center;\">Standalone Glue</th>\n  </tr>\n  <tr>\n   <th colspan=\"3\">Compiler Flags:</th>\n  </tr>\n  <tr>\n   <th>Cross-Platform</th>\n   <td><code style=\"white-space: pre;\">#include \"xpcom-config.h\"</code></td>\n   <td><code style=\"white-space: pre;\">#include \"xpcom-config.h\"<br>\n    #define XPCOM_GLUE</code></td>\n  </tr>\n  <tr>\n   <th>Windows</th>\n   <td colspan=\"2\" style=\"text-align: center;\"><code style=\"white-space: pre;\">/FI \"xpcom-config.h\"</code></td>\n  </tr>\n  <tr>\n   <th>Linux</th>\n   <td colspan=\"2\" style=\"text-align: center;\"><code style=\"white-space: pre;\">-include \"xpcom-config.h\"</code></td>\n  </tr>\n  <tr>\n   <th colspan=\"3\">Linker Flags:</th>\n  </tr>\n  <tr>\n   <th>Windows</th>\n   <td>\n    <p>For older versions of the Firefox SDK:</p>\n\n    <p><code>-LIBPATH:<var>c:/path/to/sdk/lib</var> xpcomglue_s.lib xpcom.lib nspr4.lib</code></p>\n\n    <p>For recent versions of the Firefox SDK (at least version 42, but possibly earlier versions as well):</p>\n\n    <p><code>-LIBPATH:c/path/to/sdk/lib xpcomglue_s.lib xul.lib nss3.lib mozcrt.lib</code></p>\n   </td>\n   <td>-LIBPATH:<var>c:/path/to/sdk/lib</var> xpcomglue.lib</td>\n  </tr>\n  <tr>\n   <th>Mac</th>\n   <td>\n    <p><code>-L<var>/path/to/sdk/lib</var> -L<var>/path/to/sdk/bin</var> -Wl,-executable-path,<var>/path/to/sdk/bin</var> -lxpcomglue_s -lxpcom -lnspr4</code></p>\n\n    <p>when building against a XulRunner derived SDK, use:<br>\n     <code>-L<var>/path/to/sdk/lib</var> -L<var>/path/to/xulrunner-bin</var> -Wl,-executable_path,<var>/path/to/xulrunner-bin</var> -lxpcomglue_s -lxpcom -lnspr4</code><br>\n     where 'xulrunner-bin' is either <code>/Library/Frameworks/XUL.framework/Versions/Current/</code> or <code>/path/to/xulrunner-build/[platform]/dist/bin</code></p>\n   </td>\n   <td><code>-L<var>/path/to/sdk/lib</var> -lxpcomglue</code></td>\n  </tr>\n  <tr>\n   <th>Linux</th>\n   <td>\n    <p><code>-L<var>/path/to/sdk/lib</var> -L<var>/path/to/sdk/bin</var> -Wl,-rpath-link,<var>/path/to/sdk/bin</var> -lxpcomglue_s -lxpcom -lnspr4</code></p>\n\n    <p>Write it <strong>exactly</strong> as stated, see Notes.</p>\n   </td>\n   <td><code>-L<var>/path/to/sdk/lib</var> -lxpcomglue</code></td>\n  </tr>\n </tbody>\n</table>\n\n<h4 id=\"Notes\" name=\"Notes\">Notes</h4>\n\n<ul>\n <li>Never link against xpcomglue.lib and xpcomglue_s.lib at the same time.</li>\n <li>Never link against xpcomglue.lib and xpcom.lib at the same time.</li>\n <li>For XULRunner 1.9, on Linux you should use either the <code>.pc</code> files. For example: <code>pkg-config --cflags --libs libxul.pc</code></li>\n <li>These instructions are for Mozilla 1.8 and above. When using a SDK from Mozilla 1.7 or earlier, you must define MOZILLA_STRICT_API when using any form of the glue.</li>\n <li>Linux and Mac: Make sure the Gecko libraries are listed <strong>after</strong> your object (.o) files on the link line.</li>\n <li>Linux and Mac: Write the linker options <strong>exactly</strong> as stated (just replacing the <var>/path/to/sdk/</var>), otherwise you get an <code>undefined symbol: ...NS_TableDrivenQI...QITableEntry...</code> at runtime (not compile time) (in debug builds) or your module just won't load (in optimized builds).</li>\n <li>In principle, <code style=\"white-space: pre;\">#include \"mozilla-config.h\"</code> should also work, if it's the first <code style=\"white-space: pre;\">#include </code> in .cpp, but preprocessor option is how it's usually included.</li>\n <li>For XULRunner 2.0, you also need to link against mozalloc.  This is not a backwards-compatible change with 1.9.x and earlier.  On Linux and Mac, add \"-lmozalloc\" exactly after \"-lnspr4\" in your linker invocation.  On Windows, add \"mozalloc.lib\" after \"nspr4.lib\".  Please see <a href=\"/en/XPCOM_Glue/XPCOM_Glue_without_mozalloc/\">XPCOM Glue without mozalloc</a> to learn how to create XPCOM components that aren't dependant on mozalloc, and thus are compatible with versions of XULRunner prior to 2.0.</li>\n <li>To link against XPCOM using recent versions of the Firefox SDK (at least version 42, but possibly earlier versions as well), you need to link against xul (libxul/xul.lib).</li>\n <li>To link against NSPR using recent versions of the Firefox SDK (at least version 42, but possibly earlier versions as well), you need to link against NSS, libnss3/nss3.lib in particular. This is because NSPR is now merged into NSS during the build process.</li>\n <li>To link against libxpcomglue_s/xpcomglue_s.lib using recent versions of the Firefox SDK (at least version 42, but possibly earlier versions as well), you also need to link against libmozcrt/mozcrt.lib.</li>\n</ul>\n\n<h3 id=\"See_Also\" name=\"See_Also\">See Also</h3>\n\n<ul>\n <li><a href=\"/en/Using_the_Gecko_SDK\" title=\"en/Using_the_Gecko_SDK\">Using the Gecko SDK</a></li>\n <li><a href=\"/en/Migrating_from_Internal_Linkage_to_Frozen_Linkage\" title=\"en/Migrating_from_Internal_Linkage_to_Frozen_Linkage\">Migrating from Internal Linkage to Frozen Linkage</a></li>\n</ul>",
    "contributors": "<a href=\"https://developer.mozilla.org/en-US/profiles/wbamberg\">wbamberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot\">mdnwebdocs-bot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/brianfcoleman\">brianfcoleman</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/pranay.kumar\">pranay.kumar</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sheppy\">Sheppy</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/kscarfone\">kscarfone</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/azitnay\">azitnay</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/cgj\">cgj</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Mossop\">Mossop</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Sevenspade\">Sevenspade</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Plasticmillion\">Plasticmillion</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ultranet\">ultranet</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/BenB\">BenB</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/ColinWalters\">ColinWalters</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/bsmedberg\">bsmedberg</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Livemylife\">Livemylife</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/sdwilsh\">sdwilsh</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/iosart\">iosart</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/cbiesinger\">cbiesinger</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Erdogduemlak\">Erdogduemlak</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Robert%20Marshall\">Robert Marshall</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/NickolayBot\">NickolayBot</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Pjandrel\">Pjandrel</a>, <a href=\"https://developer.mozilla.org/en-US/profiles/Nickolay\">Nickolay</a>",
    "title": "XPCOM glue"
}